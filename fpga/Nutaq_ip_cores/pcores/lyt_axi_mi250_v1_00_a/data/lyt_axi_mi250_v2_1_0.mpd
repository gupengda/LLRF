#------------------------------------------------------------------------------
# Filename:        lyt_axi_mi250_v2_1_0.mpd
# Description:     Microprocessor Peripheral Description
# Generated by:    khalid.bensadek
# Date:            2012-11-01 08:43:06
# Copyright (c) 2001-2012 LYRtech RD Inc.  All rights reserved.
#
# LYRtech RD Inc.
#------------------------------------------------------------------------------


BEGIN lyt_axi_mi250

#------------------------------------------------------------------------------
# Peripheral Options
#-----------------------------------------------------------------------------
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE
OPTION IP_GROUP = MICROBLAZE:USER
OPTION DESC = AXI MI250
OPTION ARCH_SUPPORT_MAP = (OTHERS=DEVELOPMENT)
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf

#------------------------------------------------------------------------------
# Bus Interfaces
#-----------------------------------------------------------------------------
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

#------------------------------------------------------------------------------
# Generics for VHDL or Parameters for Verilog
#-----------------------------------------------------------------------------
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_MIN_SIZE = 0x000001ff, DT = std_logic_vector, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_USE_WSTRB = 1, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_DPHASE_TIMEOUT = 8, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x100, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI
#user generics
PARAMETER ADC_CLKIN_FREQ_MHZ = 250.0, DT = REAL
PARAMETER ADC_CLKFBOUT_MULT_F = 8.0, DT = REAL
PARAMETER ADC_DIVCLK_DIVIDE = 2, DT = INTEGER
PARAMETER ADC_CLKOUT0_DIVIDE_F = 4.0, DT = REAL
PARAMETER C_REFCLK_FREQ_MHZ = 100, DT = INTEGER, RANGE = (100:500)	      

#------------------------------------------------------------------------------
# Ports
#------------------------------------------------------------------------------
PORT S_AXI_ACLK = "", DIR = I, SIGIS = CLK, BUS = S_AXI
PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI

# user interfaces
IO_INTERFACE IO_IF = FMC_IF, IO_TYPE = GPIO
IO_INTERFACE IO_IF = USER_IF, IO_TYPE = GPIO

# user ports
PORT i_RefClk200MHz_p =  " ", DIR = I, SIGIS = CLK
#PORT i_LogicRst_p     =  " ", DIR = I,SIGIS = RST
PORT o_Mi250PllScl_p 	=  " ", DIR = O, IO_IF = FMC_IF
PORT o_Mi250PllMosi_p 	=  " ", DIR = O, IO_IF = FMC_IF
PORT i_Mi250PllMiso_p 	=  " ", DIR = I, IO_IF = FMC_IF
PORT o_nMi250PllCs_p 	=  " ", DIR = O, IO_IF = FMC_IF
PORT o_Mi250AdcScl_p 	=  " ", DIR = O, IO_IF = FMC_IF
PORT o_Mi250AdcMosi_p 	=  " ", DIR = O, IO_IF = FMC_IF
PORT i_Mi250AdcMisoAb_p =  " ", DIR = I, IO_IF = FMC_IF
PORT i_Mi250AdcMisoCd_p =  " ", DIR = I, IO_IF = FMC_IF
PORT i_Mi250AdcMisoEf_p =  " ", DIR = I, IO_IF = FMC_IF
PORT i_Mi250AdcMisoGh_p =  " ", DIR = I, IO_IF = FMC_IF
PORT o_nMi250AdcCsAb_p 	=  " ", DIR = O, IO_IF = FMC_IF
PORT o_nMi250AdcCsCd_p 	=  " ", DIR = O, IO_IF = FMC_IF
PORT o_nMi250AdcCsEf_p 	=  " ", DIR = O, IO_IF = FMC_IF
PORT o_nMi250AdcCsGh_p 	=  " ", DIR = O, IO_IF = FMC_IF
PORT o_Mi250AdcRst_p 	=  " ", DIR = O, IO_IF = FMC_IF
PORT o_Mi250PllRefEn_p 	=  " ", DIR = O, IO_IF = FMC_IF
PORT i_Mi250PllStatus_p =  " ", DIR = I, IO_IF = FMC_IF
PORT o_Mi250PllFunction_p =  " ", DIR = O, IO_IF = FMC_IF
PORT o_Mi250VcoPwrEn_p 	= " ", DIR = O, IO_IF = FMC_IF
PORT i_nMi250MonInt_p 	=  " ", DIR = I, IO_IF = FMC_IF
PORT i_Mi250TrigToFpga_p =  " ", DIR = I, IO_IF = FMC_IF
PORT i_pMi250ClkToFpga_p =  " ", DIR = I, IO_IF = FMC_IF
PORT i_nMi250ClkToFpga_p =  " ", DIR = I, IO_IF = FMC_IF
PORT i_pMi250ExternClk_p =  " ", DIR = I, IO_IF = FMC_IF
PORT i_nMi250ExternClk_p =  " ", DIR = I, IO_IF = FMC_IF
PORT idp_Mi250AdcClkAB_p =  " ", DIR = I, IO_IF = FMC_IF
PORT idn_Mi250AdcClkAB_p =  " ", DIR = I, IO_IF = FMC_IF
PORT idp_Mi250AdcClkCD_p =  " ", DIR = I, IO_IF = FMC_IF
PORT idn_Mi250AdcClkCD_p =  " ", DIR = I, IO_IF = FMC_IF
PORT idp_Mi250AdcClkEF_p =  " ", DIR = I, IO_IF = FMC_IF
PORT idn_Mi250AdcClkEF_p =  " ", DIR = I, IO_IF = FMC_IF
PORT idp_Mi250AdcClkGH_p =  " ", DIR = I, IO_IF = FMC_IF
PORT idn_Mi250AdcClkGH_p =  " ", DIR = I, IO_IF = FMC_IF
PORT iv7dp_Mi250AdcAData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dn_Mi250AdcAData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dp_Mi250AdcBData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dn_Mi250AdcBData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dp_Mi250AdcCData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dn_Mi250AdcCData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dp_Mi250AdcDData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dn_Mi250AdcDData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dp_Mi250AdcEData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dn_Mi250AdcEData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dp_Mi250AdcFData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dn_Mi250AdcFData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dp_Mi250AdcGData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dn_Mi250AdcGData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dp_Mi250AdcHData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT iv7dn_Mi250AdcHData_p =  " ", DIR = I, VEC = [6:0], IO_IF = FMC_IF
PORT o_Mi250AdcDataClkOut_p =  " ", DIR = O, SIGIS = CLK, IO_IF = USER_IF
PORT ov14_Mi250AdcADataOut_p =  " ", DIR = O, VEC = [13:0], IO_IF = USER_IF
PORT ov14_Mi250AdcBDataOut_p =  " ", DIR = O, VEC = [13:0], IO_IF = USER_IF
PORT ov14_Mi250AdcCDataOut_p =  " ", DIR = O, VEC = [13:0], IO_IF = USER_IF
PORT ov14_Mi250AdcDDataOut_p =  " ", DIR = O, VEC = [13:0], IO_IF = USER_IF
PORT ov14_Mi250AdcEDataOut_p =  " ", DIR = O, VEC = [13:0], IO_IF = USER_IF
PORT ov14_Mi250AdcFDataOut_p =  " ", DIR = O, VEC = [13:0], IO_IF = USER_IF
PORT ov14_Mi250AdcGDataOut_p =  " ", DIR = O, VEC = [13:0], IO_IF = USER_IF
PORT ov14_Mi250AdcHDataOut_p =  " ", DIR = O, VEC = [13:0], IO_IF = USER_IF
PORT o_Mi250AdcADataValid_p =  " ", DIR = O, IO_IF = USER_IF
PORT o_Mi250AdcBDataValid_p =  " ", DIR = O, IO_IF = USER_IF
PORT o_Mi250AdcCDataValid_p =  " ", DIR = O, IO_IF = USER_IF
PORT o_Mi250AdcDDataValid_p =  " ", DIR = O, IO_IF = USER_IF
PORT o_Mi250AdcEDataValid_p =  " ", DIR = O, IO_IF = USER_IF
PORT o_Mi250AdcFDataValid_p =  " ", DIR = O, IO_IF = USER_IF
PORT o_Mi250AdcGDataValid_p =  " ", DIR = O, IO_IF = USER_IF
PORT o_Mi250AdcHDataValid_p =  " ", DIR = O, IO_IF = USER_IF
PORT o_Mi250AdcTrigout_p 	=  " ", DIR = O, IO_IF = USER_IF
END
