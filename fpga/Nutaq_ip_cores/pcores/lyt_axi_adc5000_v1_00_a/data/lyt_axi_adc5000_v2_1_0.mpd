#------------------------------------------------------------------------------
# Filename:        lyt_axi_adc5000_v2_1_0.mpd
# Description:     Microprocessor Peripheral Description
# Generated by:    khalid.bensadek
# Date:            2012-07-24 14:03:16
# Copyright (c) 2001-2012 LYRtech RD Inc.  All rights reserved.
#
# LYRtech RD Inc.
#------------------------------------------------------------------------------


BEGIN lyt_axi_adc5000

#------------------------------------------------------------------------------
# Peripheral Options
#-----------------------------------------------------------------------------
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION RUN_NGCBUILD = TRUE
OPTION STYLE = MIX
OPTION HDL = VHDL
OPTION IP_GROUP = MICROBLAZE:USER
OPTION DESC = AXI ADC 5000 FMC Module
OPTION ARCH_SUPPORT_MAP = (OTHERS=DEVELOPMENT)

#------------------------------------------------------------------------------
# Bus Interfaces
#-----------------------------------------------------------------------------
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

#------------------------------------------------------------------------------
# Generics for VHDL or Parameters for Verilog
#-----------------------------------------------------------------------------
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_MIN_SIZE = 0x000001ff, DT = std_logic_vector, BUS = S_AXI
PARAMETER C_USE_WSTRB = 1, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_DPHASE_TIMEOUT = 8, DT = INTEGER
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x100, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_SLV_AWIDTH = 32, DT = INTEGER
PARAMETER C_SLV_DWIDTH = 32, DT = INTEGER
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI

#------------------------------------------------------------------------------
# Ports
#------------------------------------------------------------------------------
PORT S_AXI_ACLK = "", DIR = I, SIGIS = CLK, BUS = S_AXI
PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI

# user interfaces                               
IO_INTERFACE IO_IF = FMC_IF, IO_TYPE = GPIO  
IO_INTERFACE IO_IF = USER_IF, IO_TYPE = GPIO  

# User ports
PORT i_RefClk200MHz_p            = "", DIR = I, SIGIS = CLK
PORT o_DataClk_p              = "", DIR = O, SIGIS = CLK, IO_IF = USER_IF
PORT ov80_DataChA_p             = "", DIR = O, VEC = [79:0], IO_IF = USER_IF
PORT ov80_DataChB_p             = "", DIR = O, VEC = [79:0], IO_IF = USER_IF
PORT ov80_DataChC_p             = "", DIR = O, VEC = [79:0], IO_IF = USER_IF
PORT ov80_DataChD_p             = "", DIR = O, VEC = [79:0], IO_IF = USER_IF
PORT o_OverRangeChA_p                = "", DIR = O, IO_IF = USER_IF
PORT o_OverRangeChB_p                = "", DIR = O, IO_IF = USER_IF
PORT o_OverRangeChC_p                = "", DIR = O, IO_IF = USER_IF
PORT o_OverRangeChD_p                = "", DIR = O, IO_IF = USER_IF
PORT o_ReadyChA_p              = "", DIR = O, IO_IF = USER_IF
PORT o_ReadyChB_p              = "", DIR = O, IO_IF = USER_IF
PORT o_ReadyChC_p              = "", DIR = O, IO_IF = USER_IF
PORT o_ReadyChD_p              = "", DIR = O, IO_IF = USER_IF
PORT o_Trigger_p              = "", DIR = O, IO_IF = USER_IF
# FMC ports
PORT idp_Fmc_Clk2Fpga_p          = "", DIR = I, SIGIS = CLK, IO_IF = FMC_IF
PORT idn_Fmc_Clk2Fpga_p          = "", DIR = I, SIGIS = CLK, IO_IF = FMC_IF
PORT idp_Fmc_ext_trigger_p       = "", DIR = I, IO_IF = FMC_IF
PORT idn_Fmc_ext_trigger_p        = "", DIR = I, IO_IF = FMC_IF
PORT odp_Fmc_Sync_p              = "", DIR = O, IO_IF = FMC_IF
PORT odn_Fmc_Sync_p              = "", DIR = O, IO_IF = FMC_IF
PORT idp_Fmc_adr_p             = "", DIR = I, SIGIS = CLK, IO_IF = FMC_IF
PORT idn_Fmc_adr_p             = "", DIR = I, SIGIS = CLK, IO_IF = FMC_IF
PORT iv10dp_Fmc_ad_p             = "", DIR = I, VEC = [9:0], IO_IF = FMC_IF
PORT iv10dn_Fmc_ad_p             = "", DIR = I, VEC = [9:0], IO_IF = FMC_IF
PORT idp_Fmc_aor_p               = "", DIR = I, IO_IF = FMC_IF
PORT idn_Fmc_aor_p               = "", DIR = I, IO_IF = FMC_IF
PORT idp_Fmc_bdr_p               = "", DIR = I, SIGIS = CLK, IO_IF = FMC_IF
PORT idn_Fmc_bdr_p               = "", DIR = I, SIGIS = CLK, IO_IF = FMC_IF
PORT iv10dp_Fmc_bd_p             = "", DIR = I, VEC = [9:0], IO_IF = FMC_IF
PORT iv10dn_Fmc_bd_p             = "", DIR = I, VEC = [9:0], IO_IF = FMC_IF
PORT idp_Fmc_bor_p               = "", DIR = I, IO_IF = FMC_IF
PORT idn_Fmc_bor_p               = "", DIR = I, IO_IF = FMC_IF
PORT idp_Fmc_cdr_p               = "", DIR = I, SIGIS = CLK, IO_IF = FMC_IF
PORT idn_Fmc_cdr_p               = "", DIR = I, SIGIS = CLK, IO_IF = FMC_IF
PORT iv10dp_Fmc_cd_p             = "", DIR = I, VEC = [9:0], IO_IF = FMC_IF
PORT iv10dn_Fmc_cd_p             = "", DIR = I, VEC = [9:0], IO_IF = FMC_IF
PORT idp_Fmc_cor_p               = "", DIR = I, IO_IF = FMC_IF
PORT idn_Fmc_cor_p               = "", DIR = I, IO_IF = FMC_IF
PORT idp_Fmc_ddr_p               = "", DIR = I, SIGIS = CLK, IO_IF = FMC_IF
PORT idn_Fmc_ddr_p               = "", DIR = I, SIGIS = CLK, IO_IF = FMC_IF
PORT iv10dp_Fmc_dd_p             = "", DIR = I, VEC = [9:0], IO_IF = FMC_IF
PORT iv10dn_Fmc_dd_p             = "", DIR = I, VEC = [9:0], IO_IF = FMC_IF
PORT idp_Fmc_dor_p               = "", DIR = I, IO_IF = FMC_IF
PORT idn_Fmc_dor_p               = "", DIR = I, IO_IF = FMC_IF

END
