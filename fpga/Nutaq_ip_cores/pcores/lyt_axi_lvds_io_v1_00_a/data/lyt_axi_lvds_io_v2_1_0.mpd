###################################################################
##
## Name     : lyt_axi_lvds_io
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN lyt_axi_lvds_io

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION IP_GROUP = MICROBLAZE:USER
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE
OPTION DESC = AXI LVDS IO
OPTION ARCH_SUPPORT_MAP = (OTHERS=DEVELOPMENT)
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf

## Generics for VHDL or Parameters for Verilog
PARAMETER USE_SYNCHRONOUS_GPIO_GROUP0 = 1, DT = INTEGER
PARAMETER USE_SYNCHRONOUS_GPIO_GROUP1 = 1, DT = INTEGER
PARAMETER DATA_IDELAY_VALUE_GROUP0 = 0, DT = INTEGER
PARAMETER CLK_IDELAY_VALUE_GROUP0 = 0, DT = INTEGER
PARAMETER DATA_IDELAY_VALUE_GROUP1 = 0, DT = INTEGER
PARAMETER CLK_IDELAY_VALUE_GROUP1 = 0, DT = INTEGER
PARAMETER C_BOTTOM_POSITION = true, DT = boolean

#------------------------------------------------------------------------------
# Bus Interfaces
#-----------------------------------------------------------------------------
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

#------------------------------------------------------------------------------
# Generics for VHDL or Parameters for Verilog
#-----------------------------------------------------------------------------
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_MIN_SIZE = 0x000001ff, DT = std_logic_vector, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_USE_WSTRB = 1, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_DPHASE_TIMEOUT = 8, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x100, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI

## Ports
PORT i_RefClk200MHz_p = "", DIR = I, SIGIS = CLK
PORT i_UserClk_p = "", DIR = I, SIGIS = CLK
PORT iv_UserLvdsGroup0_p = "", DIR = I,  VEC  = [(15-(USE_SYNCHRONOUS_GPIO_GROUP0*2)):0]
PORT iv_UserLvdsGroup1_p = "", DIR = I,  VEC  = [(15-(USE_SYNCHRONOUS_GPIO_GROUP1*2)):0]
PORT ov_UserLvdsGroup0_p = "", DIR = O,  VEC  = [(15-(USE_SYNCHRONOUS_GPIO_GROUP0*2)):0]
PORT ov_UserLvdsGroup1_p = "", DIR = O,  VEC  = [(15-(USE_SYNCHRONOUS_GPIO_GROUP1*2)):0]
PORT i_TxClk0_p = "", DIR = I, SIGIS = CLK
PORT i_TxClk1_p = "", DIR = I, SIGIS = CLK
PORT i_inWrEn0_p 		  = "", DIR = I
PORT i_inWrEn1_p 		  = "", DIR = I
PORT o_inWrAck0_p 		= "", DIR = O
PORT o_inWrAck1_p 		= "", DIR = O
PORT o_full0_p 		   	= "", DIR = O
PORT o_full1_p 			  = "", DIR = O	
PORT i_outRdEn0_p 		= "", DIR = I
PORT i_outRdEn1_p 		= "", DIR = I
PORT o_outValid0_p 		= "", DIR = O
PORT o_outValid1_p 		= "", DIR = O
PORT o_empty0_p 		  = "", DIR = O
PORT o_empty1_p 		  = "", DIR = O
PORT o_RxClk0_p	      = "", DIR = O, SIGIS = CLK
PORT o_RxClk1_p 	    = "", DIR = O, SIGIS = CLK
PORT iov16_Group0_padIOp_p = "", DIR = IO, VEC = [15:0], ENDIAN = LITTLE, THREE_STATE=FALSE, IOB_STATE=BUF
PORT iov16_Group1_padIOp_p = "", DIR = IO, VEC = [15:0], ENDIAN = LITTLE, THREE_STATE=FALSE, IOB_STATE=BUF
PORT iov16_Group0_padIOn_p = "", DIR = IO, VEC = [15:0], ENDIAN = LITTLE, THREE_STATE=FALSE, IOB_STATE=BUF
PORT iov16_Group1_padIOn_p = "", DIR = IO, VEC = [15:0], ENDIAN = LITTLE, THREE_STATE=FALSE, IOB_STATE=BUF
PORT S_AXI_ACLK = "", DIR = I, SIGIS = CLK, BUS = S_AXI
PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI

END
