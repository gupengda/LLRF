
 PARAMETER VERSION = 2.1.0

#DDR3 sodimm
 PORT idp_Ddr3Refclk_p = ddr3RefClk_s, DIR = I, DIFFERENTIAL_POLARITY = P, CLK_FREQ = 400000000, SIGIS = CLK ##{RECORD_PLAYBACK port :: in_use}
 PORT idn_Ddr3Refclk_p = ddr3RefClk_s, DIR = I, DIFFERENTIAL_POLARITY = N, CLK_FREQ = 400000000, SIGIS = CLK ##{RECORD_PLAYBACK port :: in_use}
 PORT iov64_SodimmDdr3Dq_p = iov64_SodimmDdr3Dq_p, DIR = IO, VEC = [63:0]                                    ##{RECORD_PLAYBACK port :: in_use}
 PORT ov16_SodimmDdr3A_p = v16_SodimmDdr3A_s, DIR = O, VEC = [15:0]                                          ##{RECORD_PLAYBACK port :: in_use}
 PORT ov3_SodimmDdr3Ba_p = v3_SodimmDdr3Ba_s, DIR = O, VEC = [2:0]                                           ##{RECORD_PLAYBACK port :: in_use}
 PORT o_nSodimmDdr3Ras_p = nSodimmDdr3Ras_s, DIR = O                                                         ##{RECORD_PLAYBACK port :: in_use}
 PORT o_nSodimmDdr3Cas_p = nSodimmDdr3Cas_s, DIR = O                                                         ##{RECORD_PLAYBACK port :: in_use}
 PORT o_nSodimmDdr3We_p = nSodimmDdr3We_s, DIR = O                                                           ##{RECORD_PLAYBACK port :: in_use}
 PORT o_nSodimmDdr3Reset_p = nSodimmDdr3Reset_s, DIR = O                                                     ##{RECORD_PLAYBACK port :: in_use}
 PORT o_nSodimmDdr3S0_p = nSodimmDdr3S0_s, DIR = O, VEC = [0:0]                                              ##{RECORD_PLAYBACK port :: in_use}
 PORT o_SodimmDdr3Odt0_p = SodimmDdr3Odt0_s, DIR = O, VEC = [0:0]                                            ##{RECORD_PLAYBACK port :: in_use}
 PORT o_SodimmDdr3Cke0_p = SodimmDdr3Cke0_s, DIR = O, VEC = [0:0]                                            ##{RECORD_PLAYBACK port :: in_use}
 PORT ov8_SodimmDdr3Dm_p = v8_SodimmDdr3Dm_s, DIR = O, VEC = [7:0]                                           ##{RECORD_PLAYBACK port :: in_use}
 PORT iov8dp_SodimmDdr3Dqs_p = iov8dp_SodimmDdr3Dqs_p, DIR = IO, VEC = [7:0]                                 ##{RECORD_PLAYBACK port :: in_use}
 PORT iov8dn_SodimmDdr3Dqs_p = iov8dn_SodimmDdr3Dqs_p, DIR = IO, VEC = [7:0]                                 ##{RECORD_PLAYBACK port :: in_use}
 PORT odp_SodimmDdr3Ck_p = dpSodimmDdr3Ck_s, DIR = O, VEC = [1:0]                                            ##{RECORD_PLAYBACK port :: in_use}
 PORT odn_SodimmDdr3Ck_p = dnSodimmDdr3Ck_s, DIR = O, VEC = [1:0]                                            ##{RECORD_PLAYBACK port :: in_use}
 PORT io_Ddr3I2cSDA_p = iic_ddr3_sda_s, DIR = IO
 PORT io_Ddr3I2cSCL_p = iic_ddr3_scl_s, DIR = IO
#RADIO420X LPC CH1 MAPPING
 PORT iv12_Radio420xfmcLA01LA06_AdcData_p = v12_Radio420xAdcDataCh1_s, DIR = I, VEC = [11:0]                 ##{RADIO420X port :: in_use}
 PORT i_Radio420xfmcLA00N_AdcIQSel_p = Radio420xAdcIQSelCh1_s, DIR = I                                       ##{RADIO420X port :: in_use}
 PORT i_Radio420xfmcLA00P_AdcClk_p = Radio420xAdcClkCh1_s, DIR = I                                           ##{RADIO420X port :: in_use}
 PORT ov12_Radio420xfmcLA18LA23_DacData_p = v12_Radio420xDacDataCh1_s, DIR = O, VEC = [11:0]                 ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA17N_DacIQSel_p = Radio420xDacIQSelCh1_s, DIR = O                                       ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA07N_LimeSpiCs_p = Radio420xLimeSpiCsCh1_s, DIR = O                                     ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA07P_LimeSpiClk_p = Radio420xLimeSpiClkCh1_s, DIR = O                                   ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA08N_LimeSpiMosi_p = Radio420xLimeSpiMosiCh1_s, DIR = O                                 ##{RADIO420X port :: in_use}
 PORT i_Radio420xfmcLA08P_LimeSpiMiso_p = Radio420xLimeSpiMisoCh1_s, DIR = I                                 ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA28P_RefDacSpiCs_p = Radio420xRefDacSpiCsCh1_s, DIR = O                                 ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA27N_RefDacSpiClk_p = Radio420xRefDacSpiClkCh1_s, DIR = O                               ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA27P_RefDacSpiMosi_p = Radio420xRefDacSpiMosiCh1_s, DIR = O                             ##{RADIO420X port :: in_use}
 PORT ov2_Radio420xfmcLA16P_PllCtrlSpiCs_p = v2_Radio420xPllCtrlSpiCsCh1_s, DIR = O, VEC = [1:0]             ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA16N_PllCtrlSpiClk_p = Radio420xPllCtrlSpiClkCh1_s, DIR = O                             ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA15N_PllCtrlSpiMosi_p = Radio420xPllCtrlSpiMosiCh1_s, DIR = O                           ##{RADIO420X port :: in_use}
 PORT i_Radio420xfmcLA15P_PllCtrlSpiMiso_p = Radio420xPllCtrlSpiMisoCh1_s, DIR = I                           ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA31N_RxGainSpiCs_p = Radio420xRxGainSpiCsCh1_s, DIR = O                                 ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA30P_RxGainSpiClk_p = Radio420xRxGainSpiClkCh1_s, DIR = O                               ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA30N_RxGainSpiMosi_p = Radio420xRxGainSpiMosiCh1_s, DIR = O                             ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA31P_TxGainSpiCs_p = Radio420xTxGainSpiCsCh1_s, DIR = O                                 ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA32N_TxGainSpiClk_p = Radio420xTxGainSpiClkCh1_s, DIR = O                               ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA32P_TxGainSpiMosi_p = Radio420xTxGainSpiMosiCh1_s, DIR = O                             ##{RADIO420X port :: in_use}
 PORT i_Radio420xfmcLA25N_PllLock_p = Radio420xPllLockCh1_s, DIR = I                                         ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA10PLimeReset_p = Radio420xLimeResetCh1_s, DIR = O                                      ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLimeLA09NTxEn_p = Radio420xLimeTxEnCh1_s, DIR = O                                        ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLimeLA09PRxEn_p = Radio420xLimeRxEnCh1_s, DIR = O                                        ##{RADIO420X port :: in_use}
 PORT ov2_Radio420xfmcLA12_ClkMuxSin_p = v2_Radio420xClkMuxSinCh1_s, DIR = O, VEC = [1:0]                    ##{RADIO420X port :: in_use}
 PORT ov2_Radio420xfmcLA11_ClkMuxSout_p = v2_Radio420xClkMuxSoutCh1_s, DIR = O, VEC = [1:0]                  ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA13N_ClkMuxLoad_p = Radio420xClkMuxLoadCh1_s, DIR = O                                   ##{RADIO420X port :: in_use}
 PORT o_Radio420xfmcLA13P_ClkMuxConfig_p = Radio420xClkMuxConfigCh1_s, DIR = O                               ##{RADIO420X port :: in_use}
 PORT i_Radio420xfmcLA14P_Pps_p = Radio420xfmcLA14P_PpsCh1_s, DIR = I                                        ##{RADIO420X port :: in_use}

# RADIO420X HPC CH2 MAPPING                                                                                  ##{RADIO420X port :: channel_2_in_use}
 PORT iv12_Radio420xfmcHA01HA06_AdcData_p = v12_Radio420xAdcDataCh2_s, DIR = I, VEC = [11:0]                 ##{RADIO420X port :: channel_2_in_use}
 PORT i_Radio420xfmcHA00N_AdcIQSel_p = Radio420xAdcIQSelCh2_s, DIR = I                                       ##{RADIO420X port :: channel_2_in_use}
 PORT i_Radio420xfmcHA00P_AdcClk_p = Radio420xAdcClkCh2_s, DIR = I                                           ##{RADIO420X port :: channel_2_in_use}
 PORT ov12_Radio420xfmcHB01HB06_DacData_p = v12_Radio420xDacDataCh2_s, DIR = O, VEC = [11:0]                 ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHB00P_DacIQSel_p = Radio420xDacIQSelCh2_s, DIR = O                                       ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcLimeHB00NTxEn_p = Radio420xLimeTxEnCh2_s, DIR = O                                        ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcLimeHA09PRxEn_p = Radio420xLimeRxEnCh2_s, DIR = O                                        ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHA07N_LimeSpiCs_p = Radio420xLimeSpiCsCh2_s, DIR = O                                     ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHA07P_LimeSpiClk_p = Radio420xLimeSpiClkCh2_s, DIR = O                                   ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHA08N_LimeSpiMosi_p = Radio420xLimeSpiMosiCh2_s, DIR = O                                 ##{RADIO420X port :: channel_2_in_use}
 PORT i_Radio420xfmcHA08P_LimeSpiMiso_p = Radio420xLimeSpiMisoCh2_s, DIR = I                                 ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHA14P_RefDacSpiCs_p = Radio420xRefDacSpiCsCh2_s, DIR = O                                 ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHB09N_RefDacSpiClk_p = Radio420xRefDacSpiClkCh2_s, DIR = O                               ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHB09P_RefDacSpiMosi_p = Radio420xRefDacSpiMosiCh2_s, DIR = O                             ##{RADIO420X port :: channel_2_in_use}
 PORT ov2_Radio420xfmcHA16P_PllCtrlSpiCs_p = v2_Radio420xPllCtrlSpiCsCh2_s, DIR = O, VEC = [1:0]             ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHA16N_PllCtrlSpiClk_p = Radio420xPllCtrlSpiClkCh2_s, DIR = O                             ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHA15N_PllCtrlSpiMosi_p = Radio420xPllCtrlSpiMosiCh2_s, DIR = O                           ##{RADIO420X port :: channel_2_in_use}
 PORT i_Radio420xfmcHA15P_PllCtrlSpiMiso_p = Radio420xPllCtrlSpiMisoCh2_s, DIR = I                           ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHB12N_RxGainSpiCs_p = Radio420xRxGainSpiCsCh2_s, DIR = O                                 ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHB07P_RxGainSpiClk_p = Radio420xRxGainSpiClkCh2_s, DIR = O                               ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHB07N_RxGainSpiMosi_p = Radio420xRxGainSpiMosiCh2_s, DIR = O                             ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHB12P_TxGainSpiCs_p = Radio420xTxGainSpiCsCh2_s, DIR = O                                 ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHB08N_TxGainSpiClk_p = Radio420xTxGainSpiClkCh2_s, DIR = O                               ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHB08P_TxGainSpiMosi_p = Radio420xTxGainSpiMosiCh2_s, DIR = O                             ##{RADIO420X port :: channel_2_in_use}
 PORT i_Radio420xfmcHB11P_PllLock_p = Radio420xPllLockCh2_s, DIR = I                                         ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHA10P_LimeReset_p = Radio420xLimeResetCh2_s, DIR = O                                     ##{RADIO420X port :: channel_2_in_use}
 PORT ov2_Radio420xfmcHA12_ClkMuxSin_p = v2_Radio420xClkMuxSinCh2_s, DIR = O, VEC = [1:0]                    ##{RADIO420X port :: channel_2_in_use}
 PORT ov2_Radio420xfmcHA11_ClkMuxSout_p = v2_Radio420xClkMuxSoutCh2_s, DIR = O, VEC = [1:0]                  ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHA13N_ClkMuxLoad_p = Radio420xClkMuxLoadCh2_s, DIR = O                                   ##{RADIO420X port :: channel_2_in_use}
 PORT o_Radio420xfmcHA13P_ClkMuxConfig_p = Radio420xClkMuxConfigCh2_s, DIR = O                               ##{RADIO420X port :: channel_2_in_use}

# FMC ADAC250 Mapping                                                                                        ##{ADAC250 port :: in_use}
 PORT iv15dp_ADAC250AdcExtBus_p = v15dp_ADAC250AdcExtBus_s, DIR = I, VEC = [14:0]                            ##{ADAC250 port :: in_use}
 PORT iv15dn_ADAC250AdcExtBus_p = v15dn_ADAC250AdcExtBus_s, DIR = I, VEC = [14:0]                            ##{ADAC250 port :: in_use}
 PORT ov18dp_ADAC250DacExtBus_p = v18dp_ADAC250DacExtBus_s, DIR = O, VEC = [17:0]                            ##{ADAC250 port :: in_use}
 PORT ov18dn_ADAC250DacExtBus_p = v18dn_ADAC250DacExtBus_s, DIR = O, VEC = [17:0]                            ##{ADAC250 port :: in_use}
 PORT iv3_ADAC250CtrlExtBus_p = v3_ADAC250CtrlExtBus_s, DIR = I, VEC = [2:0]                                 ##{ADAC250 port :: in_use}
 PORT ov23_ADAC250CtrlExtBus_p = v23_ADAC250CtrlExtBus_s, DIR = O, VEC = [22:0]                              ##{ADAC250 port :: in_use}
 PORT idp_ADAC250fmcClk0_p = dp_ADAC250fmcClk0_s, DIR = I                                                    ##{ADAC250 port :: in_use}
 PORT idn_ADAC250fmcClk0_p = dn_ADAC250fmcClk0_s, DIR = I                                                    ##{ADAC250 port :: in_use}

# FMC ADC5000 Mapping                                                                                        ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idp_Fmc_Clk2Fpga_p_pin = axi_adc5000_idp_Fmc_Clk2Fpga_p, DIR = I, SIGIS = CLK              ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idn_Fmc_Clk2Fpga_p_pin = axi_adc5000_idn_Fmc_Clk2Fpga_p, DIR = I, SIGIS = CLK              ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idp_Fmc_ext_trigger_p_pin = axi_adc5000_idp_Fmc_ext_trigger_p, DIR = I                     ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idn_Fmc_ext_trigger_p_pin = axi_adc5000_idn_Fmc_ext_trigger_p, DIR = I                     ##{ADC5000 port :: in_use}
 PORT axi_adc5000_odp_Fmc_Sync_p_pin = axi_adc5000_odp_Fmc_Sync_p, DIR = O                                   ##{ADC5000 port :: in_use}
 PORT axi_adc5000_odn_Fmc_Sync_p_pin = axi_adc5000_odn_Fmc_Sync_p, DIR = O                                   ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idp_Fmc_adr_p_pin = axi_adc5000_idp_Fmc_adr_p, DIR = I, SIGIS = CLK                        ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idn_Fmc_adr_p_pin = axi_adc5000_idn_Fmc_adr_p, DIR = I, SIGIS = CLK                        ##{ADC5000 port :: in_use}
 PORT axi_adc5000_iv10dp_Fmc_ad_p_pin = axi_adc5000_iv10dp_Fmc_ad_p, DIR = I, VEC = [9:0]                    ##{ADC5000 port :: in_use}
 PORT axi_adc5000_iv10dn_Fmc_ad_p_pin = axi_adc5000_iv10dn_Fmc_ad_p, DIR = I, VEC = [9:0]                    ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idp_Fmc_aor_p_pin = axi_adc5000_idp_Fmc_aor_p, DIR = I                                     ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idn_Fmc_aor_p_pin = axi_adc5000_idn_Fmc_aor_p, DIR = I                                     ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idp_Fmc_bdr_p_pin = axi_adc5000_idp_Fmc_bdr_p, DIR = I, SIGIS = CLK                        ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idn_Fmc_bdr_p_pin = axi_adc5000_idn_Fmc_bdr_p, DIR = I, SIGIS = CLK                        ##{ADC5000 port :: in_use}
 PORT axi_adc5000_iv10dp_Fmc_bd_p_pin = axi_adc5000_iv10dp_Fmc_bd_p, DIR = I, VEC = [9:0]                    ##{ADC5000 port :: in_use}
 PORT axi_adc5000_iv10dn_Fmc_bd_p_pin = axi_adc5000_iv10dn_Fmc_bd_p, DIR = I, VEC = [9:0]                    ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idp_Fmc_bor_p_pin = axi_adc5000_idp_Fmc_bor_p, DIR = I                                     ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idn_Fmc_bor_p_pin = axi_adc5000_idn_Fmc_bor_p, DIR = I                                     ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idp_Fmc_cdr_p_pin = axi_adc5000_idp_Fmc_cdr_p, DIR = I, SIGIS = CLK                        ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idn_Fmc_cdr_p_pin = axi_adc5000_idn_Fmc_cdr_p, DIR = I, SIGIS = CLK                        ##{ADC5000 port :: in_use}
 PORT axi_adc5000_iv10dp_Fmc_cd_p_pin = axi_adc5000_iv10dp_Fmc_cd_p, DIR = I, VEC = [9:0]                    ##{ADC5000 port :: in_use}
 PORT axi_adc5000_iv10dn_Fmc_cd_p_pin = axi_adc5000_iv10dn_Fmc_cd_p, DIR = I, VEC = [9:0]                    ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idp_Fmc_cor_p_pin = axi_adc5000_idp_Fmc_cor_p, DIR = I                                     ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idn_Fmc_cor_p_pin = axi_adc5000_idn_Fmc_cor_p, DIR = I                                     ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idp_Fmc_ddr_p_pin = axi_adc5000_idp_Fmc_ddr_p, DIR = I, SIGIS = CLK                        ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idn_Fmc_ddr_p_pin = axi_adc5000_idn_Fmc_ddr_p, DIR = I, SIGIS = CLK                        ##{ADC5000 port :: in_use}
 PORT axi_adc5000_iv10dp_Fmc_dd_p_pin = axi_adc5000_iv10dp_Fmc_dd_p, DIR = I, VEC = [9:0]                    ##{ADC5000 port :: in_use}
 PORT axi_adc5000_iv10dn_Fmc_dd_p_pin = axi_adc5000_iv10dn_Fmc_dd_p, DIR = I, VEC = [9:0]                    ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idp_Fmc_dor_p_pin = axi_adc5000_idp_Fmc_dor_p, DIR = I                                     ##{ADC5000 port :: in_use}
 PORT axi_adc5000_idn_Fmc_dor_p_pin = axi_adc5000_idn_Fmc_dor_p, DIR = I                                     ##{ADC5000 port :: in_use}

# AURORA Mapping                                                                                             ##{AURORA port :: in_use}
 PORT iv4_Aurora4_7_GTX_RX_p   = v4_Aurora4_7_GTX_RXp_s, DIR = I, VEC = [3:0]                                ##{AURORA port :: 4_7_in_use}
 PORT iv4_Aurora4_7_GTX_RX_n   = v4_Aurora4_7_GTX_RXn_s, DIR = I, VEC = [3:0]                                ##{AURORA port :: 4_7_in_use}
 PORT ov4_Aurora4_7_GTX_TX_p   = v4_Aurora4_7_GTX_TXp_s, DIR = O, VEC = [3:0]                                ##{AURORA port :: 4_7_in_use}
 PORT ov4_Aurora4_7_GTX_TX_n   = v4_Aurora4_7_GTX_TXn_s, DIR = O, VEC = [3:0]                                ##{AURORA port :: 4_7_in_use}
 PORT iv4_Aurora8_11_GTX_RX_p  = v4_Aurora8_11_GTX_RXp_s, DIR = I, VEC = [3:0]                               ##{AURORA port :: 8_11_in_use}
 PORT iv4_Aurora8_11_GTX_RX_n  = v4_Aurora8_11_GTX_RXn_s, DIR = I, VEC = [3:0]                               ##{AURORA port :: 8_11_in_use}
 PORT ov4_Aurora8_11_GTX_TX_p  = v4_Aurora8_11_GTX_TXp_s, DIR = O, VEC = [3:0]                               ##{AURORA port :: 8_11_in_use}
 PORT ov4_Aurora8_11_GTX_TX_n  = v4_Aurora8_11_GTX_TXn_s, DIR = O, VEC = [3:0]                               ##{AURORA port :: 8_11_in_use}
 PORT iv4_Aurora17_20_GTX_RX_p = v4_Aurora17_20_GTX_RXp_s, DIR = I, VEC = [3:0]                              ##{AURORA port :: 17_20_in_use}
 PORT iv4_Aurora17_20_GTX_RX_n = v4_Aurora17_20_GTX_RXn_s, DIR = I, VEC = [3:0]                              ##{AURORA port :: 17_20_in_use}
 PORT ov4_Aurora17_20_GTX_TX_p = v4_Aurora17_20_GTX_TXp_s, DIR = O, VEC = [3:0]                              ##{AURORA port :: 17_20_in_use}
 PORT ov4_Aurora17_20_GTX_TX_n = v4_Aurora17_20_GTX_TXn_s, DIR = O, VEC = [3:0]                              ##{AURORA port :: 17_20_in_use}
 PORT i_Aurora4_7_GTX_CLK_p    = Aurora4_7_GTX_CLKp_s, DIR = I                                               ##{AURORA port :: 4_7_in_use}
 PORT i_Aurora4_7_GTX_CLK_n    = Aurora4_7_GTX_CLKn_s, DIR = I                                               ##{AURORA port :: 4_7_in_use}
 PORT i_Aurora8_11_GTX_CLK_p   = Aurora8_11_GTX_CLKp_s, DIR = I                                              ##{AURORA port :: 8_11_in_use}
 PORT i_Aurora8_11_GTX_CLK_n   = Aurora8_11_GTX_CLKn_s, DIR = I                                              ##{AURORA port :: 8_11_in_use}
 PORT i_Aurora17_20_GTX_CLK_p  = Aurora17_20_GTX_CLKp_s, DIR = I                                             ##{AURORA port :: 17_20_in_use}
 PORT i_Aurora17_20_GTX_CLK_n  = Aurora17_20_GTX_CLKn_s, DIR = I                                             ##{AURORA port :: 17_20_in_use}

# AURORA backplane 100MHz user clock                                                                         ##{AURORA port :: in_use}
# PORT i_AMC_FCLKA_p = FCLKA_P, DIR = I                                                                      ##{AURORA port :: in_use}
# PORT i_AMC_FCLKA_n = FCLKA_N, DIR = I                                                                      ##{AURORA port :: in_use}

# lvdsIO External IO bottom card                                                                             ##{lvdsIO port :: bottom_fmc_in_use}
 PORT lyt_axi_lvds_io_iov16_Group0_padIOp_p = lyt_axi_lvds_io_iov16_Group0_padIOp_p, DIR = IO, VEC = [15:0]  ##{lvdsIO port :: bottom_fmc_in_use}
 PORT lyt_axi_lvds_io_iov16_Group0_padIOn_p = lyt_axi_lvds_io_iov16_Group0_padIOn_p, DIR = IO, VEC = [15:0]  ##{lvdsIO port :: bottom_fmc_in_use}
 PORT lyt_axi_lvds_io_iov16_Group1_padIOp_p = lyt_axi_lvds_io_iov16_Group1_padIOp_p, DIR = IO, VEC = [15:0]  ##{lvdsIO port :: bottom_fmc_in_use}
 PORT lyt_axi_lvds_io_iov16_Group1_padIOn_p = lyt_axi_lvds_io_iov16_Group1_padIOn_p, DIR = IO, VEC = [15:0]  ##{lvdsIO port :: bottom_fmc_in_use}
# lvdsIO External IO bottom card                                                                             ##{lvdsIO port :: top_fmc_in_use}
 PORT lyt_axi_lvds_io_iov16_Group2_padIOp_p = lyt_axi_lvds_io_iov16_Group2_padIOp_p, DIR = IO, VEC = [15:0]  ##{lvdsIO port :: top_fmc_in_use}
 PORT lyt_axi_lvds_io_iov16_Group2_padIOn_p = lyt_axi_lvds_io_iov16_Group2_padIOn_p, DIR = IO, VEC = [15:0]  ##{lvdsIO port :: top_fmc_in_use}
 PORT lyt_axi_lvds_io_iov16_Group3_padIOp_p = lyt_axi_lvds_io_iov16_Group3_padIOp_p, DIR = IO, VEC = [15:0]  ##{lvdsIO port :: top_fmc_in_use}
 PORT lyt_axi_lvds_io_iov16_Group3_padIOn_p = lyt_axi_lvds_io_iov16_Group3_padIOn_p, DIR = IO, VEC = [15:0]  ##{lvdsIO port :: top_fmc_in_use}

# LVDS GPIO
 PORT mestor_data0_padIOp_p = mestor_data0_padIOp_p, DIR = IO, VEC = [(%{mestor_lvds0_data_width}-1):0]      ##{LVDS port :: lvds_gpio_0_in_use}
 PORT mestor_data0_padIOn_p = mestor_data0_padIOn_p, DIR = IO, VEC = [(%{mestor_lvds0_data_width}-1):0]      ##{LVDS port :: lvds_gpio_0_in_use}
 PORT mestor_data1_padIOp_p = mestor_data1_padIOp_p, DIR = IO, VEC = [(%{mestor_lvds1_data_width}-1):0]      ##{LVDS port :: lvds_gpio_1_in_use}
 PORT mestor_data1_padIOn_p = mestor_data1_padIOn_p, DIR = IO, VEC = [(%{mestor_lvds1_data_width}-1):0]      ##{LVDS port :: lvds_gpio_1_in_use}
 PORT mestor_data2_padIOp_p = mestor_data2_padIOp_p, DIR = IO, VEC = [(%{mestor_lvds2_data_width}-1):0]      ##{LVDS port :: lvds_gpio_2_in_use}
 PORT mestor_data2_padIOn_p = mestor_data2_padIOn_p, DIR = IO, VEC = [(%{mestor_lvds2_data_width}-1):0]      ##{LVDS port :: lvds_gpio_2_in_use}
 PORT mestor_data3_padIOp_p = mestor_data3_padIOp_p, DIR = IO, VEC = [(%{mestor_lvds3_data_width}-1):0]      ##{LVDS port :: lvds_gpio_3_in_use}
 PORT mestor_data3_padIOn_p = mestor_data3_padIOn_p, DIR = IO, VEC = [(%{mestor_lvds3_data_width}-1):0]      ##{LVDS port :: lvds_gpio_3_in_use}
# LVDS SYNC
 PORT mestor_clk0_padIOp_p = mestor_clk0_padIOp_p, DIR = IO                                                  ##{LVDS port :: lvds_sync_0_in_use}
 PORT mestor_clk0_padIOn_p = mestor_clk0_padIOn_p, DIR = IO                                                  ##{LVDS port :: lvds_sync_0_in_use}
 PORT mestor_valid0_padIOp_p = mestor_valid0_padIOp_p, DIR = IO                                              ##{LVDS port :: lvds_sync_0_in_use}
 PORT mestor_valid0_padIOn_p = mestor_valid0_padIOn_p, DIR = IO                                              ##{LVDS port :: lvds_sync_0_in_use}
 PORT mestor_data0_padIOp_p = mestor_data0_padIOp_p, DIR = IO, VEC = [(%{mestor_lvds0_data_width}-1):0]      ##{LVDS port :: lvds_sync_0_in_use}
 PORT mestor_data0_padIOn_p = mestor_data0_padIOn_p, DIR = IO, VEC = [(%{mestor_lvds0_data_width}-1):0]      ##{LVDS port :: lvds_sync_0_in_use}
 PORT mestor_clk1_padIOp_p = mestor_clk1_padIOp_p, DIR = IO                                                  ##{LVDS port :: lvds_sync_1_in_use}
 PORT mestor_clk1_padIOn_p = mestor_clk1_padIOn_p, DIR = IO                                                  ##{LVDS port :: lvds_sync_1_in_use}
 PORT mestor_valid1_padIOp_p = mestor_valid1_padIOp_p, DIR = IO                                              ##{LVDS port :: lvds_sync_1_in_use}
 PORT mestor_valid1_padIOn_p = mestor_valid1_padIOn_p, DIR = IO                                              ##{LVDS port :: lvds_sync_1_in_use}
 PORT mestor_data1_padIOp_p = mestor_data1_padIOp_p, DIR = IO, VEC = [(%{mestor_lvds1_data_width}-1):0]      ##{LVDS port :: lvds_sync_1_in_use}
 PORT mestor_data1_padIOn_p = mestor_data1_padIOn_p, DIR = IO, VEC = [(%{mestor_lvds1_data_width}-1):0]      ##{LVDS port :: lvds_sync_1_in_use}
 PORT mestor_clk2_padIOp_p = mestor_clk2_padIOp_p, DIR = IO                                                  ##{LVDS port :: lvds_sync_2_in_use}
 PORT mestor_clk2_padIOn_p = mestor_clk2_padIOn_p, DIR = IO                                                  ##{LVDS port :: lvds_sync_2_in_use}
 PORT mestor_valid2_padIOp_p = mestor_valid2_padIOp_p, DIR = IO                                              ##{LVDS port :: lvds_sync_2_in_use}
 PORT mestor_valid2_padIOn_p = mestor_valid2_padIOn_p, DIR = IO                                              ##{LVDS port :: lvds_sync_2_in_use}
 PORT mestor_data2_padIOp_p = mestor_data2_padIOp_p, DIR = IO, VEC = [(%{mestor_lvds2_data_width}-1):0]      ##{LVDS port :: lvds_sync_2_in_use}
 PORT mestor_data2_padIOn_p = mestor_data2_padIOn_p, DIR = IO, VEC = [(%{mestor_lvds2_data_width}-1):0]      ##{LVDS port :: lvds_sync_2_in_use}
 PORT mestor_clk3_padIOp_p = mestor_clk3_padIOp_p, DIR = IO                                                  ##{LVDS port :: lvds_sync_3_in_use}
 PORT mestor_clk3_padIOn_p = mestor_clk3_padIOn_p, DIR = IO                                                  ##{LVDS port :: lvds_sync_3_in_use}
 PORT mestor_valid3_padIOp_p = mestor_valid3_padIOp_p, DIR = IO                                              ##{LVDS port :: lvds_sync_3_in_use}
 PORT mestor_valid3_padIOn_p = mestor_valid3_padIOn_p, DIR = IO                                              ##{LVDS port :: lvds_sync_3_in_use}
 PORT mestor_data3_padIOp_p = mestor_data3_padIOp_p, DIR = IO, VEC = [(%{mestor_lvds3_data_width}-1):0]      ##{LVDS port :: lvds_sync_3_in_use}
 PORT mestor_data3_padIOn_p = mestor_data3_padIOn_p, DIR = IO, VEC = [(%{mestor_lvds3_data_width}-1):0]      ##{LVDS port :: lvds_sync_3_in_use}

# MI250 MAPPING                                                                                              ##{MI250 port :: in_use}
 PORT o_Mi250PllScl_p = Mi250PllScl_s, DIR = O                                                               ##{MI250 port :: in_use}
 PORT o_Mi250PllMosi_p = Mi250PllMosi_s, DIR = O                                                             ##{MI250 port :: in_use}
 PORT i_Mi250PllMiso_p = Mi250PllMiso_s, DIR = I                                                             ##{MI250 port :: in_use}
 PORT o_nMi250PllCs_p = nMi250PllCs_s, DIR = O                                                               ##{MI250 port :: in_use}
 PORT o_Mi250AdcScl_p = Mi250AdcScl_s, DIR = O                                                               ##{MI250 port :: in_use}
 PORT o_Mi250AdcMosi_p = Mi250AdcMosi_s, DIR = O                                                             ##{MI250 port :: in_use}
 PORT i_Mi250AdcMisoAb_p = Mi250AdcMisoAb_s, DIR = I                                                         ##{MI250 port :: in_use}
 PORT i_Mi250AdcMisoCd_p = Mi250AdcMisoCd_s, DIR = I                                                         ##{MI250 port :: in_use}
 PORT i_Mi250AdcMisoEf_p = Mi250AdcMisoEf_s, DIR = I                                                         ##{MI250 port :: in_use}
 PORT i_Mi250AdcMisoGh_p = Mi250AdcMisoGh_s, DIR = I                                                         ##{MI250 port :: in_use}
 PORT o_nMi250AdcCsAb_p = nMi250AdcCsAb_s, DIR = O                                                           ##{MI250 port :: in_use}
 PORT o_nMi250AdcCsCd_p = nMi250AdcCsCd_s, DIR = O                                                           ##{MI250 port :: in_use}
 PORT o_nMi250AdcCsEf_p = nMi250AdcCsEf_s, DIR = O                                                           ##{MI250 port :: in_use}
 PORT o_nMi250AdcCsGh_p = nMi250AdcCsGh_s, DIR = O                                                           ##{MI250 port :: in_use}
 PORT o_Mi250AdcRst_p = Mi250AdcRst_s, DIR = O                                                               ##{MI250 port :: in_use}
 PORT o_Mi250PllRefEn_p = Mi250PllRefEn_s, DIR = O                                                           ##{MI250 port :: in_use}
 PORT i_Mi250PllStatus_p = Mi250PllStatus_s, DIR = I                                                         ##{MI250 port :: in_use}
 PORT o_Mi250PllFunction_p = Mi250PllFunction_s, DIR = O                                                     ##{MI250 port :: in_use}
 PORT o_Mi250VcoPwrEn_p = Mi250VcoPwrEn_s, DIR = O                                                           ##{MI250 port :: in_use}
 PORT i_nMi250MonInt_p = nMi250MonInt_s, DIR = I                                                             ##{MI250 port :: in_use}
 PORT i_Mi250TrigToFpga_p = Mi250TrigToFpga_s, DIR = I                                                       ##{MI250 port :: in_use}
 PORT i_pMi250ClkToFpga_p = pMi250ClkToFpga_s, DIR = I                                                       ##{MI250 port :: in_use}
 PORT i_nMi250ClkToFpga_p = nMi250ClkToFpga_s, DIR = I                                                       ##{MI250 port :: in_use}
 PORT i_pMi250ExternClk_p = pMi250ExternClk_s, DIR = I                                                       ##{MI250 port :: in_use}
 PORT i_nMi250ExternClk_p = nMi250ExternClk_s, DIR = I                                                       ##{MI250 port :: in_use}
 PORT idp_Mi250AdcClkAB_p = pMi250AdcClkAB_s, DIR = I                                                        ##{MI250 port :: in_use}
 PORT idn_Mi250AdcClkAB_p = nMi250AdcClkAB_s, DIR = I                                                        ##{MI250 port :: in_use}
 PORT idp_Mi250AdcClkCD_p = pMi250AdcClkCD_s, DIR = I                                                        ##{MI250 port :: in_use}
 PORT idn_Mi250AdcClkCD_p = nMi250AdcClkCD_s, DIR = I                                                        ##{MI250 port :: in_use}
 PORT idp_Mi250AdcClkEF_p = pMi250AdcClkEF_s, DIR = I                                                        ##{MI250 port :: in_use}
 PORT idn_Mi250AdcClkEF_p = nMi250AdcClkEF_s, DIR = I                                                        ##{MI250 port :: in_use}
 PORT idp_Mi250AdcClkGH_p = pMi250AdcClkGH_s, DIR = I                                                        ##{MI250 port :: in_use}
 PORT idn_Mi250AdcClkGH_p = nMi250AdcClkGH_s, DIR = I                                                        ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcAData_p = v7dp_Mi250AdcAData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcAData_p = v7dn_Mi250AdcAData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcBData_p = v7dp_Mi250AdcBData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcBData_p = v7dn_Mi250AdcBData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcCData_p = v7dp_Mi250AdcCData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcCData_p = v7dn_Mi250AdcCData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcDData_p = v7dp_Mi250AdcDData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcDData_p = v7dn_Mi250AdcDData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcEData_p = v7dp_Mi250AdcEData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcEData_p = v7dn_Mi250AdcEData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcFData_p = v7dp_Mi250AdcFData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcFData_p = v7dn_Mi250AdcFData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcGData_p = v7dp_Mi250AdcGData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcGData_p = v7dn_Mi250AdcGData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcHData_p = v7dp_Mi250AdcHData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcHData_p = v7dn_Mi250AdcHData_s, DIR = I, VEC = [6:0]                                     ##{MI250 port :: in_use}

# MI125 bottom MAPPING
 PORT o_Mi125TriggerOutToIOBottom_p = Mi125TriggerOutToIOBottom_s, DIR = O                                   ##{MI125 port :: bottom_in_use}
 PORT i_Mi125TriggerInFromIOBottom_p = Mi125TriggerInFromIOBottom_s, DIR = I                                 ##{MI125 port :: bottom_in_use}
 PORT idp_Mi125DataFromADCBottom_p = dp_Mi125DataFromADCBottom_s, DIR = I, VEC = [31:0]                      ##{MI125 port :: bottom_in_use}
 PORT idn_Mi125DataFromADCBottom_p = dn_Mi125DataFromADCBottom_s, DIR = I, VEC = [31:0]                      ##{MI125 port :: bottom_in_use}
 PORT idp_Mi125ClockFromADCBottom_p = dp_Mi125ClockFromADCBottom_s, DIR = I, SIGIS = CLK                     ##{MI125 port :: bottom_in_use}
 PORT idn_Mi125ClockFromADCBottom_p = dn_Mi125ClockFromADCBottom_s, DIR = I, SIGIS = CLK                     ##{MI125 port :: bottom_in_use}
 PORT idp_Mi125FrameFromADCBottom_p = dp_Mi125FrameFromADCBottom_s, DIR = I                                  ##{MI125 port :: bottom_in_use}
 PORT idn_Mi125FrameFromADCBottom_p = dn_Mi125FrameFromADCBottom_s, DIR = I                                  ##{MI125 port :: bottom_in_use}

# MI125 top MAPPING
 PORT idp_Mi125DataFromADCTop_p = dp_Mi125DataFromADCTop_s, DIR = I, VEC = [31:0]                            ##{MI125 port :: top_in_use}
 PORT idn_Mi125DataFromADCTop_p = dn_Mi125DataFromADCTop_s, DIR = I, VEC = [31:0]                            ##{MI125 port :: top_in_use}
 PORT idp_Mi125ClockFromADCTop_p = dp_Mi125ClockFromADCTop_s, DIR = I, SIGIS = CLK                           ##{MI125 port :: top_in_use}
 PORT idn_Mi125ClockFromADCTop_p = dn_Mi125ClockFromADCTop_s, DIR = I, SIGIS = CLK                           ##{MI125 port :: top_in_use}
 PORT idp_Mi125FrameFromADCTop_p = dp_Mi125FrameFromADCTop_s, DIR = I                                        ##{MI125 port :: top_in_use}
 PORT idn_Mi125FrameFromADCTop_p = dn_Mi125FrameFromADCTop_s, DIR = I                                        ##{MI125 port :: top_in_use}

# MO1000 0 MAPPING                                                                                           ##{MO1000 port :: in_use_0}
 PORT idp_MO1000_0_ClockFromFMC_p = mo1000_0_pClockFromFMC_s, DIR = I, SIGIS = CLK                           ##{MO1000 port :: in_use_0}
 PORT idn_MO1000_0_ClockFromFMC_p = mo1000_0_nClockFromFMC_s, DIR = I, SIGIS = CLK                           ##{MO1000 port :: in_use_0}
 PORT odp_MO1000_0_DataToFMC_p = mo1000_0_pDataToFMC_s, DIR = O, VEC = [31:0]                                ##{MO1000 port :: in_use_0}
 PORT odn_MO1000_0_DataToFMC_p = mo1000_0_nDataToFMC_s, DIR = O, VEC = [31:0]                                ##{MO1000 port :: in_use_0}
 PORT odp_MO1000_0_DciToFMC_p = mo1000_0_pDciToFMC_s, DIR = O                                                ##{MO1000 port :: in_use_0}
 PORT odn_MO1000_0_DciToFMC_p = mo1000_0_nDciToFMC_s, DIR = O                                                ##{MO1000 port :: in_use_0}
 PORT odp_MO1000_0_FrameToFMC_p = mo1000_0_pFrameToFMC_s, DIR = O                                            ##{MO1000 port :: in_use_0}
 PORT odn_MO1000_0_FrameToFMC_p = mo1000_0_nFrameToFMC_s, DIR = O                                            ##{MO1000 port :: in_use_0}
 PORT i_MO1000_0_TriggerFromFMC_p = mo1000_0_TriggerFromFMC_s, DIR = I                                       ##{MO1000 port :: in_use_0}

# MO1000 1 MAPPING                                                                                           ##{MO1000 port :: in_use_1}
 PORT idp_MO1000_1_ClockFromFMC_p = mo1000_1_pClockFromFMC_s, DIR = I, SIGIS = CLK                           ##{MO1000 port :: in_use_1}
 PORT idn_MO1000_1_ClockFromFMC_p = mo1000_1_nClockFromFMC_s, DIR = I, SIGIS = CLK                           ##{MO1000 port :: in_use_1}
 PORT odp_MO1000_1_DataToFMC_p = mo1000_1_pDataToFMC_s, DIR = O, VEC = [31:0]                                ##{MO1000 port :: in_use_1}
 PORT odn_MO1000_1_DataToFMC_p = mo1000_1_nDataToFMC_s, DIR = O, VEC = [31:0]                                ##{MO1000 port :: in_use_1}
 PORT odp_MO1000_1_DciToFMC_p = mo1000_1_pDciToFMC_s, DIR = O                                                ##{MO1000 port :: in_use_1}
 PORT odn_MO1000_1_DciToFMC_p = mo1000_1_nDciToFMC_s, DIR = O                                                ##{MO1000 port :: in_use_1}
 PORT odp_MO1000_1_FrameToFMC_p = mo1000_1_pFrameToFMC_s, DIR = O                                            ##{MO1000 port :: in_use_1}
 PORT odn_MO1000_1_FrameToFMC_p = mo1000_1_nFrameToFMC_s, DIR = O                                            ##{MO1000 port :: in_use_1}

# Main Clock & Reset
 PORT i_pSysClk_p = CLK, DIR = I, SIGIS = CLK, CLK_FREQ = 200000000, DIFFERENTIAL_POLARITY = P
 PORT i_nSysClk_p = CLK, DIR = I, SIGIS = CLK, CLK_FREQ = 200000000, DIFFERENTIAL_POLARITY = N
 PORT i_SysRst_p = sys_reset, DIR = I, SIGIS = RST, RST_POLARITY = 1, SENSITIVITY = LEVEL_HIGH
 PORT o_nFpgaProg_p = axi_perseus6010_regs_o_nFpgaProg_p, DIR = O
# Flash chip
 PORT fpga_0_FLASH_Mem_A_pin = fpga_0_FLASH_Mem_A, DIR = O, VEC = [0:24]
 PORT Flash_Mem_WEN_pin = Flash_Mem_WEN, DIR = O
 PORT Flash_Mem_DQ_pin = Flash_Mem_DQ, DIR = IO, VEC = [0:15]
 PORT Flash_Mem_CEN_pin = Flash_Mem_CEN, DIR = O
 PORT Flash_Mem_OEN_pin = Flash_Mem_OEN, DIR = O
 PORT o_nFlashRst_p = nflash_rst, DIR = O
# AXI Ethernet
 PORT axi_ethernet_0_MGT_CLK_P_pin = axi_ethernet_0_MGT_CLK_P, DIR = I                                      ##{ETHERNET port :: in_use}
 PORT axi_ethernet_0_MGT_CLK_N_pin = axi_ethernet_0_MGT_CLK_N, DIR = I                                      ##{ETHERNET port :: in_use}
 PORT axi_ethernet_0_TXP_pin = axi_ethernet_0_TXP, DIR = O                                                  ##{ETHERNET port :: in_use}
 PORT axi_ethernet_0_TXN_pin = axi_ethernet_0_TXN, DIR = O                                                  ##{ETHERNET port :: in_use}
 PORT axi_ethernet_0_RXP_pin = axi_ethernet_0_RXP, DIR = I                                                  ##{ETHERNET port :: in_use}
 PORT axi_ethernet_0_RXN_pin = axi_ethernet_0_RXN, DIR = I                                                  ##{ETHERNET port :: in_use}
# PCIe
 PORT PCIe_DiffClk_P_pin = net_PCIe_DiffClk_P_pin, DIR = I, SIGIS = CLK, CLK_FREQ = 100000000               ##{PCIE port :: in_use}
 PORT PCIe_DiffClk_N_pin = net_PCIe_DiffClk_N_pin, DIR = I, SIGIS = CLK, CLK_FREQ = 100000000               ##{PCIE port :: in_use}
 PORT pci_exp_txp = pci_txp_s, DIR = O, VEC = [3:0]                                                         ##{PCIE port :: in_use}
 PORT pci_exp_txn = pci_txn_s, DIR = O, VEC = [3:0]                                                         ##{PCIE port :: in_use}
 PORT pci_exp_rxp = pci_rxp_s, DIR = I, VEC = [3:0]                                                         ##{PCIE port :: in_use}
 PORT pci_exp_rxn = pci_rxn_s, DIR = I, VEC = [3:0]                                                         ##{PCIE port :: in_use}
# UART
 PORT i_FpUartRX_p = i_FpUartRX_p, DIR = I
 PORT io_FpUartTX_p = io_FpUartTX_p, DIR = IO
 PORT i_AMCUartRX_p = i_AMCUartRX_p, DIR = I
 PORT io_AMCUartTX_p = io_AMCUartTX_p, DIR = IO
# uBlaze 8-bit DDR3 chip
 PORT axi_v6_ddrx_0_ddr_addr_pin = axi_v6_ddrx_0_ddr_addr, DIR = O, VEC = [13:0]
 PORT axi_v6_ddrx_0_ddr_ba_pin = axi_v6_ddrx_0_ddr_ba, DIR = O, VEC = [2:0]
 PORT axi_v6_ddrx_0_ddr_cas_n_pin = axi_v6_ddrx_0_ddr_cas_n, DIR = O
 PORT axi_v6_ddrx_0_ddr_ck_p_pin = axi_v6_ddrx_0_ddr_ck_p, DIR = O, SIGIS = CLK
 PORT axi_v6_ddrx_0_ddr_ck_n_pin = axi_v6_ddrx_0_ddr_ck_n, DIR = O, SIGIS = CLK
 PORT axi_v6_ddrx_0_ddr_cke_pin = axi_v6_ddrx_0_ddr_cke, DIR = O
 PORT axi_v6_ddrx_0_ddr_cs_n_pin = axi_v6_ddrx_0_ddr_cs_n, DIR = O
 PORT axi_v6_ddrx_0_ddr_dm_pin = axi_v6_ddrx_0_ddr_dm, DIR = O
 PORT axi_v6_ddrx_0_ddr_odt_pin = axi_v6_ddrx_0_ddr_odt, DIR = O
 PORT axi_v6_ddrx_0_ddr_ras_n_pin = axi_v6_ddrx_0_ddr_ras_n, DIR = O
 PORT axi_v6_ddrx_0_ddr_reset_n_pin = axi_v6_ddrx_0_ddr_reset_n, DIR = O
 PORT axi_v6_ddrx_0_ddr_we_n_pin = axi_v6_ddrx_0_ddr_we_n, DIR = O
 PORT axi_v6_ddrx_0_ddr_dqs_p = axi_v6_ddrx_0_ddr_dqs_p, DIR = IO
 PORT axi_v6_ddrx_0_ddr_dqs_n = axi_v6_ddrx_0_ddr_dqs_n, DIR = IO
 PORT axi_v6_ddrx_0_ddr_dq = axi_v6_ddrx_0_ddr_dq, DIR = IO, VEC = [7:0]
# Misc signals control/Perseus Registers
 PORT i_MmcI2cReleaseAck_p = MmcI2cReleaseAck_s, DIR = I
 PORT o_MmcI2cReleaseReq_p = MmcI2cReleaseReq_s, DIR = O
 PORT i_DaughterIoAbsent_p = DaughterIoAbsent_s, DIR = I
 PORT i_FmcAbsent_p = FmcAbsent_s, DIR = I
 PORT i_FmcStackAbsent_p = FmcStackAbsent_s, DIR = I
 PORT o_CtrlTclkdTxEn_p = CtrlTclkdTxEn_s, DIR = O
 PORT o_CtrlTclkdRxDis_p = CtrlTclkdRxDis_s, DIR = O
 PORT o_CtrlAmctclkc2Fmcclk3En_p = CtrlAmctclkc2Fmcclk3En_s, DIR = O
 PORT o_CtrlAmctclka2Fmcclk2En_p = CtrlAmctclka2Fmcclk2En_s, DIR = O
 PORT o_CtrlFclkaHighz_p = CtrlFclkaHighz_s, DIR = O
 PORT o_Ctrl100mhzOutEn_p = Ctrl100mhzOutEn_s, DIR = O
 PORT o_CtrlTclkcTxEn_p = CtrlTclkcTxEn_s, DIR = O
 PORT o_CtrlTclkcRxDis_p = CtrlTclkcRxDis_s, DIR = O
 PORT o_CtrlTclkbTxEn_p = CtrlTclkbTxEn_s, DIR = O
 PORT o_CtrlTclkbRxDis_p = CtrlTclkbRxDis_s, DIR = O
 PORT o_CtrlTclkaTxEn_p = CtrlTclkaTxEn_s, DIR = O
 PORT o_CtrlTclkaRxDis_p = CtrlTclkaRxDis_s, DIR = O
 PORT o_CtrlFmcclk12AmctclkdEn_p = CtrlFmcclk12AmctclkdEn_s, DIR = O
 PORT o_CtrlFmcclk02AmctclkbEn_p = CtrlFmcclk02AmctclkbEn_s, DIR = O
 PORT ov2_CtrlVadjSel_p = v2_CtrlVadjSel_s, DIR = O, VEC = [1:0]
 PORT ov8_nCtrlLedGrn_p = v8_nCtrlLedGrn_s, DIR = O, VEC = [7:0]
 PORT ov8_nCtrlLedRed_p = v8_nCtrlLedRed_s, DIR = O, VEC = [7:0]
 PORT o_CtrlLedBufOd_p = CtrlLedBufOd_s, DIR = O
 PORT o_CtrlVadjEn_p = CtrlVadjEn_s, DIR = O
 PORT io_FmcI2cSDA_p = axi_iic_0_Sda, DIR = IO
 PORT io_FmcI2cSCL_p = axi_iic_0_Scl, DIR = IO
# gpio backplane
 PORT o_nutaq_backplane_gpio_0_p = nutaq_backplane_gpio_output_0_R1_s, DIR = O  ##{NUTAQ_BACKPLANE port :: gpio_output_0_in_use}
 PORT o_nutaq_backplane_gpio_1_p = nutaq_backplane_gpio_output_1_R1_s, DIR = O  ##{NUTAQ_BACKPLANE port :: gpio_output_1_in_use}
 PORT i_nutaq_backplane_gpio_0_p = nutaq_backplane_gpio_input_0_s, DIR = I      ##{NUTAQ_BACKPLANE port :: gpio_input_0_in_use}
 PORT i_nutaq_backplane_gpio_1_p = nutaq_backplane_gpio_input_1_s, DIR = I      ##{NUTAQ_BACKPLANE port :: gpio_input_1_in_use}
 PORT odp_nutaq_backplane_gpio_input_tclk_a_p = nutaq_backplane_gpio_output_tclk_a_R1_s, DIR = O, DIFFERENTIAL_POLARITY = P     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
 PORT odn_nutaq_backplane_gpio_input_tclk_a_p = nutaq_backplane_gpio_output_tclk_a_R1_s, DIR = O, DIFFERENTIAL_POLARITY = N     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
 PORT odp_nutaq_backplane_gpio_input_tclk_b_p = nutaq_backplane_gpio_output_tclk_b_R1_s, DIR = O, DIFFERENTIAL_POLARITY = P     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
 PORT odn_nutaq_backplane_gpio_input_tclk_b_p = nutaq_backplane_gpio_output_tclk_b_R1_s, DIR = O, DIFFERENTIAL_POLARITY = N     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
 PORT odp_nutaq_backplane_gpio_input_tclk_c_p = nutaq_backplane_gpio_output_tclk_c_R1_s, DIR = O, DIFFERENTIAL_POLARITY = P     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
 PORT odn_nutaq_backplane_gpio_input_tclk_c_p = nutaq_backplane_gpio_output_tclk_c_R1_s, DIR = O, DIFFERENTIAL_POLARITY = N     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
 PORT odp_nutaq_backplane_gpio_input_tclk_d_p = nutaq_backplane_gpio_output_tclk_d_R1_s, DIR = O, DIFFERENTIAL_POLARITY = P     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
 PORT odn_nutaq_backplane_gpio_input_tclk_d_p = nutaq_backplane_gpio_output_tclk_d_R1_s, DIR = O, DIFFERENTIAL_POLARITY = N     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
 PORT idp_nutaq_backplane_gpio_input_tclk_a_p = nutaq_backplane_gpio_input_tclk_a_s, DIR = I, DIFFERENTIAL_POLARITY = P         ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
 PORT idn_nutaq_backplane_gpio_input_tclk_a_p = nutaq_backplane_gpio_input_tclk_a_s, DIR = I, DIFFERENTIAL_POLARITY = N         ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
 PORT idp_nutaq_backplane_gpio_input_tclk_b_p = nutaq_backplane_gpio_input_tclk_b_s, DIR = I, DIFFERENTIAL_POLARITY = P         ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
 PORT idn_nutaq_backplane_gpio_input_tclk_b_p = nutaq_backplane_gpio_input_tclk_b_s, DIR = I, DIFFERENTIAL_POLARITY = N         ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
 PORT idp_nutaq_backplane_gpio_input_tclk_c_p = nutaq_backplane_gpio_input_tclk_c_s, DIR = I, DIFFERENTIAL_POLARITY = P         ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
 PORT idn_nutaq_backplane_gpio_input_tclk_c_p = nutaq_backplane_gpio_input_tclk_c_s, DIR = I, DIFFERENTIAL_POLARITY = N         ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
 PORT idp_nutaq_backplane_gpio_input_tclk_d_p = nutaq_backplane_gpio_input_tclk_d_s, DIR = I, DIFFERENTIAL_POLARITY = P         ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}
 PORT idn_nutaq_backplane_gpio_input_tclk_d_p = nutaq_backplane_gpio_input_tclk_d_s, DIR = I, DIFFERENTIAL_POLARITY = N         ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}

BEGIN lyt_pps_sync																##{RADIO420X port :: in_use}
 PARAMETER INSTANCE = pps_sync													##{RADIO420X port :: in_use}
 PARAMETER HW_VER = 1.00.a														##{RADIO420X port :: in_use}
 PORT i_SysClk_p = clk_100_0000MHzMMCM0											##{RADIO420X port :: in_use}
 PORT i_FmcClk_p = Radio420x_AdcClkCh1_s										##{RADIO420X port :: in_use}
 PORT i_Pps_p = Radio420xPPsOut_s												##{RADIO420X port :: in_use}
 PORT ov32_CoreIdVers_p = pps_sync_ov32_CoreIdVers_p							##{RADIO420X port :: in_use}
 PORT iv32_FmcClkVal_p = axi_perseus6010_regs_ov32_PPSSYNC_FmcClkVal_p			##{RADIO420X port :: in_use}
 PORT i_CoreReset_p = axi_perseus6010_regs_o_PPSSYNC_CoreReset_p				##{RADIO420X port :: in_use}
 PORT i_RstUponRead_p = axi_perseus6010_regs_o_PPSSYNC_RstUponRead_p			##{RADIO420X port :: in_use}
 PORT i_RstAcc_p = axi_perseus6010_regs_o_PPSSYNC_RstAcc_p						##{RADIO420X port :: in_use}
 PORT i_CoreEnable_p = axi_perseus6010_regs_o_PPSSYNC_CoreEnable_p				##{RADIO420X port :: in_use}
 PORT i_DiffAccRead_p = axi_perseus6010_regs_o_PPSSYNC_DiffAccRead_p			##{RADIO420X port :: in_use}
 PORT ov32_PpsCnt_p = pps_sync_ov32_PpsCnt_p									##{RADIO420X port :: in_use}
 PORT ov32_DiffAcc_p = pps_sync_ov32_DiffAcc_p									##{RADIO420X port :: in_use}
END																				##{RADIO420X port :: in_use}

 BEGIN lyt_axi_radio420x                                                        ##{RADIO420X port :: in_use}
 PARAMETER INSTANCE = FMC_RADIO420X_CH1                                         ##{RADIO420X port :: in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{RADIO420X port :: in_use}
 PARAMETER C_FMCRADIO_CH2 = 0                                                   ##{RADIO420X port :: in_use}
 PARAMETER C_BASEADDR = 0x85000000                                              ##{RADIO420X port :: in_use}
 PARAMETER C_HIGHADDR = 0x85000fff                                              ##{RADIO420X port :: in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                 ##{RADIO420X port :: in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{RADIO420X port :: in_use}
 PORT i_PeriphReset_p = sys_periph_reset                                        ##{RADIO420X port :: in_use}
 PORT i_refClk200MHz_p = clk_200_0000MHzMMCM0                                   ##{RADIO420X port :: in_use}
 PORT iv12_fmcLA01LA06_AdcData_p = v12_Radio420xAdcDataCh1_s                    ##{RADIO420X port :: in_use}
 PORT i_fmcLA00N_AdcIQSel_p = Radio420xAdcIQSelCh1_s                            ##{RADIO420X port :: in_use}
 PORT i_fmcLA00P_AdcClk_p = Radio420xAdcClkCh1_s                                ##{RADIO420X port :: in_use}
 PORT ov12_fmcLA18LA23_DacData_p = v12_Radio420xDacDataCh1_s                    ##{RADIO420X port :: in_use}
 PORT o_fmcLA17N_DacIQSel_p = Radio420xDacIQSelCh1_s                            ##{RADIO420X port :: in_use}
 PORT o_fmcLA07N_LimeSpiCs_p = Radio420xLimeSpiCsCh1_s                          ##{RADIO420X port :: in_use}
 PORT o_fmcLA07P_LimeSpiClk_p = Radio420xLimeSpiClkCh1_s                        ##{RADIO420X port :: in_use}
 PORT o_fmcLA08N_LimeSpiMosi_p = Radio420xLimeSpiMosiCh1_s                      ##{RADIO420X port :: in_use}
 PORT i_fmcLA08P_LimeSpiMiso_p = Radio420xLimeSpiMisoCh1_s                      ##{RADIO420X port :: in_use}
 PORT o_fmcLA28P_RefDacSpiCs_p = Radio420xRefDacSpiCsCh1_s                      ##{RADIO420X port :: in_use}
 PORT o_fmcLA27N_RefDacSpiClk_p = Radio420xRefDacSpiClkCh1_s                    ##{RADIO420X port :: in_use}
 PORT o_fmcLA27P_RefDacSpiMosi_p = Radio420xRefDacSpiMosiCh1_s                  ##{RADIO420X port :: in_use}
 PORT ov2_fmcLA16P_PllCtrlSpiCs_p = v2_Radio420xPllCtrlSpiCsCh1_s               ##{RADIO420X port :: in_use}
 PORT o_fmcLA16N_PllCtrlSpiClk_p = Radio420xPllCtrlSpiClkCh1_s                  ##{RADIO420X port :: in_use}
 PORT o_fmcLA15N_PllCtrlSpiMosi_p = Radio420xPllCtrlSpiMosiCh1_s                ##{RADIO420X port :: in_use}
 PORT i_fmcLA15P_PllCtrlSpiMiso_p = Radio420xPllCtrlSpiMisoCh1_s                ##{RADIO420X port :: in_use}
 PORT o_fmcLA31N_RxGainSpiCs_p = Radio420xRxGainSpiCsCh1_s                      ##{RADIO420X port :: in_use}
 PORT o_fmcLA30P_RxGainSpiClk_p = Radio420xRxGainSpiClkCh1_s                    ##{RADIO420X port :: in_use}
 PORT o_fmcLA30N_RxGainSpiMosi_p = Radio420xRxGainSpiMosiCh1_s                  ##{RADIO420X port :: in_use}
 PORT o_fmcLA31P_TxGainSpiCs_p = Radio420xTxGainSpiCsCh1_s                      ##{RADIO420X port :: in_use}
 PORT o_fmcLA32N_TxGainSpiClk_p = Radio420xTxGainSpiClkCh1_s                    ##{RADIO420X port :: in_use}
 PORT o_fmcLA32P_TxGainSpiMosi_p = Radio420xTxGainSpiMosiCh1_s                  ##{RADIO420X port :: in_use}
 PORT i_fmcLA25N_PllLock_p = Radio420xPllLockCh1_s                              ##{RADIO420X port :: in_use}
 PORT ov2_fmcLA12_ClkMuxSin_p = v2_Radio420xClkMuxSinCh1_s                      ##{RADIO420X port :: in_use}
 PORT ov2_fmcLA11_ClkMuxSout_p = v2_Radio420xClkMuxSoutCh1_s                    ##{RADIO420X port :: in_use}
 PORT o_fmcLA13N_ClkMuxLoad_p = Radio420xClkMuxLoadCh1_s                        ##{RADIO420X port :: in_use}
 PORT o_fmcLA13P_ClkMuxConfig_p = Radio420xClkMuxConfigCh1_s                    ##{RADIO420X port :: in_use}
 PORT i_fmcLA14P_Pps_p = Radio420xfmcLA14P_PpsCh1_s                             ##{RADIO420X port :: in_use}
 PORT ov12_adcData_p = v12_Radio420x_AdcDataCh1_s                               ##{RADIO420X port :: adc_1_in_use}
 PORT iv12_dacData_p = v12_Radio420x_DacDataCh1_s                               ##{RADIO420X port :: dac_1_in_use}
 PORT i_dacIQSel_p = Radio420x_DacIQSelCh1_s                                    ##{RADIO420X port :: dac_1_in_use}
 PORT o_adcIQSel_p = Radio420x_AdcIQSelCh1_s                                    ##{RADIO420X port :: adc_1_in_use}
 PORT ov5_FpgaExtCtrl_p = v5_Radio420xExtCtrlCh1_s                              ##{RADIO420X port :: ext_ctrl_1_in_use}
 PORT iv16_refDacSpiData_p = v16_Radio420xDacRefClkCh1_s                        ##{RADIO420X port :: dac_ref_clk_1_in_use}
 PORT i_refDacSpiStart_p = Radio420xDacRefClkStartCh1_s                         ##{RADIO420X port :: dac_ref_clk_1_in_use}
 PORT o_refDacSpiBusy_p = Radio420xDacRefClkBusyCh1_s                           ##{RADIO420X port :: dac_ref_clk_1_in_use}
 PORT iv16_limeSpiData_p = v16_Radio420xLimeDataCh1_s                           ##{RADIO420X port :: lime_data_1_in_use}
 PORT i_limeSpiStart_p = Radio420xLimeDataStartCh1_s                            ##{RADIO420X port :: lime_data_1_in_use}
 PORT o_limeSpiBusy_p = Radio420xLimeDataBusyCh1_s                              ##{RADIO420X port :: lime_data_1_in_use}
 PORT iv6_rxGainSpiData_p = v6_Radio420xRxGainCh1_s                             ##{RADIO420X port :: rx_gain_1_in_use}
 PORT i_rxGainSpiStart_p = Radio420xRxGainStartCh1_s                            ##{RADIO420X port :: rx_gain_1_in_use}
 PORT o_rxGainSpiBusy_p = Radio420xRxGainBusyCh1_s                              ##{RADIO420X port :: rx_gain_1_in_use}
 PORT iv6_txGainSpiData_p = v6_Radio420xTxGainCh1_s                             ##{RADIO420X port :: tx_gain_1_in_use}
 PORT i_txGainSpiStart_p = Radio420xTxGainStartCh1_s                            ##{RADIO420X port :: tx_gain_1_in_use}
 PORT o_txGainSpiBusy_p = Radio420xTxGainBusyCh1_s                              ##{RADIO420X port :: tx_gain_1_in_use}
 PORT iv32_pllCtrlSpiData_p = v32_Radio420xPllCtrlCh1_s                         ##{RADIO420X port :: pll_ctrl_1_in_use}
 PORT iv2_pllCtrlSpiStart_p = v2_Radio420xPllCtrlStartCh1_s                     ##{RADIO420X port :: pll_ctrl_1_in_use}
 PORT o_pllCtrlSpiBusy_p = Radio420xPllCtrlBusyCh1_s                            ##{RADIO420X port :: pll_ctrl_1_in_use}
 PORT o_fmcLA10P_LimeReset_p = Radio420xLimeResetCh1_s                          ##{RADIO420X port :: in_use}
 PORT o_fmcLA09N_LimeTxEn_p = Radio420xLimeTxEnCh1_s                            ##{RADIO420X port :: in_use}
 PORT o_fmcLA09P_LimeRxEn_p = Radio420xLimeRxEnCh1_s                            ##{RADIO420X port :: in_use}
 PORT o_designClk_p = Radio420x_AdcClkCh1_s                                     ##{RADIO420X port :: in_use}
 PORT o_PPsOut_p = Radio420xPPsOut_s                                            ##{RADIO420X port :: in_use}
END                                                                             ##{RADIO420X port :: in_use}


BEGIN lyt_axi_radio420x                                                          ##{RADIO420X port :: channel_2_in_use}
 PARAMETER INSTANCE = FMC_RADIO420X_CH2                                         ##{RADIO420X port :: channel_2_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{RADIO420X port :: channel_2_in_use}
 PARAMETER C_FMCRADIO_CH2 = 1                                                    ##{RADIO420X port :: channel_2_in_use}
 PARAMETER C_BASEADDR = 0x85001000                                              ##{RADIO420X port :: channel_2_in_use}
 PARAMETER C_HIGHADDR = 0x85001FFF                                              ##{RADIO420X port :: channel_2_in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                  ##{RADIO420X port :: channel_2_in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                          ##{RADIO420X port :: channel_2_in_use}
 PORT i_PeriphReset_p = sys_periph_reset                                        ##{RADIO420X port :: channel_2_in_use}
 PORT i_refClk200MHz_p = clk_200_0000MHzMMCM0                                    ##{RADIO420X port :: channel_2_in_use}
 PORT iv12_fmcLA01LA06_AdcData_p = v12_Radio420xAdcDataCh2_s                    ##{RADIO420X port :: channel_2_in_use}
 PORT i_fmcLA00N_AdcIQSel_p = Radio420xAdcIQSelCh2_s                            ##{RADIO420X port :: channel_2_in_use}
 PORT i_fmcLA00P_AdcClk_p = Radio420xAdcClkCh2_s                                ##{RADIO420X port :: channel_2_in_use}
 PORT ov12_fmcLA18LA23_DacData_p = v12_Radio420xDacDataCh2_s                    ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA17N_DacIQSel_p = Radio420xDacIQSelCh2_s                            ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA07N_LimeSpiCs_p = Radio420xLimeSpiCsCh2_s                          ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA07P_LimeSpiClk_p = Radio420xLimeSpiClkCh2_s                        ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA08N_LimeSpiMosi_p = Radio420xLimeSpiMosiCh2_s                      ##{RADIO420X port :: channel_2_in_use}
 PORT i_fmcLA08P_LimeSpiMiso_p = Radio420xLimeSpiMisoCh2_s                      ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA28P_RefDacSpiCs_p = Radio420xRefDacSpiCsCh2_s                      ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA27N_RefDacSpiClk_p = Radio420xRefDacSpiClkCh2_s                    ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA27P_RefDacSpiMosi_p = Radio420xRefDacSpiMosiCh2_s                  ##{RADIO420X port :: channel_2_in_use}
 PORT ov2_fmcLA16P_PllCtrlSpiCs_p = v2_Radio420xPllCtrlSpiCsCh2_s               ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA16N_PllCtrlSpiClk_p = Radio420xPllCtrlSpiClkCh2_s                  ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA15N_PllCtrlSpiMosi_p = Radio420xPllCtrlSpiMosiCh2_s                ##{RADIO420X port :: channel_2_in_use}
 PORT i_fmcLA15P_PllCtrlSpiMiso_p = Radio420xPllCtrlSpiMisoCh2_s                ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA31N_RxGainSpiCs_p = Radio420xRxGainSpiCsCh2_s                      ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA30P_RxGainSpiClk_p = Radio420xRxGainSpiClkCh2_s                    ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA30N_RxGainSpiMosi_p = Radio420xRxGainSpiMosiCh2_s                  ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA31P_TxGainSpiCs_p = Radio420xTxGainSpiCsCh2_s                      ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA32N_TxGainSpiClk_p = Radio420xTxGainSpiClkCh2_s                    ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA32P_TxGainSpiMosi_p = Radio420xTxGainSpiMosiCh2_s                  ##{RADIO420X port :: channel_2_in_use}
 PORT i_fmcLA25N_PllLock_p = Radio420xPllLockCh2_s                              ##{RADIO420X port :: channel_2_in_use}
 PORT ov2_fmcLA12_ClkMuxSin_p = v2_Radio420xClkMuxSinCh2_s                      ##{RADIO420X port :: channel_2_in_use}
 PORT ov2_fmcLA11_ClkMuxSout_p = v2_Radio420xClkMuxSoutCh2_s                    ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA13N_ClkMuxLoad_p = Radio420xClkMuxLoadCh2_s                        ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA13P_ClkMuxConfig_p = Radio420xClkMuxConfigCh2_s                    ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA10P_LimeReset_p = Radio420xLimeResetCh2_s                          ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA09N_LimeTxEn_p = Radio420xLimeTxEnCh2_s                            ##{RADIO420X port :: channel_2_in_use}
 PORT o_fmcLA09P_LimeRxEn_p = Radio420xLimeRxEnCh2_s                            ##{RADIO420X port :: channel_2_in_use}
 PORT ov12_adcData_p = v12_Radio420x_AdcDataCh2_s                               ##{RADIO420X port :: adc_2_in_use}
 PORT iv12_dacData_p = v12_Radio420x_DacDataCh2_s                               ##{RADIO420X port :: dac_2_in_use}
 PORT i_dacIQSel_p = Radio420x_DacIQSelCh2_s                                    ##{RADIO420X port :: dac_2_in_use}
 PORT o_adcIQSel_p = Radio420x_AdcIQSelCh2_s                                    ##{RADIO420X port :: adc_2_in_use}
 PORT ov5_FpgaExtCtrl_p = v5_Radio420xExtCtrlCh2_s                              ##{RADIO420X port :: ext_ctrl_2_in_use}
 PORT iv16_refDacSpiData_p = v16_Radio420xDacRefClkCh2_s                        ##{RADIO420X port :: dac_ref_clk_2_in_use}
 PORT i_refDacSpiStart_p = Radio420xDacRefClkStartCh2_s                         ##{RADIO420X port :: dac_ref_clk_2_in_use}
 PORT o_refDacSpiBusy_p = Radio420xDacRefClkBusyCh2_s                           ##{RADIO420X port :: dac_ref_clk_2_in_use}
 PORT iv16_limeSpiData_p = v16_Radio420xLimeDataCh2_s                           ##{RADIO420X port :: lime_data_2_in_use}
 PORT i_limeSpiStart_p = Radio420xLimeDataStartCh2_s                            ##{RADIO420X port :: lime_data_2_in_use}
 PORT o_limeSpiBusy_p = Radio420xLimeDataBusyCh2_s                              ##{RADIO420X port :: lime_data_2_in_use}
 PORT iv6_rxGainSpiData_p = v6_Radio420xRxGainCh2_s                             ##{RADIO420X port :: rx_gain_2_in_use}
 PORT i_rxGainSpiStart_p = Radio420xRxGainStartCh2_s                            ##{RADIO420X port :: rx_gain_2_in_use}
 PORT o_rxGainSpiBusy_p = Radio420xRxGainBusyCh2_s                              ##{RADIO420X port :: rx_gain_2_in_use}
 PORT iv6_txGainSpiData_p = v6_Radio420xTxGainCh2_s                             ##{RADIO420X port :: tx_gain_2_in_use}
 PORT i_txGainSpiStart_p = Radio420xTxGainStartCh2_s                            ##{RADIO420X port :: tx_gain_2_in_use}
 PORT o_txGainSpiBusy_p = Radio420xTxGainBusyCh2_s                              ##{RADIO420X port :: tx_gain_2_in_use}
 PORT iv32_pllCtrlSpiData_p = v32_Radio420xPllCtrlCh2_s                         ##{RADIO420X port :: pll_ctrl_2_in_use}
 PORT iv2_pllCtrlSpiStart_p = v2_Radio420xPllCtrlStartCh2_s                     ##{RADIO420X port :: pll_ctrl_2_in_use}
 PORT o_pllCtrlSpiBusy_p = Radio420xPllCtrlBusyCh2_s                            ##{RADIO420X port :: pll_ctrl_2_in_use}
 PORT i_DesignClk_p = Radio420x_AdcClkCh1_s                                     ##{RADIO420X port :: channel_2_in_use}
END                                                                             ##{RADIO420X port :: channel_2_in_use}

BEGIN lyt_pps_sync																##{ADAC250 port :: in_use}
 PARAMETER INSTANCE = pps_sync													##{ADAC250 port :: in_use}
 PARAMETER HW_VER = 1.00.a														##{ADAC250 port :: in_use}
 PORT i_SysClk_p = clk_100_0000MHzMMCM0											##{ADAC250 port :: in_use}
 PORT i_FmcClk_p = ADAC250AdcDataClk_s											##{ADAC250 port :: in_use}
 PORT i_Pps_p = ADAC250PPsOut_s													##{ADAC250 port :: in_use}
 PORT ov32_CoreIdVers_p = pps_sync_ov32_CoreIdVers_p							##{ADAC250 port :: in_use}
 PORT iv32_FmcClkVal_p = axi_perseus6010_regs_ov32_PPSSYNC_FmcClkVal_p			##{ADAC250 port :: in_use}
 PORT i_CoreReset_p = axi_perseus6010_regs_o_PPSSYNC_CoreReset_p				##{ADAC250 port :: in_use}
 PORT i_RstUponRead_p = axi_perseus6010_regs_o_PPSSYNC_RstUponRead_p			##{ADAC250 port :: in_use}
 PORT i_RstAcc_p = axi_perseus6010_regs_o_PPSSYNC_RstAcc_p						##{ADAC250 port :: in_use}
 PORT i_CoreEnable_p = axi_perseus6010_regs_o_PPSSYNC_CoreEnable_p				##{ADAC250 port :: in_use}
 PORT i_DiffAccRead_p = axi_perseus6010_regs_o_PPSSYNC_DiffAccRead_p			##{ADAC250 port :: in_use}
 PORT ov32_PpsCnt_p = pps_sync_ov32_PpsCnt_p									##{ADAC250 port :: in_use}
 PORT ov32_DiffAcc_p = pps_sync_ov32_DiffAcc_p									##{ADAC250 port :: in_use}
END																				##{ADAC250 port :: in_use}

BEGIN lyt_axi_adac250                                                           ##{ADAC250 port :: in_use}
 PARAMETER INSTANCE = lyt_axi_adac250_0                                         ##{ADAC250 port :: in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{ADAC250 port :: in_use}
 PARAMETER C_BASEADDR = 0x85000000                                              ##{ADAC250 port :: in_use}
 PARAMETER C_HIGHADDR = 0x85000fff                                              ##{ADAC250 port :: in_use}
 PARAMETER ADC_CLKIN_FREQ = %{adac250_params_adc_clkin_freq}                    ##{ADAC250 port :: in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                 ##{ADAC250 port :: in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{ADAC250 port :: in_use}
 PORT i_RefClk200MHz_p = clk_200_0000MHzMMCM0                                   ##{ADAC250 port :: in_use}
 PORT iv15dp_AdcExtBus_p = v15dp_ADAC250AdcExtBus_s                             ##{ADAC250 port :: in_use}
 PORT iv15dn_AdcExtBus_p = v15dn_ADAC250AdcExtBus_s                             ##{ADAC250 port :: in_use}
 PORT ov18dp_DacExtBus_p = v18dp_ADAC250DacExtBus_s                             ##{ADAC250 port :: in_use}
 PORT ov18dn_DacExtBus_p = v18dn_ADAC250DacExtBus_s                             ##{ADAC250 port :: in_use}
 PORT iv3_CtrlExtBus_p = v3_ADAC250CtrlExtBus_s                                 ##{ADAC250 port :: in_use}
 PORT ov23_CtrlExtBus_p = v23_ADAC250CtrlExtBus_s                               ##{ADAC250 port :: in_use}
 PORT idp_fmcClk0_p = dp_ADAC250fmcClk0_s                                       ##{ADAC250 port :: in_use}
 PORT idn_fmcClk0_p = dn_ADAC250fmcClk0_s                                       ##{ADAC250 port :: in_use}
 PORT o_AdcDataClk_p = ADAC250AdcDataClk_s                                      ##{ADAC250 port :: in_use}
 PORT ov14_AdcDataChA_p = v14_ADAC250AdcDataChA_s                               ##{ADAC250 port :: adc_a_in_use}
 PORT ov14_AdcDataChB_p = v14_ADAC250AdcDataChB_s                               ##{ADAC250 port :: adc_b_in_use}
 PORT o_DataFormat_p = ADAC250DataFormat_s                                      ##{ADAC250 port :: data_format_in_use}
 PORT iv16_DacChA_p = v16_ADAC250DacChA_s                                       ##{ADAC250 port :: dac_a_in_use}
 PORT iv16_DacChB_p = v16_ADAC250DacChB_s                                       ##{ADAC250 port :: dac_b_in_use}
 PORT i_DacDesignClk_p = ADAC250AdcDataClk_s                                    ##{ADAC250 port :: in_use}
 PORT i_DacDataSync_p = ADAC250DacDataSync_s                                    ##{ADAC250 port :: dac_sync_in_use}
 PORT o_ChA_OvrFiltred_p = ADAC250ChA_OvrFiltred_s                              ##{ADAC250 port :: adc_a_ovr_f_in_use}
 PORT o_ChA_OvrNotFiltred_p = ADAC250ChA_OvrNotFiltred_s                        ##{ADAC250 port :: adc_a_ovr_in_use}
 PORT o_ChB_OvrFiltred_p = ADAC250ChB_OvrFiltred_s                              ##{ADAC250 port :: adc_b_ovr_f_in_use}
 PORT o_ChB_OvrNotFiltred_p = ADAC250ChB_OvrNotFiltred_s                        ##{ADAC250 port :: adc_b_ovr_in_use}
 PORT o_Trigger_p = ADAC250Trigger_s                                            ##{ADAC250 port :: trigger_in_use}
 PORT o_PPsOut_p = ADAC250PPsOut_s	                                            ##{ADAC250 port :: in_use}
END                                                                             ##{ADAC250 port :: in_use}

BEGIN lyt_axi_adc5000                                                           ##{ADC5000 port :: in_use}
 PARAMETER INSTANCE = axi_adc5000                                               ##{ADC5000 port :: in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{ADC5000 port :: in_use}
 PARAMETER C_BASEADDR = 0x85000000                                              ##{ADC5000 port :: in_use}
 PARAMETER C_HIGHADDR = 0x85000fff                                              ##{ADC5000 port :: in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                 ##{ADC5000 port :: in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{ADC5000 port :: in_use}
 PORT idp_Fmc_Clk2Fpga_p = axi_adc5000_idp_Fmc_Clk2Fpga_p                       ##{ADC5000 port :: in_use}
 PORT idn_Fmc_Clk2Fpga_p = axi_adc5000_idn_Fmc_Clk2Fpga_p                       ##{ADC5000 port :: in_use}
 PORT idp_Fmc_ext_trigger_p = axi_adc5000_idp_Fmc_ext_trigger_p                 ##{ADC5000 port :: in_use}
 PORT idn_Fmc_ext_trigger_p = axi_adc5000_idn_Fmc_ext_trigger_p                 ##{ADC5000 port :: in_use}
 PORT odp_Fmc_Sync_p = axi_adc5000_odp_Fmc_Sync_p                               ##{ADC5000 port :: in_use}
 PORT odn_Fmc_Sync_p = axi_adc5000_odn_Fmc_Sync_p                               ##{ADC5000 port :: in_use}
 PORT idp_Fmc_adr_p = axi_adc5000_idp_Fmc_adr_p                                 ##{ADC5000 port :: in_use}
 PORT idn_Fmc_adr_p = axi_adc5000_idn_Fmc_adr_p                                 ##{ADC5000 port :: in_use}
 PORT iv10dp_Fmc_ad_p = axi_adc5000_iv10dp_Fmc_ad_p                             ##{ADC5000 port :: in_use}
 PORT iv10dn_Fmc_ad_p = axi_adc5000_iv10dn_Fmc_ad_p                             ##{ADC5000 port :: in_use}
 PORT idp_Fmc_aor_p = axi_adc5000_idp_Fmc_aor_p                                 ##{ADC5000 port :: in_use}
 PORT idn_Fmc_aor_p = axi_adc5000_idn_Fmc_aor_p                                 ##{ADC5000 port :: in_use}
 PORT idp_Fmc_bdr_p = axi_adc5000_idp_Fmc_bdr_p                                 ##{ADC5000 port :: in_use}
 PORT idn_Fmc_bdr_p = axi_adc5000_idn_Fmc_bdr_p                                 ##{ADC5000 port :: in_use}
 PORT iv10dp_Fmc_bd_p = axi_adc5000_iv10dp_Fmc_bd_p                             ##{ADC5000 port :: in_use}
 PORT iv10dn_Fmc_bd_p = axi_adc5000_iv10dn_Fmc_bd_p                             ##{ADC5000 port :: in_use}
 PORT idp_Fmc_bor_p = axi_adc5000_idp_Fmc_bor_p                                 ##{ADC5000 port :: in_use}
 PORT idn_Fmc_bor_p = axi_adc5000_idn_Fmc_bor_p                                 ##{ADC5000 port :: in_use}
 PORT idp_Fmc_cdr_p = axi_adc5000_idp_Fmc_cdr_p                                 ##{ADC5000 port :: in_use}
 PORT idn_Fmc_cdr_p = axi_adc5000_idn_Fmc_cdr_p                                 ##{ADC5000 port :: in_use}
 PORT iv10dp_Fmc_cd_p = axi_adc5000_iv10dp_Fmc_cd_p                             ##{ADC5000 port :: in_use}
 PORT iv10dn_Fmc_cd_p = axi_adc5000_iv10dn_Fmc_cd_p                             ##{ADC5000 port :: in_use}
 PORT idp_Fmc_cor_p = axi_adc5000_idp_Fmc_cor_p                                 ##{ADC5000 port :: in_use}
 PORT idn_Fmc_cor_p = axi_adc5000_idn_Fmc_cor_p                                 ##{ADC5000 port :: in_use}
 PORT idp_Fmc_ddr_p = axi_adc5000_idp_Fmc_ddr_p                                 ##{ADC5000 port :: in_use}
 PORT idn_Fmc_ddr_p = axi_adc5000_idn_Fmc_ddr_p                                 ##{ADC5000 port :: in_use}
 PORT iv10dp_Fmc_dd_p = axi_adc5000_iv10dp_Fmc_dd_p                             ##{ADC5000 port :: in_use}
 PORT iv10dn_Fmc_dd_p = axi_adc5000_iv10dn_Fmc_dd_p                             ##{ADC5000 port :: in_use}
 PORT idp_Fmc_dor_p = axi_adc5000_idp_Fmc_dor_p                                 ##{ADC5000 port :: in_use}
 PORT idn_Fmc_dor_p = axi_adc5000_idn_Fmc_dor_p                                 ##{ADC5000 port :: in_use}
 PORT i_RefClk200MHz_p = clk_200_0000MHzMMCM0                                   ##{ADC5000 port :: in_use}
 PORT ov80_DataChA_p = axi_adc5000_ov80_DataChA_p                               ##{ADC5000 port :: adc_a_in_use}
 PORT ov80_DataChB_p = axi_adc5000_ov80_DataChB_p                               ##{ADC5000 port :: adc_b_in_use}
 PORT ov80_DataChC_p = axi_adc5000_ov80_DataChC_p                               ##{ADC5000 port :: adc_c_in_use}
 PORT ov80_DataChD_p = axi_adc5000_ov80_DataChD_p                               ##{ADC5000 port :: adc_d_in_use}
 PORT o_OverRangeChA_p = axi_adc5000_o_OverRangeChA_p                           ##{ADC5000 port :: adc_a_ovr_in_use}
 PORT o_OverRangeChB_p = axi_adc5000_o_OverRangeChB_p                           ##{ADC5000 port :: adc_b_ovr_in_use}
 PORT o_OverRangeChC_p = axi_adc5000_o_OverRangeChC_p                           ##{ADC5000 port :: adc_c_ovr_in_use}
 PORT o_OverRangeChD_p = axi_adc5000_o_OverRangeChD_p                           ##{ADC5000 port :: adc_d_ovr_in_use}
 PORT o_ReadyChA_p = axi_adc5000_o_ReadyChA_p                                   ##{ADC5000 port :: adc_a_in_use}
 PORT o_ReadyChB_p = axi_adc5000_o_ReadyChB_p                                   ##{ADC5000 port :: adc_b_in_use}
 PORT o_ReadyChC_p = axi_adc5000_o_ReadyChC_p                                   ##{ADC5000 port :: adc_c_in_use}
 PORT o_ReadyChD_p = axi_adc5000_o_ReadyChD_p                                   ##{ADC5000 port :: adc_d_in_use}
 PORT o_Trigger_p = axi_adc5000_o_Trigger_p                                     ##{ADC5000 port :: control_in_use}
 PORT o_DataClk_p = axi_adc5000_o_DataClk_p                                     ##{ADC5000 port :: in_use}
END                                                                             ##{ADC5000 port :: in_use}

BEGIN lyt_axi_mi250                                                             ##{MI250 port :: in_use}
 PARAMETER INSTANCE = fmc_mi250                                                 ##{MI250 port :: in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{MI250 port :: in_use}
 PARAMETER C_BASEADDR = 0x85000000                                              ##{MI250 port :: in_use}
 PARAMETER C_HIGHADDR = 0x85000FFF                                              ##{MI250 port :: in_use}
 PARAMETER ADC_CLKIN_FREQ_MHZ = %{mi250_params_adc_clkin_freq_mhz}              ##{MI250 port :: in_use}
 PARAMETER ADC_CLKFBOUT_MULT_F = %{mi250_params_adc_clkfbout_mult_f}            ##{MI250 port :: in_use}
 PARAMETER ADC_DIVCLK_DIVIDE = %{mi250_params_adc_divclk_divide}                ##{MI250 port :: in_use}
 PARAMETER ADC_CLKOUT0_DIVIDE_F = %{mi250_params_adc_clkout0_divide_f}          ##{MI250 port :: in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                 ##{MI250 port :: in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{MI250 port :: in_use}
 PORT i_RefClk200MHz_p = clk_200_0000MHzMMCM0                                   ##{MI250 port :: in_use}
 PORT o_Mi250PllScl_p = Mi250PllScl_s                                           ##{MI250 port :: in_use}
 PORT o_Mi250PllMosi_p = Mi250PllMosi_s                                         ##{MI250 port :: in_use}
 PORT i_Mi250PllMiso_p = Mi250PllMiso_s                                         ##{MI250 port :: in_use}
 PORT o_nMi250PllCs_p = nMi250PllCs_s                                           ##{MI250 port :: in_use}
 PORT o_Mi250AdcScl_p = Mi250AdcScl_s                                           ##{MI250 port :: in_use}
 PORT o_Mi250AdcMosi_p = Mi250AdcMosi_s                                         ##{MI250 port :: in_use}
 PORT i_Mi250AdcMisoAb_p = Mi250AdcMisoAb_s                                     ##{MI250 port :: in_use}
 PORT i_Mi250AdcMisoCd_p = Mi250AdcMisoCd_s                                     ##{MI250 port :: in_use}
 PORT i_Mi250AdcMisoEf_p = Mi250AdcMisoEf_s                                     ##{MI250 port :: in_use}
 PORT i_Mi250AdcMisoGh_p = Mi250AdcMisoGh_s                                     ##{MI250 port :: in_use}
 PORT o_nMi250AdcCsAb_p = nMi250AdcCsAb_s                                       ##{MI250 port :: in_use}
 PORT o_nMi250AdcCsCd_p = nMi250AdcCsCd_s                                       ##{MI250 port :: in_use}
 PORT o_nMi250AdcCsEf_p = nMi250AdcCsEf_s                                       ##{MI250 port :: in_use}
 PORT o_nMi250AdcCsGh_p = nMi250AdcCsGh_s                                       ##{MI250 port :: in_use}
 PORT o_Mi250AdcRst_p = Mi250AdcRst_s                                           ##{MI250 port :: in_use}
 PORT o_Mi250PllRefEn_p = Mi250PllRefEn_s                                       ##{MI250 port :: in_use}
 PORT i_Mi250PllStatus_p = Mi250PllStatus_s                                     ##{MI250 port :: in_use}
 PORT o_Mi250PllFunction_p = Mi250PllFunction_s                                 ##{MI250 port :: in_use}
 PORT o_Mi250VcoPwrEn_p = Mi250VcoPwrEn_s                                       ##{MI250 port :: in_use}
 PORT i_nMi250MonInt_p = nMi250MonInt_s                                         ##{MI250 port :: in_use}
 PORT i_Mi250TrigToFpga_p = Mi250TrigToFpga_s                                   ##{MI250 port :: in_use}
 PORT i_pMi250ClkToFpga_p = pMi250ClkToFpga_s                                   ##{MI250 port :: in_use}
 PORT i_nMi250ClkToFpga_p = nMi250ClkToFpga_s                                   ##{MI250 port :: in_use}
 PORT i_pMi250ExternClk_p = pMi250ExternClk_s                                   ##{MI250 port :: in_use}
 PORT i_nMi250ExternClk_p = nMi250ExternClk_s                                   ##{MI250 port :: in_use}
 PORT idp_Mi250AdcClkAB_p = pMi250AdcClkAB_s                                    ##{MI250 port :: in_use}
 PORT idn_Mi250AdcClkAB_p = nMi250AdcClkAB_s                                    ##{MI250 port :: in_use}
 PORT idp_Mi250AdcClkCD_p = pMi250AdcClkCD_s                                    ##{MI250 port :: in_use}
 PORT idn_Mi250AdcClkCD_p = nMi250AdcClkCD_s                                    ##{MI250 port :: in_use}
 PORT idp_Mi250AdcClkEF_p = pMi250AdcClkEF_s                                    ##{MI250 port :: in_use}
 PORT idn_Mi250AdcClkEF_p = nMi250AdcClkEF_s                                    ##{MI250 port :: in_use}
 PORT idp_Mi250AdcClkGH_p = pMi250AdcClkGH_s                                    ##{MI250 port :: in_use}
 PORT idn_Mi250AdcClkGH_p = nMi250AdcClkGH_s                                    ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcAData_p = v7dp_Mi250AdcAData_s                              ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcAData_p = v7dn_Mi250AdcAData_s                              ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcBData_p = v7dp_Mi250AdcBData_s                              ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcBData_p = v7dn_Mi250AdcBData_s                              ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcCData_p = v7dp_Mi250AdcCData_s                              ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcCData_p = v7dn_Mi250AdcCData_s                              ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcDData_p = v7dp_Mi250AdcDData_s                              ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcDData_p = v7dn_Mi250AdcDData_s                              ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcEData_p = v7dp_Mi250AdcEData_s                              ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcEData_p = v7dn_Mi250AdcEData_s                              ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcFData_p = v7dp_Mi250AdcFData_s                              ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcFData_p = v7dn_Mi250AdcFData_s                              ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcGData_p = v7dp_Mi250AdcGData_s                              ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcGData_p = v7dn_Mi250AdcGData_s                              ##{MI250 port :: in_use}
 PORT iv7dp_Mi250AdcHData_p = v7dp_Mi250AdcHData_s                              ##{MI250 port :: in_use}
 PORT iv7dn_Mi250AdcHData_p = v7dn_Mi250AdcHData_s                              ##{MI250 port :: in_use}
 PORT o_Mi250AdcDataClkOut_p = Mi250AdcDataClkOut_s                             ##{MI250 port :: in_use}
 PORT ov14_Mi250AdcADataOut_p = v14_Mi250AdcADataOut_s                          ##{MI250 port :: adc_a_in_use}
 PORT ov14_Mi250AdcBDataOut_p = v14_Mi250AdcBDataOut_s                          ##{MI250 port :: adc_b_in_use}
 PORT ov14_Mi250AdcCDataOut_p = v14_Mi250AdcCDataOut_s                          ##{MI250 port :: adc_c_in_use}
 PORT ov14_Mi250AdcDDataOut_p = v14_Mi250AdcDDataOut_s                          ##{MI250 port :: adc_d_in_use}
 PORT ov14_Mi250AdcEDataOut_p = v14_Mi250AdcEDataOut_s                          ##{MI250 port :: adc_e_in_use}
 PORT ov14_Mi250AdcFDataOut_p = v14_Mi250AdcFDataOut_s                          ##{MI250 port :: adc_f_in_use}
 PORT ov14_Mi250AdcGDataOut_p = v14_Mi250AdcGDataOut_s                          ##{MI250 port :: adc_g_in_use}
 PORT ov14_Mi250AdcHDataOut_p = v14_Mi250AdcHDataOut_s                          ##{MI250 port :: adc_h_in_use}
 PORT o_Mi250AdcADataValid_p = Mi250AdcADataValid_s                             ##{MI250 port :: adc_a_in_use}
 PORT o_Mi250AdcBDataValid_p = Mi250AdcBDataValid_s                             ##{MI250 port :: adc_b_in_use}
 PORT o_Mi250AdcCDataValid_p = Mi250AdcCDataValid_s                             ##{MI250 port :: adc_c_in_use}
 PORT o_Mi250AdcDDataValid_p = Mi250AdcDDataValid_s                             ##{MI250 port :: adc_d_in_use}
 PORT o_Mi250AdcEDataValid_p = Mi250AdcEDataValid_s                             ##{MI250 port :: adc_e_in_use}
 PORT o_Mi250AdcFDataValid_p = Mi250AdcFDataValid_s                             ##{MI250 port :: adc_f_in_use}
 PORT o_Mi250AdcGDataValid_p = Mi250AdcGDataValid_s                             ##{MI250 port :: adc_g_in_use}
 PORT o_Mi250AdcHDataValid_p = Mi250AdcHDataValid_s                             ##{MI250 port :: adc_h_in_use}
 PORT o_Mi250AdcTrigout_p = Mi250AdcTrigout_s                                   ##{MI250 port :: control_in_use}
END                                                                             ##{MI250 port :: in_use}

# MI125 Bottom (master)                                                         ##{MI125 port :: bottom_in_use}
BEGIN lyt_axi_mi125                                                             ##{MI125 port :: bottom_in_use}
 PARAMETER INSTANCE = axi_mi125_bottom                                          ##{MI125 port :: bottom_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{MI125 port :: bottom_in_use}
 PARAMETER C_BASEADDR = 0x85000000                                              ##{MI125 port :: bottom_in_use}
 PARAMETER C_HIGHADDR = 0x85000FFF                                              ##{MI125 port :: bottom_in_use}
 PARAMETER C_PRIMARY_MODULE = true                                              ##{MI125 port :: bottom_in_use}
 PARAMETER C_BOTTOM_POSITION = true                                             ##{MI125 port :: bottom_in_use}
 PARAMETER ADC_CLKIN_FREQ = %{mi125_params_adc_clkin_freq}                      ##{MI125 port :: bottom_in_use}
 PARAMETER ADC_CLKFBOUT_MULT_F = %{mi125_params_adc_clkfbout_mult_f}            ##{MI125 port :: bottom_in_use}
 PARAMETER ADC_DIVCLK_DIVIDE = %{mi125_params_adc_divclk_divide}                ##{MI125 port :: bottom_in_use}
 PARAMETER ADC_CLKOUT0_DIVIDE_F = %{mi125_params_adc_clkout0_divide_f}          ##{MI125 port :: bottom_in_use}
 PARAMETER ADC_CLKOUT1_DIVIDE = %{mi125_params_adc_clkout1_divide}              ##{MI125 port :: bottom_in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                 ##{MI125 port :: bottom_in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{MI125 port :: bottom_in_use}
 PORT i_RefClk200MHz_p = clk_200_0000MHzMMCM0                                   ##{MI125 port :: bottom_in_use}
 PORT idp_DataFromADC_p = dp_Mi125DataFromADCBottom_s                           ##{MI125 port :: bottom_in_use}
 PORT idn_DataFromADC_p = dn_Mi125DataFromADCBottom_s                           ##{MI125 port :: bottom_in_use}
 PORT idp_ClockFromADC_p = dp_Mi125ClockFromADCBottom_s                         ##{MI125 port :: bottom_in_use}
 PORT idn_ClockFromADC_p = dn_Mi125ClockFromADCBottom_s                         ##{MI125 port :: bottom_in_use}
 PORT idp_FrameFromADC_p = dp_Mi125FrameFromADCBottom_s                         ##{MI125 port :: bottom_in_use}
 PORT idn_FrameFromADC_p = dn_Mi125FrameFromADCBottom_s                         ##{MI125 port :: bottom_in_use}
 PORT i_TriggerInFromIO_p = Mi125TriggerInFromIOBottom_s                        ##{MI125 port :: bottom_in_use}
 PORT o_TriggerOutToIO_p = Mi125TriggerOutToIOBottom_s                          ##{MI125 port :: bottom_in_use}
 PORT i_logicRst_p = sys_periph_reset                                           ##{MI125 port :: bottom_in_use}
 PORT o_AdcDataClk_p = Mi125AdcDataClk_s                                        ##{MI125 port :: bottom_in_use}
 PORT ov14_AdcDataCh1_p = v14_Mi125AdcDataCh1Bottom_s                           ##{MI125 port :: bottom_adc1_in_use}
 PORT ov14_AdcDataCh2_p = v14_Mi125AdcDataCh2Bottom_s                           ##{MI125 port :: bottom_adc2_in_use}
 PORT ov14_AdcDataCh3_p = v14_Mi125AdcDataCh3Bottom_s                           ##{MI125 port :: bottom_adc3_in_use}
 PORT ov14_AdcDataCh4_p = v14_Mi125AdcDataCh4Bottom_s                           ##{MI125 port :: bottom_adc4_in_use}
 PORT ov14_AdcDataCh5_p = v14_Mi125AdcDataCh5Bottom_s                           ##{MI125 port :: bottom_adc5_in_use}
 PORT ov14_AdcDataCh6_p = v14_Mi125AdcDataCh6Bottom_s                           ##{MI125 port :: bottom_adc6_in_use}
 PORT ov14_AdcDataCh7_p = v14_Mi125AdcDataCh7Bottom_s                           ##{MI125 port :: bottom_adc7_in_use}
 PORT ov14_AdcDataCh8_p = v14_Mi125AdcDataCh8Bottom_s                           ##{MI125 port :: bottom_adc8_in_use}
 PORT ov14_AdcDataCh9_p = v14_Mi125AdcDataCh9Bottom_s                           ##{MI125 port :: bottom_adc9_in_use}
 PORT ov14_AdcDataCh10_p = v14_Mi125AdcDataCh10Bottom_s                         ##{MI125 port :: bottom_adc10_in_use}
 PORT ov14_AdcDataCh11_p = v14_Mi125AdcDataCh11Bottom_s                         ##{MI125 port :: bottom_adc11_in_use}
 PORT ov14_AdcDataCh12_p = v14_Mi125AdcDataCh12Bottom_s                         ##{MI125 port :: bottom_adc12_in_use}
 PORT ov14_AdcDataCh13_p = v14_Mi125AdcDataCh13Bottom_s                         ##{MI125 port :: bottom_adc13_in_use}
 PORT ov14_AdcDataCh14_p = v14_Mi125AdcDataCh14Bottom_s                         ##{MI125 port :: bottom_adc14_in_use}
 PORT ov14_AdcDataCh15_p = v14_Mi125AdcDataCh15Bottom_s                         ##{MI125 port :: bottom_adc15_in_use}
 PORT ov14_AdcDataCh16_p = v14_Mi125AdcDataCh16Bottom_s                         ##{MI125 port :: bottom_adc16_in_use}
 PORT o_AdcCh1Valid_p = Mi125AdcCh1ValidBottom_s                                ##{MI125 port :: bottom_adc1_in_use}
 PORT o_AdcCh2Valid_p = Mi125AdcCh2ValidBottom_s                                ##{MI125 port :: bottom_adc2_in_use}
 PORT o_AdcCh3Valid_p = Mi125AdcCh3ValidBottom_s                                ##{MI125 port :: bottom_adc3_in_use}
 PORT o_AdcCh4Valid_p = Mi125AdcCh4ValidBottom_s                                ##{MI125 port :: bottom_adc4_in_use}
 PORT o_AdcCh5Valid_p = Mi125AdcCh5ValidBottom_s                                ##{MI125 port :: bottom_adc5_in_use}
 PORT o_AdcCh6Valid_p = Mi125AdcCh6ValidBottom_s                                ##{MI125 port :: bottom_adc6_in_use}
 PORT o_AdcCh7Valid_p = Mi125AdcCh7ValidBottom_s                                ##{MI125 port :: bottom_adc7_in_use}
 PORT o_AdcCh8Valid_p = Mi125AdcCh8ValidBottom_s                                ##{MI125 port :: bottom_adc8_in_use}
 PORT o_AdcCh9Valid_p = Mi125AdcCh9ValidBottom_s                                ##{MI125 port :: bottom_adc9_in_use}
 PORT o_AdcCh10Valid_p = Mi125AdcCh10ValidBottom_s                              ##{MI125 port :: bottom_adc10_in_use}
 PORT o_AdcCh11Valid_p = Mi125AdcCh11ValidBottom_s                              ##{MI125 port :: bottom_adc11_in_use}
 PORT o_AdcCh12Valid_p = Mi125AdcCh12ValidBottom_s                              ##{MI125 port :: bottom_adc12_in_use}
 PORT o_AdcCh13Valid_p = Mi125AdcCh13ValidBottom_s                              ##{MI125 port :: bottom_adc13_in_use}
 PORT o_AdcCh14Valid_p = Mi125AdcCh14ValidBottom_s                              ##{MI125 port :: bottom_adc14_in_use}
 PORT o_AdcCh15Valid_p = Mi125AdcCh15ValidBottom_s                              ##{MI125 port :: bottom_adc15_in_use}
 PORT o_AdcCh16Valid_p = Mi125AdcCh16ValidBottom_s                              ##{MI125 port :: bottom_adc16_in_use}
 PORT o_AdcCh1to4Enabled_p = Mi125AdcCh1to4EnabledBottom_s                      ##{MI125 port :: bottom_adc_1to4_enabled_in_use}
 PORT o_AdcCh5to8Enabled_p = Mi125AdcCh5to8EnabledBottom_s                      ##{MI125 port :: bottom_adc_5to8_enabled_in_use}
 PORT o_AdcCh9to12Enabled_p = Mi125AdcCh9to12EnabledBottom_s                    ##{MI125 port :: bottom_adc_9to12_enabled_in_use}
 PORT o_AdcCh13to16Enabled_p = Mi125AdcCh13to16EnabledBottom_s                  ##{MI125 port :: bottom_adc_13to16_enabled_in_use}
 PORT o_TriggerToFPGA_p = Mi125TriggerToFPGA_s                                  ##{MI125 port :: bottom_trigger_input_in_use}
 PORT i_TriggerFromFPGA_p = Mi125TriggerFromFPGA_s                              ##{MI125 port :: bottom_trigger_output_in_use}
 PORT o_DataFormat_p = Mi125DataFormat_s                                        ##{MI125 port :: bottom_data_format_in_use}
 PORT o_IPSerialClockOut_p = Mi125IPSerialClockMain                             ##{MI125 port :: bottom_and_top_in_use}
 PORT o_IPSerialClockOutDiv_p = Mi125IPSerialClockDivMain                       ##{MI125 port :: bottom_and_top_in_use}
END                                                                             ##{MI125 port :: bottom_in_use}

# MI125 Top (slave)                                                             ##{MI125 port :: top_in_use}
BEGIN lyt_axi_mi125                                                             ##{MI125 port :: top_in_use}
 PARAMETER INSTANCE = axi_mi125_top                                             ##{MI125 port :: top_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{MI125 port :: top_in_use}
 PARAMETER C_BASEADDR = 0x85001000                                              ##{MI125 port :: top_in_use}
 PARAMETER C_HIGHADDR = 0x85001FFF                                              ##{MI125 port :: top_in_use}
 PARAMETER C_PRIMARY_MODULE = %{mi125_1_params_primary_module}                  ##{MI125 port :: top_in_use}
 PARAMETER C_BOTTOM_POSITION = false                                            ##{MI125 port :: top_in_use}
 PARAMETER ADC_CLKIN_FREQ = %{mi125_params_adc_clkin_freq}                      ##{MI125 port :: top_in_use}
 PARAMETER ADC_CLKFBOUT_MULT_F = %{mi125_params_adc_clkfbout_mult_f}            ##{MI125 port :: top_in_use}
 PARAMETER ADC_DIVCLK_DIVIDE = %{mi125_params_adc_divclk_divide}                ##{MI125 port :: top_in_use}
 PARAMETER ADC_CLKOUT0_DIVIDE_F = %{mi125_params_adc_clkout0_divide_f}          ##{MI125 port :: top_in_use}
 PARAMETER ADC_CLKOUT1_DIVIDE = %{mi125_params_adc_clkout1_divide}              ##{MI125 port :: top_in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                 ##{MI125 port :: top_in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{MI125 port :: top_in_use}
 PORT i_RefClk200MHz_p = clk_200_0000MHzMMCM0                                   ##{MI125 port :: top_in_use}
 PORT idp_DataFromADC_p = dp_Mi125DataFromADCTop_s                              ##{MI125 port :: top_in_use}
 PORT idn_DataFromADC_p = dn_Mi125DataFromADCTop_s                              ##{MI125 port :: top_in_use}
 PORT idp_ClockFromADC_p = dp_Mi125ClockFromADCTop_s                            ##{MI125 port :: top_in_use}
 PORT idn_ClockFromADC_p = dn_Mi125ClockFromADCTop_s                            ##{MI125 port :: top_in_use}
 PORT idp_FrameFromADC_p = dp_Mi125FrameFromADCTop_s                            ##{MI125 port :: top_in_use}
 PORT idn_FrameFromADC_p = dn_Mi125FrameFromADCTop_s                            ##{MI125 port :: top_in_use}
 PORT i_logicRst_p = sys_periph_reset                                           ##{MI125 port :: top_in_use}
 PORT o_AdcDataClk_p = Mi125AdcDataClk_s                                        ##{MI125 port :: top_with_mo1000_in_use}}
 PORT ov14_AdcDataCh1_p = v14_Mi125AdcDataCh1Top_s                              ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh2_p = v14_Mi125AdcDataCh2Top_s                              ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh3_p = v14_Mi125AdcDataCh3Top_s                              ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh4_p = v14_Mi125AdcDataCh4Top_s                              ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh5_p = v14_Mi125AdcDataCh5Top_s                              ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh6_p = v14_Mi125AdcDataCh6Top_s                              ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh7_p = v14_Mi125AdcDataCh7Top_s                              ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh8_p = v14_Mi125AdcDataCh8Top_s                              ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh9_p = v14_Mi125AdcDataCh9Top_s                              ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh10_p = v14_Mi125AdcDataCh10Top_s                            ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh11_p = v14_Mi125AdcDataCh11Top_s                            ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh12_p = v14_Mi125AdcDataCh12Top_s                            ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh13_p = v14_Mi125AdcDataCh13Top_s                            ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh14_p = v14_Mi125AdcDataCh14Top_s                            ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh15_p = v14_Mi125AdcDataCh15Top_s                            ##{MI125 port :: top_in_use}
 PORT ov14_AdcDataCh16_p = v14_Mi125AdcDataCh16Top_s                            ##{MI125 port :: top_in_use}
 PORT o_AdcCh1Valid_p = Mi125AdcCh1ValidTop_s                                   ##{MI125 port :: top_in_use}
 PORT o_AdcCh2Valid_p = Mi125AdcCh2ValidTop_s                                   ##{MI125 port :: top_in_use}
 PORT o_AdcCh3Valid_p = Mi125AdcCh3ValidTop_s                                   ##{MI125 port :: top_in_use}
 PORT o_AdcCh4Valid_p = Mi125AdcCh4ValidTop_s                                   ##{MI125 port :: top_in_use}
 PORT o_AdcCh5Valid_p = Mi125AdcCh5ValidTop_s                                   ##{MI125 port :: top_in_use}
 PORT o_AdcCh6Valid_p = Mi125AdcCh6ValidTop_s                                   ##{MI125 port :: top_in_use}
 PORT o_AdcCh7Valid_p = Mi125AdcCh7ValidTop_s                                   ##{MI125 port :: top_in_use}
 PORT o_AdcCh8Valid_p = Mi125AdcCh8ValidTop_s                                   ##{MI125 port :: top_in_use}
 PORT o_AdcCh9Valid_p = Mi125AdcCh9ValidTop_s                                   ##{MI125 port :: top_in_use}
 PORT o_AdcCh10Valid_p = Mi125AdcCh10ValidTop_s                                 ##{MI125 port :: top_in_use}
 PORT o_AdcCh11Valid_p = Mi125AdcCh11ValidTop_s                                 ##{MI125 port :: top_in_use}
 PORT o_AdcCh12Valid_p = Mi125AdcCh12ValidTop_s                                 ##{MI125 port :: top_in_use}
 PORT o_AdcCh13Valid_p = Mi125AdcCh13ValidTop_s                                 ##{MI125 port :: top_in_use}
 PORT o_AdcCh14Valid_p = Mi125AdcCh14ValidTop_s                                 ##{MI125 port :: top_in_use}
 PORT o_AdcCh15Valid_p = Mi125AdcCh15ValidTop_s                                 ##{MI125 port :: top_in_use}
 PORT o_AdcCh16Valid_p = Mi125AdcCh16ValidTop_s                                 ##{MI125 port :: top_in_use}
 PORT o_AdcCh1to4Enabled_p = Mi125AdcCh1to4EnabledTop_s                         ##{MI125 port :: top_in_use}
 PORT o_AdcCh5to8Enabled_p = Mi125AdcCh5to8EnabledTop_s                         ##{MI125 port :: top_in_use}
 PORT o_AdcCh9to12Enabled_p = Mi125AdcCh9to12EnabledTop_s                       ##{MI125 port :: top_in_use}
 PORT o_AdcCh13to16Enabled_p = Mi125AdcCh13to16EnabledTop_s                     ##{MI125 port :: top_in_use}
 PORT i_IPSerialClockIn_p = Mi125IPSerialClockMain                              ##{MI125 port :: bottom_and_top_in_use}
 PORT i_IPSerialClockInDiv_p = Mi125IPSerialClockDivMain                        ##{MI125 port :: bottom_and_top_in_use}
 PORT o_DataFormat_p = Mi125DataFormat_s                                        ##{MI125 port :: top_with_mo1000_in_use}
END                                                                             ##{MI125 port :: top_in_use}

BEGIN util_vector_logic                                                         ##{MI125 port :: top_with_mo1000_in_use}
 PARAMETER INSTANCE = mi125_async_fifo_rst                                      ##{MI125 port :: top_with_mo1000_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{MI125 port :: top_with_mo1000_in_use}
 PARAMETER C_OPERATION = not                                                    ##{MI125 port :: top_with_mo1000_in_use}
 PARAMETER C_SIZE = 1                                                           ##{MI125 port :: top_with_mo1000_in_use}
 PORT Op1 = Mi125AdcCh1ValidTop_s                                               ##{MI125 port :: top_with_mo1000_in_use}
 PORT Res = mi125_async_fifo_rst_s                                              ##{MI125 port :: top_with_mo1000_in_use}
END                                                                             ##{MI125 port :: top_with_mo1000_in_use}
                                                                                ##{MI125 port :: top_with_mo1000_in_use}
BEGIN lyt_mi125_async_fifo                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ##{MI125 port :: top_with_mo1000_in_use}
 PARAMETER INSTANCE = mi125_async_fifo                                                                                                                                                                                                                                                                                                                                                                                                                                                      ##{MI125 port :: top_with_mo1000_in_use}
 PARAMETER HW_VER = 1.00.a                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Rst_p = mi125_async_fifo_rst_s                                                                                                                                                                                                                                                                                                                                                                                                                                                      ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_WrClk_p = Mi125AdcDataClk_s                                                                                                                                                                                                                                                                                                                                                                                                                                                         ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv5_Misc_p = Mi125DataFormat_s & Mi125AdcCh13to16EnabledTop_s & Mi125AdcCh9to12EnabledTop_s & Mi125AdcCh5to8EnabledTop_s & Mi125AdcCh1to4EnabledTop_s                                                                                                                                                                                                                                                                                                                                 ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv16_DataValid_p = Mi125AdcCh16ValidTop_s & Mi125AdcCh15ValidTop_s & Mi125AdcCh14ValidTop_s & Mi125AdcCh13ValidTop_s & Mi125AdcCh12ValidTop_s & Mi125AdcCh11ValidTop_s & Mi125AdcCh10ValidTop_s  & Mi125AdcCh9ValidTop_s & Mi125AdcCh8ValidTop_s & Mi125AdcCh7ValidTop_s & Mi125AdcCh6ValidTop_s & Mi125AdcCh5ValidTop_s & Mi125AdcCh4ValidTop_s & Mi125AdcCh3ValidTop_s & Mi125AdcCh2ValidTop_s & Mi125AdcCh1ValidTop_s                                                              ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv224_Data_p = v14_Mi125AdcDataCh16Top_s & v14_Mi125AdcDataCh15Top_s & v14_Mi125AdcDataCh14Top_s & v14_Mi125AdcDataCh13Top_s & v14_Mi125AdcDataCh12Top_s & v14_Mi125AdcDataCh11Top_s & v14_Mi125AdcDataCh10Top_s & v14_Mi125AdcDataCh9Top_s & v14_Mi125AdcDataCh8Top_s & v14_Mi125AdcDataCh7Top_s & v14_Mi125AdcDataCh6Top_s & v14_Mi125AdcDataCh5Top_s & v14_Mi125AdcDataCh4Top_s & v14_Mi125AdcDataCh3Top_s & v14_Mi125AdcDataCh2Top_s & v14_Mi125AdcDataCh1Top_s                   ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_WeEn_p = Mi125AdcCh1ValidTop_s                                                                                                                                                                                                                                                                                                                                                                                                                                                      ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_RdClk_p = DesignClk_s                                                                                                                                                                                                                                                                                                                                                                                                                                                               ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_RdEn_p = net_vcc                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ##{MI125 port :: top_with_mo1000_in_use}
 PORT ov5_Misc_p =  Mi125DataFormatFifo_s & Mi125AdcCh13to16EnabledFifo_s & Mi125AdcCh9to12EnabledFifo_s & Mi125AdcCh5to8EnabledFifo_s & Mi125AdcCh1to4EnabledFifo_s                                                                                                                                                                                                                                                                                                                        ##{MI125 port :: top_with_mo1000_in_use}
 PORT ov16_DataValid_p = Mi125AdcCh16ValidFifo_s & Mi125AdcCh15ValidFifo_s & Mi125AdcCh14ValidFifo_s & Mi125AdcCh13ValidFifo_s & Mi125AdcCh12ValidFifo_s & Mi125AdcCh11ValidFifo_s & Mi125AdcCh10ValidFifo_s  & Mi125AdcCh9ValidFifo_s & Mi125AdcCh8ValidFifo_s & Mi125AdcCh7ValidFifo_s & Mi125AdcCh6ValidFifo_s & Mi125AdcCh5ValidFifo_s & Mi125AdcCh4ValidFifo_s & Mi125AdcCh3ValidFifo_s & Mi125AdcCh2ValidFifo_s & Mi125AdcCh1ValidFifo_s                                              ##{MI125 port :: top_with_mo1000_in_use}
 PORT ov224_Data_p = v14_Mi125AdcDataCh16Fifo_s & v14_Mi125AdcDataCh15Fifo_s & v14_Mi125AdcDataCh14Fifo_s & v14_Mi125AdcDataCh13Fifo_s & v14_Mi125AdcDataCh12Fifo_s & v14_Mi125AdcDataCh11Fifo_s & v14_Mi125AdcDataCh10Fifo_s & v14_Mi125AdcDataCh9Fifo_s & v14_Mi125AdcDataCh8Fifo_s & v14_Mi125AdcDataCh7Fifo_s & v14_Mi125AdcDataCh6Fifo_s & v14_Mi125AdcDataCh5Fifo_s & v14_Mi125AdcDataCh4Fifo_s & v14_Mi125AdcDataCh3Fifo_s & v14_Mi125AdcDataCh2Fifo_s & v14_Mi125AdcDataCh1Fifo_s   ##{MI125 port :: top_with_mo1000_in_use}
END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ##{MI125 port :: top_with_mo1000_in_use}

BEGIN lyt_axi_mo1000                                                            ##{MO1000 port :: in_use_0}
 PARAMETER INSTANCE = axi_mo1000_0                                              ##{MO1000 port :: in_use_0}
 PARAMETER HW_VER = 1.00.a                                                      ##{MO1000 port :: in_use_0}
 PARAMETER C_BASEADDR = 0x85000000                                              ##{MO1000 port :: in_use_0}
 PARAMETER C_HIGHADDR = 0x85000FFF                                              ##{MO1000 port :: in_use_0}
 PARAMETER C_CLOCK_MASTER = true                                                ##{MO1000 port :: in_use_0}
 PARAMETER C_FMC_POSITION = 0                                                   ##{MO1000 port :: in_use_0}
 PARAMETER C_AXI_CLK_FREQ_MHZ = 100                                             ##{MO1000 port :: in_use_0}
 PARAMETER C_REF_CLK_FREQ_MHZ = 200.0                                           ##{MO1000 port :: in_use_0}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                 ##{MO1000 port :: in_use_0}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{MO1000 port :: in_use_0}
 PORT i_Rst_p = sys_periph_reset                                                ##{MO1000 port :: in_use_0}
 PORT i_RefClk_p = clk_200_0000MHzMMCM0                                         ##{MO1000 port :: in_use_0}
 PORT o_DesignClk_p = mo1000_0_DesignClk_s                                      ##{MO1000 port :: in_use_0}
 PORT iv16_DacDataCh1_p = v16_mo1000_mux_0_data_0_s                             ##{MO1000 port :: dac1_in_use}
 PORT iv16_DacDataCh2_p = v16_mo1000_mux_0_data_1_s                             ##{MO1000 port :: dac2_in_use}
 PORT iv16_DacDataCh3_p = v16_mo1000_mux_0_data_2_s                             ##{MO1000 port :: dac3_in_use}
 PORT iv16_DacDataCh4_p = v16_mo1000_mux_0_data_3_s                             ##{MO1000 port :: dac4_in_use}
 PORT iv16_DacDataCh5_p = v16_mo1000_mux_0_data_4_s                             ##{MO1000 port :: dac5_in_use}
 PORT iv16_DacDataCh6_p = v16_mo1000_mux_0_data_5_s                             ##{MO1000 port :: dac6_in_use}
 PORT iv16_DacDataCh7_p = v16_mo1000_mux_0_data_6_s                             ##{MO1000 port :: dac7_in_use}
 PORT iv16_DacDataCh8_p = v16_mo1000_mux_0_data_7_s                             ##{MO1000 port :: dac8_in_use}
 PORT o_DacRdyCh1_p = mo1000_0_DacRdyCh1_s                                      ##{MO1000 port :: dac1_in_use}
 PORT o_DacRdyCh2_p = mo1000_0_DacRdyCh2_s                                      ##{MO1000 port :: dac2_in_use}
 PORT o_DacRdyCh3_p = mo1000_0_DacRdyCh3_s                                      ##{MO1000 port :: dac3_in_use}
 PORT o_DacRdyCh4_p = mo1000_0_DacRdyCh4_s                                      ##{MO1000 port :: dac4_in_use}
 PORT o_DacRdyCh5_p = mo1000_0_DacRdyCh5_s                                      ##{MO1000 port :: dac5_in_use}
 PORT o_DacRdyCh6_p = mo1000_0_DacRdyCh6_s                                      ##{MO1000 port :: dac6_in_use}
 PORT o_DacRdyCh7_p = mo1000_0_DacRdyCh7_s                                      ##{MO1000 port :: dac7_in_use}
 PORT o_DacRdyCh8_p = mo1000_0_DacRdyCh8_s                                      ##{MO1000 port :: dac8_in_use}
 PORT o_Trigger_p = mo1000_0_Trigger_s                                          ##{MO1000 port :: trig_in_use}
 PORT idp_ClockFromFMC_p = mo1000_0_pClockFromFMC_s                             ##{MO1000 port :: in_use_0}
 PORT idn_ClockFromFMC_p = mo1000_0_nClockFromFMC_s                             ##{MO1000 port :: in_use_0}
 PORT odp_DataToFMC_p = mo1000_0_pDataToFMC_s                                   ##{MO1000 port :: in_use_0}
 PORT odn_DataToFMC_p = mo1000_0_nDataToFMC_s                                   ##{MO1000 port :: in_use_0}
 PORT odp_DciToFMC_p = mo1000_0_pDciToFMC_s                                     ##{MO1000 port :: in_use_0}
 PORT odn_DciToFMC_p = mo1000_0_nDciToFMC_s                                     ##{MO1000 port :: in_use_0}
 PORT odp_FrameToFMC_p = mo1000_0_pFrameToFMC_s                                 ##{MO1000 port :: in_use_0}
 PORT odn_FrameToFMC_p = mo1000_0_nFrameToFMC_s                                 ##{MO1000 port :: in_use_0}
 PORT i_TriggerFromFMC_p = mo1000_0_TriggerFromFMC_s                            ##{MO1000 port :: in_use_0}
 PORT o_SerialClk_p = mo1000_0_SerialClk_s                                      ##{MO1000 port :: in_use_0}
END                                                                             ##{MO1000 port :: in_use_0}

BEGIN lyt_axi_mo1000                                                            ##{MO1000 port :: in_use_1}
 PARAMETER INSTANCE = axi_mo1000_1                                              ##{MO1000 port :: in_use_1}
 PARAMETER HW_VER = 1.00.a                                                      ##{MO1000 port :: in_use_1}
 PARAMETER C_BASEADDR = 0x85001000                                              ##{MO1000 port :: in_use_1}
 PARAMETER C_HIGHADDR = 0x85001FFF                                              ##{MO1000 port :: in_use_1}
 PARAMETER C_CLOCK_MASTER = false                                               ##{MO1000 port :: in_use_1}
 PARAMETER C_FMC_POSITION = 1                                                   ##{MO1000 port :: in_use_1}
 PARAMETER C_AXI_CLK_FREQ_MHZ = 100                                             ##{MO1000 port :: in_use_1}
 PARAMETER C_REF_CLK_FREQ_MHZ = 200.0                                           ##{MO1000 port :: in_use_1}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                 ##{MO1000 port :: in_use_1}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{MO1000 port :: in_use_1}
 PORT i_Rst_p = sys_periph_reset                                                ##{MO1000 port :: in_use_1}
 PORT i_RefClk_p = clk_200_0000MHzMMCM0                                         ##{MO1000 port :: in_use_1}
 PORT o_DesignClk_p = mo1000_1_DesignClk_s                                      ##{MO1000 port :: in_use_1}
 PORT iv16_DacDataCh1_p = v16_mo1000_mux_1_data_0_s                             ##{MO1000 port :: dac9_in_use}
 PORT iv16_DacDataCh2_p = v16_mo1000_mux_1_data_1_s                             ##{MO1000 port :: dac10_in_use}
 PORT iv16_DacDataCh3_p = v16_mo1000_mux_1_data_2_s                             ##{MO1000 port :: dac11_in_use}
 PORT iv16_DacDataCh4_p = v16_mo1000_mux_1_data_3_s                             ##{MO1000 port :: dac12_in_use}
 PORT iv16_DacDataCh5_p = v16_mo1000_mux_1_data_4_s                             ##{MO1000 port :: dac13_in_use}
 PORT iv16_DacDataCh6_p = v16_mo1000_mux_1_data_5_s                             ##{MO1000 port :: dac14_in_use}
 PORT iv16_DacDataCh7_p = v16_mo1000_mux_1_data_6_s                             ##{MO1000 port :: dac15_in_use}
 PORT iv16_DacDataCh8_p = v16_mo1000_mux_1_data_7_s                             ##{MO1000 port :: dac16_in_use}
 PORT o_DacRdyCh1_p = mo1000_1_DacRdyCh1_s                                      ##{MO1000 port :: dac9_in_use}
 PORT o_DacRdyCh2_p = mo1000_1_DacRdyCh2_s                                      ##{MO1000 port :: dac10_in_use}
 PORT o_DacRdyCh3_p = mo1000_1_DacRdyCh3_s                                      ##{MO1000 port :: dac11_in_use}
 PORT o_DacRdyCh4_p = mo1000_1_DacRdyCh4_s                                      ##{MO1000 port :: dac12_in_use}
 PORT o_DacRdyCh5_p = mo1000_1_DacRdyCh5_s                                      ##{MO1000 port :: dac13_in_use}
 PORT o_DacRdyCh6_p = mo1000_1_DacRdyCh6_s                                      ##{MO1000 port :: dac14_in_use}
 PORT o_DacRdyCh7_p = mo1000_1_DacRdyCh7_s                                      ##{MO1000 port :: dac15_in_use}
 PORT o_DacRdyCh8_p = mo1000_1_DacRdyCh8_s                                      ##{MO1000 port :: dac16_in_use}
 PORT idp_ClockFromFMC_p = mo1000_1_pClockFromFMC_s                             ##{MO1000 port :: in_use_1}
 PORT idn_ClockFromFMC_p = mo1000_1_nClockFromFMC_s                             ##{MO1000 port :: in_use_1}
 PORT odp_DataToFMC_p = mo1000_1_pDataToFMC_s                                   ##{MO1000 port :: in_use_1}
 PORT odn_DataToFMC_p = mo1000_1_nDataToFMC_s                                   ##{MO1000 port :: in_use_1}
 PORT odp_DciToFMC_p = mo1000_1_pDciToFMC_s                                     ##{MO1000 port :: in_use_1}
 PORT odn_DciToFMC_p = mo1000_1_nDciToFMC_s                                     ##{MO1000 port :: in_use_1}
 PORT odp_FrameToFMC_p = mo1000_1_pFrameToFMC_s                                 ##{MO1000 port :: in_use_1}
 PORT odn_FrameToFMC_p = mo1000_1_nFrameToFMC_s                                 ##{MO1000 port :: in_use_1}
 PORT i_DesignClk_p = mo1000_0_DesignClk_s                                      ##{MO1000 port :: in_use_1}
 PORT i_SerialClk_p = mo1000_0_SerialClk_s                                      ##{MO1000 port :: in_use_1}
END                                                                             ##{MO1000 port :: in_use_1}

BEGIN lyt_axi_lvds_io                                                           ##{lvdsIO port :: bottom_fmc_in_use}
 PARAMETER INSTANCE = lyt_axi_lvds_io_bottom                                    ##{lvdsIO port :: bottom_fmc_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{lvdsIO port :: bottom_fmc_in_use}
 PARAMETER C_BASEADDR = 0x85000000                                              ##{lvdsIO port :: bottom_fmc_in_use}
 PARAMETER C_HIGHADDR = 0x85000FFF                                              ##{lvdsIO port :: bottom_fmc_in_use}
 PARAMETER USE_SYNCHRONOUS_GPIO_GROUP0 = %{lvds_io_bottom_params_use_external_clock}  ##{lvdsIO port :: bottom_fmc_in_use}
 PARAMETER USE_SYNCHRONOUS_GPIO_GROUP1 = %{lvds_io_bottom_params_use_external_clock}  ##{lvdsIO port :: bottom_fmc_in_use}
 PARAMETER DATA_IDELAY_VALUE_GROUP0 = 0                                         ##{lvdsIO port :: bottom_clock_contraint}
 PARAMETER CLK_IDELAY_VALUE_GROUP0 = 4                                          ##{lvdsIO port :: bottom_clock_contraint}
 PARAMETER DATA_IDELAY_VALUE_GROUP1 = 4                                         ##{lvdsIO port :: bottom_clock_contraint}
 PARAMETER CLK_IDELAY_VALUE_GROUP1 = 0                                          ##{lvdsIO port :: bottom_clock_contraint}
 PARAMETER C_BOTTOM_POSITION = true                                             ##{lvdsIO port :: bottom_fmc_in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                 ##{lvdsIO port :: bottom_fmc_in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{lvdsIO port :: bottom_fmc_in_use}
 PORT i_RefClk200MHz_p = clk_200_0000MHzMMCM0                                   ##{lvdsIO port :: bottom_fmc_in_use}
 PORT i_UserClk_p = DesignClk_s                                                 ##{lvdsIO port :: bottom_fmc_in_use}
 PORT iv_UserLvdsGroup0_p = ov_lvdsIo_OUT_1_txData0_s                           ##{lvdsIO port :: bot_group0_as_output}
 PORT iv_UserLvdsGroup1_p = ov_lvdsIo_OUT_1_txData1_s                           ##{lvdsIO port :: bot_group1_as_output}
 PORT ov_UserLvdsGroup0_p = iv_lvdsIo_IN_1_rxData0_s                            ##{lvdsIO port :: bottom_fmc_in_use}
 PORT ov_UserLvdsGroup1_p = iv_lvdsIo_IN_1_rxData1_s                            ##{lvdsIO port :: bottom_fmc_in_use}
 PORT i_inWrEn0_p = o_lvdsIo_OUT_1_txWrEn0_s                                    ##{lvdsIO port :: bot_group0_use_output_fifo}
 PORT i_inWrEn1_p = o_lvdsIo_OUT_1_txWrEn1_s                                    ##{lvdsIO port :: bot_group1_use_output_fifo}
 PORT o_inWrAck0_p = i_lvdsIo_OUT_1_txWrAck0_s                                  ##{lvdsIO port :: bot_group0_use_output_fifo}
 PORT o_inWrAck1_p = i_lvdsIo_OUT_1_txWrAck1_s                                  ##{lvdsIO port :: bot_group1_use_output_fifo}
 PORT i_outRdEn0_p = o_lvdsIo_IN_1_rxRdEn0_s                                    ##{lvdsIO port :: bot_group0_use_input_fifo}
 PORT i_outRdEn1_p = o_lvdsIo_IN_1_rxRdEn1_s                                    ##{lvdsIO port :: bot_group1_use_input_fifo}
 PORT o_outValid0_p = i_lvdsIo_IN_1_rxValid0_s                                  ##{lvdsIO port :: bot_group0_use_input_fifo}
 PORT o_outValid1_p = i_lvdsIo_IN_1_rxValid1_s                                  ##{lvdsIO port :: bot_group1_use_input_fifo}
 PORT o_empty0_p = i_lvdsIo_IN_1_rxEmpty0_s                                     ##{lvdsIO port :: bot_group0_use_input_fifo}
 PORT o_empty1_p = i_lvdsIo_IN_1_rxEmpty1_s                                     ##{lvdsIO port :: bot_group1_use_input_fifo}
 PORT o_full0_p = i_lvdsIo_OUT_1_txFull0_s                                      ##{lvdsIO port :: bot_group0_use_output_fifo}
 PORT o_full1_p = i_lvdsIo_OUT_1_txFull1_s                                      ##{lvdsIO port :: bot_group1_use_output_fifo}
 PORT i_TxClk0_p = DesignClk_s                                                  ##{lvdsIO port :: bot_tx_source_use_design_clock}
 PORT i_TxClk0_p = clk_100_0000MHzMMCM0                                         ##{lvdsIO port :: bot_tx_source_use_100Mhz_clock}
 PORT i_TxClk1_p = DesignClk_s                                                  ##{lvdsIO port :: bot_tx_source_use_design_clock}
 PORT i_TxClk1_p = clk_100_0000MHzMMCM0                                         ##{lvdsIO port :: bot_tx_source_use_100Mhz_clock}
 PORT o_RxClk0_p = lyt_axi_lvds_io_bottom_RxClk0_s                              ##{lvdsIO port :: bottom_fmc_in_use}
 PORT o_RxClk1_p = lyt_axi_lvds_io_bottom_RxClk1_s                              ##{lvdsIO port :: bottom_fmc_in_use}
 PORT iov16_Group0_padIOp_p = lyt_axi_lvds_io_iov16_Group0_padIOp_p             ##{lvdsIO port :: bottom_fmc_in_use}
 PORT iov16_Group1_padIOp_p = lyt_axi_lvds_io_iov16_Group1_padIOp_p             ##{lvdsIO port :: bottom_fmc_in_use}
 PORT iov16_Group0_padIOn_p = lyt_axi_lvds_io_iov16_Group0_padIOn_p             ##{lvdsIO port :: bottom_fmc_in_use}
 PORT iov16_Group1_padIOn_p = lyt_axi_lvds_io_iov16_Group1_padIOn_p             ##{lvdsIO port :: bottom_fmc_in_use}
END                                                                             ##{lvdsIO port :: bottom_fmc_in_use}

BEGIN lyt_axi_lvds_io                                                           ##{lvdsIO port :: top_fmc_in_use}
 PARAMETER INSTANCE = lyt_axi_lvds_io_top                                       ##{lvdsIO port :: top_fmc_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{lvdsIO port :: top_fmc_in_use}
 PARAMETER C_BASEADDR = 0x85001000                                              ##{lvdsIO port :: top_fmc_in_use}
 PARAMETER C_HIGHADDR = 0x85001FFF                                              ##{lvdsIO port :: top_fmc_in_use}
 PARAMETER USE_SYNCHRONOUS_GPIO_GROUP0 = %{lvds_io_top_params_use_external_clock}  ##{lvdsIO port :: top_fmc_in_use}
 PARAMETER USE_SYNCHRONOUS_GPIO_GROUP1 = %{lvds_io_top_params_use_external_clock}  ##{lvdsIO port :: top_fmc_in_use}
 PARAMETER DATA_IDELAY_VALUE_GROUP0 = 31                                        ##{lvdsIO port :: top_clock_contraint}
 PARAMETER CLK_IDELAY_VALUE_GROUP0 = 0                                          ##{lvdsIO port :: top_clock_contraint}
 PARAMETER DATA_IDELAY_VALUE_GROUP1 = 31                                        ##{lvdsIO port :: top_clock_contraint}
 PARAMETER CLK_IDELAY_VALUE_GROUP1 = 0                                          ##{lvdsIO port :: top_clock_contraint}
 PARAMETER C_BOTTOM_POSITION = false                                            ##{lvdsIO port :: top_fmc_in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                 ##{lvdsIO port :: top_fmc_in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{lvdsIO port :: top_fmc_in_use}
 PORT i_RefClk200MHz_p = clk_200_0000MHzMMCM0                                   ##{lvdsIO port :: top_fmc_in_use}
 PORT i_UserClk_p = DesignClk_s                                                 ##{lvdsIO port :: top_fmc_in_use}
 PORT iv_UserLvdsGroup0_p = ov_lvdsIo_OUT_2_txData0_s                           ##{lvdsIO port :: top_group0_as_output}
 PORT iv_UserLvdsGroup1_p = ov_lvdsIo_OUT_2_txData1_s                           ##{lvdsIO port :: top_group1_as_output}
 PORT ov_UserLvdsGroup0_p = iv_lvdsIo_IN_2_rxData0_s                            ##{lvdsIO port :: top_fmc_in_use}
 PORT ov_UserLvdsGroup1_p = iv_lvdsIo_IN_2_rxData1_s                            ##{lvdsIO port :: top_fmc_in_use}
 PORT i_inWrEn0_p = o_lvdsIo_OUT_2_txWrEn0_s                                    ##{lvdsIO port :: top_group0_use_output_fifo}
 PORT i_inWrEn1_p = o_lvdsIo_OUT_2_txWrEn1_s                                    ##{lvdsIO port :: top_group1_use_output_fifo}
 PORT o_inWrAck0_p = i_lvdsIo_OUT_2_txWrAck0_s                                  ##{lvdsIO port :: top_group0_use_output_fifo}
 PORT o_inWrAck1_p = i_lvdsIo_OUT_2_txWrAck1_s                                  ##{lvdsIO port :: top_group1_use_output_fifo}
 PORT i_outRdEn0_p = o_lvdsIo_IN_2_rxRdEn0_s                                    ##{lvdsIO port :: top_group0_use_input_fifo}
 PORT i_outRdEn1_p = o_lvdsIo_IN_2_rxRdEn1_s                                    ##{lvdsIO port :: top_group1_use_input_fifo}
 PORT o_outValid0_p = i_lvdsIo_IN_2_rxValid0_s                                  ##{lvdsIO port :: top_group0_use_input_fifo}
 PORT o_outValid1_p = i_lvdsIo_IN_2_rxValid1_s                                  ##{lvdsIO port :: top_group1_use_input_fifo}
 PORT o_empty0_p = i_lvdsIo_IN_2_rxEmpty0_s                                     ##{lvdsIO port :: top_group0_use_input_fifo}
 PORT o_empty1_p = i_lvdsIo_IN_2_rxEmpty1_s                                     ##{lvdsIO port :: top_group1_use_input_fifo}
 PORT o_full0_p = i_lvdsIo_OUT_2_txFull0_s                                      ##{lvdsIO port :: top_group0_use_output_fifo}
 PORT o_full1_p = i_lvdsIo_OUT_2_txFull1_s                                      ##{lvdsIO port :: top_group1_use_output_fifo}
 PORT i_TxClk0_p = DesignClk_s                                                  ##{lvdsIO port :: top_tx_source_use_design_clock}
 PORT i_TxClk0_p = clk_100_0000MHzMMCM0                                         ##{lvdsIO port :: top_tx_source_use_100Mhz_clock}
 PORT i_TxClk1_p = DesignClk_s                                                  ##{lvdsIO port :: top_tx_source_use_design_clock}
 PORT i_TxClk1_p = clk_100_0000MHzMMCM0                                         ##{lvdsIO port :: top_tx_source_use_100Mhz_clock}
 PORT o_RxClk0_p = lyt_axi_lvds_io_top_RxClk0_s                                 ##{lvdsIO port :: top_fmc_in_use}
 PORT o_RxClk1_p = lyt_axi_lvds_io_top_RxClk1_s                                 ##{lvdsIO port :: top_fmc_in_use}
 PORT iov16_Group0_padIOp_p = lyt_axi_lvds_io_iov16_Group2_padIOp_p             ##{lvdsIO port :: top_fmc_in_use}
 PORT iov16_Group1_padIOp_p = lyt_axi_lvds_io_iov16_Group3_padIOp_p             ##{lvdsIO port :: top_fmc_in_use}
 PORT iov16_Group0_padIOn_p = lyt_axi_lvds_io_iov16_Group2_padIOn_p             ##{lvdsIO port :: top_fmc_in_use}
 PORT iov16_Group1_padIOn_p = lyt_axi_lvds_io_iov16_Group3_padIOn_p             ##{lvdsIO port :: top_fmc_in_use}
END                                                                             ##{lvdsIO port :: top_fmc_in_use}

#MATLAB Cosim Wrapped
BEGIN lyt_cosim_interface_wrapper
 PARAMETER INSTANCE = lyt_cosim_interface_wrapper_0
 PARAMETER HW_VER = 1.00.a
 PARAMETER RecordPortWidth_g = %{recplay_params_rec_port_width}                       ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER PlayBackPortWidth_g = %{recplay_params_play_port_width}                    ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER NumberOfRecordPorts_g = %{recplay_params_rec_nb_ports}                     ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER NumberOfPlayBackPorts_g = %{recplay_params_play_nb_ports}                  ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER Aurora_4_7_user_DATA_width   = %{Aurora_4_7_user_DATA_width}               ##{AURORA port :: 4_7_in_use}
 PARAMETER Aurora_8_11_user_DATA_width  = %{Aurora_8_11_user_DATA_width}              ##{AURORA port :: 8_11_in_use}
 PARAMETER Aurora_17_20_user_DATA_width = %{Aurora_17_20_user_DATA_width}             ##{AURORA port :: 17_20_in_use}
 PARAMETER lvds_io_params_gen_lvds_io_bottom_g = %{lvds_io_params_gen_lvds_io_bottom} ##{lvdsIO port :: bottom_fmc_in_use}
 PARAMETER lvds_io_params_gen_lvds_io_top_g = %{lvds_io_params_gen_lvds_io_top}       ##{lvdsIO port :: top_fmc_in_use}
 PARAMETER LVDS_DATA_WIDTH_0 = %{mestor_lvds0_data_width}                             ##{LVDS port :: lvds_gpio_0_in_use}
 PARAMETER LVDS_DATA_WIDTH_1 = %{mestor_lvds1_data_width}                             ##{LVDS port :: lvds_gpio_1_in_use}
 PARAMETER LVDS_DATA_WIDTH_2 = %{mestor_lvds2_data_width}                             ##{LVDS port :: lvds_gpio_2_in_use}
 PARAMETER LVDS_DATA_WIDTH_3 = %{mestor_lvds3_data_width}                             ##{LVDS port :: lvds_gpio_3_in_use}
 PARAMETER LVDS_DATA_WIDTH_0 = %{mestor_lvds0_data_width}                             ##{LVDS port :: lvds_sync_0_in_use}
 PARAMETER LVDS_DATA_WIDTH_1 = %{mestor_lvds1_data_width}                             ##{LVDS port :: lvds_sync_1_in_use}
 PARAMETER LVDS_DATA_WIDTH_2 = %{mestor_lvds2_data_width}                             ##{LVDS port :: lvds_sync_2_in_use}
 PARAMETER LVDS_DATA_WIDTH_3 = %{mestor_lvds3_data_width}                             ##{LVDS port :: lvds_sync_3_in_use}

 PORT i_DesignClk_p = clk_200_0000MHzMMCM0                                      ##{Realtime_clock port :: ClockRef200}
 PORT i_DesignClk_p = clk_100_0000MHzMMCM0                                      ##{Realtime_clock port :: SysBusClk100}
 PORT i_DesignClk_p = Radio420x_AdcClkCh1_s                                     ##{Realtime_clock port :: Radio420X}
 PORT i_DesignClk_p = ADAC250AdcDataClk_s                                       ##{Realtime_clock port :: ADAC250}
 PORT i_DesignClk_p = Mi250AdcDataClkOut_s                                      ##{Realtime_clock port :: MI250}
 PORT i_DesignClk_p = Mi125AdcDataClk_s                                   ##{Realtime_clock port :: MI125}
 PORT i_DesignClk_p = mo1000_0_DesignClk_s                                      ##{Realtime_clock port :: MO1000}
 PORT i_DesignClk_p = lyt_axi_lvds_io_bottom_RxClk0_s                           ##{Realtime_clock port :: LVDSBOTTOM0}
 PORT i_DesignClk_p = lyt_axi_lvds_io_bottom_RxClk1_s                           ##{Realtime_clock port :: LVDSBOTTOM1}
 PORT i_DesignClk_p = lyt_axi_lvds_io_top_RxClk0_s                              ##{Realtime_clock port :: LVDSTOP0}
 PORT i_DesignClk_p = lyt_axi_lvds_io_top_RxClk1_s                              ##{Realtime_clock port :: LVDSTOP1}
 PORT i_DesignClk_p = axi_adc5000_o_DataClk_p                                   ##{Realtime_clock port :: ADC5000}
 PORT i_DesignClk_p = mestor_lvds0_o_RxClk_p                                    ##{Realtime_clock port :: MestorLVDS0}
 PORT i_DesignClk_p = mestor_lvds1_o_RxClk_p                                    ##{Realtime_clock port :: MestorLVDS1}
 PORT i_DesignClk_p = mestor_lvds2_o_RxClk_p                                    ##{Realtime_clock port :: MestorLVDS2}
 PORT i_DesignClk_p = mestor_lvds3_o_RxClk_p                                    ##{Realtime_clock port :: MestorLVDS3}

 PORT o_DesignClk_p = DesignClk_s

 PORT ov32_CustomReg0wr_p  = v32_CustomReg0wr_s                                 ##{CUSTOM_REG port :: reg0_wr_in_use}
 PORT iv32_CustomReg0rd_p  = v32_CustomReg0rd_s                                 ##{CUSTOM_REG port :: reg0_rd_in_use}
 PORT ov32_CustomReg1wr_p  = v32_CustomReg1wr_s                                 ##{CUSTOM_REG port :: reg1_wr_in_use}
 PORT iv32_CustomReg1rd_p  = v32_CustomReg1rd_s                                 ##{CUSTOM_REG port :: reg1_rd_in_use}
 PORT ov32_CustomReg2wr_p  = v32_CustomReg2wr_s                                 ##{CUSTOM_REG port :: reg2_wr_in_use}
 PORT iv32_CustomReg2rd_p  = v32_CustomReg2rd_s                                 ##{CUSTOM_REG port :: reg2_rd_in_use}
 PORT ov32_CustomReg3wr_p  = v32_CustomReg3wr_s                                 ##{CUSTOM_REG port :: reg3_wr_in_use}
 PORT iv32_CustomReg3rd_p  = v32_CustomReg3rd_s                                 ##{CUSTOM_REG port :: reg3_rd_in_use}
 PORT ov32_CustomReg4wr_p  = v32_CustomReg4wr_s                                 ##{CUSTOM_REG port :: reg4_wr_in_use}
 PORT iv32_CustomReg4rd_p  = v32_CustomReg4rd_s                                 ##{CUSTOM_REG port :: reg4_rd_in_use}
 PORT ov32_CustomReg5wr_p  = v32_CustomReg5wr_s                                 ##{CUSTOM_REG port :: reg5_wr_in_use}
 PORT iv32_CustomReg5rd_p  = v32_CustomReg5rd_s                                 ##{CUSTOM_REG port :: reg5_rd_in_use}
 PORT ov32_CustomReg6wr_p  = v32_CustomReg6wr_s                                 ##{CUSTOM_REG port :: reg6_wr_in_use}
 PORT iv32_CustomReg6rd_p  = v32_CustomReg6rd_s                                 ##{CUSTOM_REG port :: reg6_rd_in_use}
 PORT ov32_CustomReg7wr_p  = v32_CustomReg7wr_s                                 ##{CUSTOM_REG port :: reg7_wr_in_use}
 PORT iv32_CustomReg7rd_p  = v32_CustomReg7rd_s                                 ##{CUSTOM_REG port :: reg7_rd_in_use}
 PORT ov32_CustomReg8wr_p  = v32_CustomReg8wr_s                                 ##{CUSTOM_REG port :: reg8_wr_in_use}
 PORT iv32_CustomReg8rd_p  = v32_CustomReg8rd_s                                 ##{CUSTOM_REG port :: reg8_rd_in_use}
 PORT ov32_CustomReg9wr_p  = v32_CustomReg9wr_s                                 ##{CUSTOM_REG port :: reg9_wr_in_use}
 PORT iv32_CustomReg9rd_p  = v32_CustomReg9rd_s                                 ##{CUSTOM_REG port :: reg9_rd_in_use}
 PORT ov32_CustomReg10wr_p = v32_CustomReg10wr_s                                ##{CUSTOM_REG port :: reg10_wr_in_use}
 PORT iv32_CustomReg10rd_p = v32_CustomReg10rd_s                                ##{CUSTOM_REG port :: reg10_rd_in_use}
 PORT ov32_CustomReg11wr_p = v32_CustomReg11wr_s                                ##{CUSTOM_REG port :: reg11_wr_in_use}
 PORT iv32_CustomReg11rd_p = v32_CustomReg11rd_s                                ##{CUSTOM_REG port :: reg11_rd_in_use}
 PORT ov32_CustomReg12wr_p = v32_CustomReg12wr_s                                ##{CUSTOM_REG port :: reg12_wr_in_use}
 PORT iv32_CustomReg12rd_p = v32_CustomReg12rd_s                                ##{CUSTOM_REG port :: reg12_rd_in_use}
 PORT ov32_CustomReg13wr_p = v32_CustomReg13wr_s                                ##{CUSTOM_REG port :: reg13_wr_in_use}
 PORT iv32_CustomReg13rd_p = v32_CustomReg13rd_s                                ##{CUSTOM_REG port :: reg13_rd_in_use}
 PORT ov32_CustomReg14wr_p = v32_CustomReg14wr_s                                ##{CUSTOM_REG port :: reg14_wr_in_use}
 PORT iv32_CustomReg14rd_p = v32_CustomReg14rd_s                                ##{CUSTOM_REG port :: reg14_rd_in_use}
 PORT ov32_CustomReg15wr_p = v32_CustomReg15wr_s                                ##{CUSTOM_REG port :: reg15_wr_in_use}
 PORT iv32_CustomReg15rd_p = v32_CustomReg15rd_s                                ##{CUSTOM_REG port :: reg15_rd_in_use}
 PORT ov32_CustomReg16wr_p = v32_CustomReg16wr_s                                ##{CUSTOM_REG port :: reg16_wr_in_use}
 PORT iv32_CustomReg16rd_p = v32_CustomReg16rd_s                                ##{CUSTOM_REG port :: reg16_rd_in_use}
 PORT ov32_CustomReg17wr_p = v32_CustomReg17wr_s                                ##{CUSTOM_REG port :: reg17_wr_in_use}
 PORT iv32_CustomReg17rd_p = v32_CustomReg17rd_s                                ##{CUSTOM_REG port :: reg17_rd_in_use}
 PORT ov32_CustomReg18wr_p = v32_CustomReg18wr_s                                ##{CUSTOM_REG port :: reg18_wr_in_use}
 PORT iv32_CustomReg18rd_p = v32_CustomReg18rd_s                                ##{CUSTOM_REG port :: reg18_rd_in_use}
 PORT ov32_CustomReg19wr_p = v32_CustomReg19wr_s                                ##{CUSTOM_REG port :: reg19_wr_in_use}
 PORT iv32_CustomReg19rd_p = v32_CustomReg19rd_s                                ##{CUSTOM_REG port :: reg19_rd_in_use}
 PORT ov32_CustomReg20wr_p = v32_CustomReg20wr_s                                ##{CUSTOM_REG port :: reg20_wr_in_use}
 PORT iv32_CustomReg20rd_p = v32_CustomReg20rd_s                                ##{CUSTOM_REG port :: reg20_rd_in_use}
 PORT ov32_CustomReg21wr_p = v32_CustomReg21wr_s                                ##{CUSTOM_REG port :: reg21_wr_in_use}
 PORT iv32_CustomReg21rd_p = v32_CustomReg21rd_s                                ##{CUSTOM_REG port :: reg21_rd_in_use}
 PORT ov32_CustomReg22wr_p = v32_CustomReg22wr_s                                ##{CUSTOM_REG port :: reg22_wr_in_use}
 PORT iv32_CustomReg22rd_p = v32_CustomReg22rd_s                                ##{CUSTOM_REG port :: reg22_rd_in_use}
 PORT ov32_CustomReg23wr_p = v32_CustomReg23wr_s                                ##{CUSTOM_REG port :: reg23_wr_in_use}
 PORT iv32_CustomReg23rd_p = v32_CustomReg23rd_s                                ##{CUSTOM_REG port :: reg23_rd_in_use}
 PORT ov32_CustomReg24wr_p = v32_CustomReg24wr_s                                ##{CUSTOM_REG port :: reg24_wr_in_use}
 PORT iv32_CustomReg24rd_p = v32_CustomReg24rd_s                                ##{CUSTOM_REG port :: reg24_rd_in_use}
 PORT ov32_CustomReg25wr_p = v32_CustomReg25wr_s                                ##{CUSTOM_REG port :: reg25_wr_in_use}
 PORT iv32_CustomReg25rd_p = v32_CustomReg25rd_s                                ##{CUSTOM_REG port :: reg25_rd_in_use}
 PORT ov32_CustomReg26wr_p = v32_CustomReg26wr_s                                ##{CUSTOM_REG port :: reg26_wr_in_use}
 PORT iv32_CustomReg26rd_p = v32_CustomReg26rd_s                                ##{CUSTOM_REG port :: reg26_rd_in_use}
 PORT ov32_CustomReg27wr_p = v32_CustomReg27wr_s                                ##{CUSTOM_REG port :: reg27_wr_in_use}
 PORT iv32_CustomReg27rd_p = v32_CustomReg27rd_s                                ##{CUSTOM_REG port :: reg27_rd_in_use}
 PORT ov32_CustomReg28wr_p = v32_CustomReg28wr_s                                ##{CUSTOM_REG port :: reg28_wr_in_use}
 PORT iv32_CustomReg28rd_p = v32_CustomReg28rd_s                                ##{CUSTOM_REG port :: reg28_rd_in_use}
 PORT ov32_CustomReg29wr_p = v32_CustomReg29wr_s                                ##{CUSTOM_REG port :: reg29_wr_in_use}
 PORT iv32_CustomReg29rd_p = v32_CustomReg29rd_s                                ##{CUSTOM_REG port :: reg29_rd_in_use}
 PORT ov32_CustomReg30wr_p = v32_CustomReg30wr_s                                ##{CUSTOM_REG port :: reg30_wr_in_use}
 PORT iv32_CustomReg30rd_p = v32_CustomReg30rd_s                                ##{CUSTOM_REG port :: reg30_rd_in_use}
 PORT ov32_CustomReg31wr_p = v32_CustomReg31wr_s                                ##{CUSTOM_REG port :: reg31_wr_in_use}
 PORT iv32_CustomReg31rd_p = v32_CustomReg31rd_s                                ##{CUSTOM_REG port :: reg31_rd_in_use}

 # RTDEx Emac0 section
 PORT i_RTDEx_Emac0_RxReadyCh0_p = axi_rtdex_eth_o_RxReadyCh0_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch0_in_use}
 PORT i_RTDEx_Emac0_RxReadyCh1_p = axi_rtdex_eth_o_RxReadyCh1_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch1_in_use}
 PORT i_RTDEx_Emac0_RxReadyCh2_p = axi_rtdex_eth_o_RxReadyCh2_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch2_in_use}
 PORT i_RTDEx_Emac0_RxReadyCh3_p = axi_rtdex_eth_o_RxReadyCh3_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch3_in_use}
 PORT i_RTDEx_Emac0_RxReadyCh4_p = axi_rtdex_eth_o_RxReadyCh4_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch4_in_use}
 PORT i_RTDEx_Emac0_RxReadyCh5_p = axi_rtdex_eth_o_RxReadyCh5_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch5_in_use}
 PORT i_RTDEx_Emac0_RxReadyCh6_p = axi_rtdex_eth_o_RxReadyCh6_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch6_in_use}
 PORT i_RTDEx_Emac0_RxReadyCh7_p = axi_rtdex_eth_o_RxReadyCh7_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch7_in_use}

 PORT o_RTDEx_Emac0_RxReCh0_p = axi_rtdex_eth_o_RxReCh0_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch0_in_use}
 PORT o_RTDEx_Emac0_RxReCh1_p = axi_rtdex_eth_o_RxReCh1_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch1_in_use}
 PORT o_RTDEx_Emac0_RxReCh2_p = axi_rtdex_eth_o_RxReCh2_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch2_in_use}
 PORT o_RTDEx_Emac0_RxReCh3_p = axi_rtdex_eth_o_RxReCh3_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch3_in_use}
 PORT o_RTDEx_Emac0_RxReCh4_p = axi_rtdex_eth_o_RxReCh4_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch4_in_use}
 PORT o_RTDEx_Emac0_RxReCh5_p = axi_rtdex_eth_o_RxReCh5_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch5_in_use}
 PORT o_RTDEx_Emac0_RxReCh6_p = axi_rtdex_eth_o_RxReCh6_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch6_in_use}
 PORT o_RTDEx_Emac0_RxReCh7_p = axi_rtdex_eth_o_RxReCh7_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch7_in_use}

 PORT iv32_RTDEx_Emac0_RxDataCh0_p = axi_rtdex_eth_ov32_RxDataCh0_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch0_in_use}
 PORT iv32_RTDEx_Emac0_RxDataCh1_p = axi_rtdex_eth_ov32_RxDataCh1_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch1_in_use}
 PORT iv32_RTDEx_Emac0_RxDataCh2_p = axi_rtdex_eth_ov32_RxDataCh2_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch2_in_use}
 PORT iv32_RTDEx_Emac0_RxDataCh3_p = axi_rtdex_eth_ov32_RxDataCh3_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch3_in_use}
 PORT iv32_RTDEx_Emac0_RxDataCh4_p = axi_rtdex_eth_ov32_RxDataCh4_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch4_in_use}
 PORT iv32_RTDEx_Emac0_RxDataCh5_p = axi_rtdex_eth_ov32_RxDataCh5_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch5_in_use}
 PORT iv32_RTDEx_Emac0_RxDataCh6_p = axi_rtdex_eth_ov32_RxDataCh6_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch6_in_use}
 PORT iv32_RTDEx_Emac0_RxDataCh7_p = axi_rtdex_eth_ov32_RxDataCh7_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch7_in_use}

 PORT i_RTDEx_Emac0_RxDataValidCh0_p = axi_rtdex_eth_o_RxDataValidCh0_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch0_in_use}
 PORT i_RTDEx_Emac0_RxDataValidCh1_p = axi_rtdex_eth_o_RxDataValidCh1_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch1_in_use}
 PORT i_RTDEx_Emac0_RxDataValidCh2_p = axi_rtdex_eth_o_RxDataValidCh2_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch2_in_use}
 PORT i_RTDEx_Emac0_RxDataValidCh3_p = axi_rtdex_eth_o_RxDataValidCh3_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch3_in_use}
 PORT i_RTDEx_Emac0_RxDataValidCh4_p = axi_rtdex_eth_o_RxDataValidCh4_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch4_in_use}
 PORT i_RTDEx_Emac0_RxDataValidCh5_p = axi_rtdex_eth_o_RxDataValidCh5_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch5_in_use}
 PORT i_RTDEx_Emac0_RxDataValidCh6_p = axi_rtdex_eth_o_RxDataValidCh6_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch6_in_use}
 PORT i_RTDEx_Emac0_RxDataValidCh7_p = axi_rtdex_eth_o_RxDataValidCh7_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch7_in_use}

 PORT i_RTDEx_Emac0_TxReadyCh0_p = axi_rtdex_eth_o_TxReadyCh0_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch0_in_use}
 PORT i_RTDEx_Emac0_TxReadyCh1_p = axi_rtdex_eth_o_TxReadyCh1_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch1_in_use}
 PORT i_RTDEx_Emac0_TxReadyCh2_p = axi_rtdex_eth_o_TxReadyCh2_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch2_in_use}
 PORT i_RTDEx_Emac0_TxReadyCh3_p = axi_rtdex_eth_o_TxReadyCh3_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch3_in_use}
 PORT i_RTDEx_Emac0_TxReadyCh4_p = axi_rtdex_eth_o_TxReadyCh4_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch4_in_use}
 PORT i_RTDEx_Emac0_TxReadyCh5_p = axi_rtdex_eth_o_TxReadyCh5_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch5_in_use}
 PORT i_RTDEx_Emac0_TxReadyCh6_p = axi_rtdex_eth_o_TxReadyCh6_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch6_in_use}
 PORT i_RTDEx_Emac0_TxReadyCh7_p = axi_rtdex_eth_o_TxReadyCh7_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch7_in_use}

 PORT o_RTDEx_Emac0_TxWeCh0_p = axi_rtdex_eth_o_TxWeCh0_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch0_in_use}
 PORT o_RTDEx_Emac0_TxWeCh1_p = axi_rtdex_eth_o_TxWeCh1_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch1_in_use}
 PORT o_RTDEx_Emac0_TxWeCh2_p = axi_rtdex_eth_o_TxWeCh2_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch2_in_use}
 PORT o_RTDEx_Emac0_TxWeCh3_p = axi_rtdex_eth_o_TxWeCh3_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch3_in_use}
 PORT o_RTDEx_Emac0_TxWeCh4_p = axi_rtdex_eth_o_TxWeCh4_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch4_in_use}
 PORT o_RTDEx_Emac0_TxWeCh5_p = axi_rtdex_eth_o_TxWeCh5_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch5_in_use}
 PORT o_RTDEx_Emac0_TxWeCh6_p = axi_rtdex_eth_o_TxWeCh6_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch6_in_use}
 PORT o_RTDEx_Emac0_TxWeCh7_p = axi_rtdex_eth_o_TxWeCh7_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch7_in_use}

 PORT ov32_RTDEx_Emac0_TxDataCh0_p = axi_rtdex_eth_ov32_TxDataCh0_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch0_in_use}
 PORT ov32_RTDEx_Emac0_TxDataCh1_p = axi_rtdex_eth_ov32_TxDataCh1_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch1_in_use}
 PORT ov32_RTDEx_Emac0_TxDataCh2_p = axi_rtdex_eth_ov32_TxDataCh2_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch2_in_use}
 PORT ov32_RTDEx_Emac0_TxDataCh3_p = axi_rtdex_eth_ov32_TxDataCh3_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch3_in_use}
 PORT ov32_RTDEx_Emac0_TxDataCh4_p = axi_rtdex_eth_ov32_TxDataCh4_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch4_in_use}
 PORT ov32_RTDEx_Emac0_TxDataCh5_p = axi_rtdex_eth_ov32_TxDataCh5_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch5_in_use}
 PORT ov32_RTDEx_Emac0_TxDataCh6_p = axi_rtdex_eth_ov32_TxDataCh6_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch6_in_use}
 PORT ov32_RTDEx_Emac0_TxDataCh7_p = axi_rtdex_eth_ov32_TxDataCh7_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch7_in_use}

 # RTDEX PCIe section
 PORT i_RTDEx_PCIe_RxReadyCh0_p = axi_rtdex_pcie_o_RxReadyCh0_p                             ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch0_in_use}
 PORT i_RTDEx_PCIe_RxReadyCh1_p = axi_rtdex_pcie_o_RxReadyCh1_p                             ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch1_in_use}
 PORT i_RTDEx_PCIe_RxReadyCh2_p = axi_rtdex_pcie_o_RxReadyCh2_p                             ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch2_in_use}
 PORT i_RTDEx_PCIe_RxReadyCh3_p = axi_rtdex_pcie_o_RxReadyCh3_p                             ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch3_in_use}
 PORT i_RTDEx_PCIe_RxReadyCh4_p = axi_rtdex_pcie_o_RxReadyCh4_p                             ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch4_in_use}
 PORT i_RTDEx_PCIe_RxReadyCh5_p = axi_rtdex_pcie_o_RxReadyCh5_p                             ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch5_in_use}
 PORT i_RTDEx_PCIe_RxReadyCh6_p = axi_rtdex_pcie_o_RxReadyCh6_p                             ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch6_in_use}
 PORT i_RTDEx_PCIe_RxReadyCh7_p = axi_rtdex_pcie_o_RxReadyCh7_p                             ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch7_in_use}

 PORT o_RTDEx_PCIe_RxReCh0_p = axi_rtdex_pcie_o_RxReCh0_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch0_in_use}
 PORT o_RTDEx_PCIe_RxReCh1_p = axi_rtdex_pcie_o_RxReCh1_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch1_in_use}
 PORT o_RTDEx_PCIe_RxReCh2_p = axi_rtdex_pcie_o_RxReCh2_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch2_in_use}
 PORT o_RTDEx_PCIe_RxReCh3_p = axi_rtdex_pcie_o_RxReCh3_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch3_in_use}
 PORT o_RTDEx_PCIe_RxReCh4_p = axi_rtdex_pcie_o_RxReCh4_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch4_in_use}
 PORT o_RTDEx_PCIe_RxReCh5_p = axi_rtdex_pcie_o_RxReCh5_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch5_in_use}
 PORT o_RTDEx_PCIe_RxReCh6_p = axi_rtdex_pcie_o_RxReCh6_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch6_in_use}
 PORT o_RTDEx_PCIe_RxReCh7_p = axi_rtdex_pcie_o_RxReCh7_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch7_in_use}

 PORT iv32_RTDEx_PCIe_RxDataCh0_p = axi_rtdex_pcie_ov32_RxDataCh0_p                         ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch0_in_use}
 PORT iv32_RTDEx_PCIe_RxDataCh1_p = axi_rtdex_pcie_ov32_RxDataCh1_p                         ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch1_in_use}
 PORT iv32_RTDEx_PCIe_RxDataCh2_p = axi_rtdex_pcie_ov32_RxDataCh2_p                         ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch2_in_use}
 PORT iv32_RTDEx_PCIe_RxDataCh3_p = axi_rtdex_pcie_ov32_RxDataCh3_p                         ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch3_in_use}
 PORT iv32_RTDEx_PCIe_RxDataCh4_p = axi_rtdex_pcie_ov32_RxDataCh4_p                         ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch4_in_use}
 PORT iv32_RTDEx_PCIe_RxDataCh5_p = axi_rtdex_pcie_ov32_RxDataCh5_p                         ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch5_in_use}
 PORT iv32_RTDEx_PCIe_RxDataCh6_p = axi_rtdex_pcie_ov32_RxDataCh6_p                         ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch6_in_use}
 PORT iv32_RTDEx_PCIe_RxDataCh7_p = axi_rtdex_pcie_ov32_RxDataCh7_p                         ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch7_in_use}

 PORT i_RTDEx_PCIe_RxDataValidCh0_p = axi_rtdex_pcie_o_RxDataValidCh0_p                     ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch0_in_use}
 PORT i_RTDEx_PCIe_RxDataValidCh1_p = axi_rtdex_pcie_o_RxDataValidCh1_p                     ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch1_in_use}
 PORT i_RTDEx_PCIe_RxDataValidCh2_p = axi_rtdex_pcie_o_RxDataValidCh2_p                     ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch2_in_use}
 PORT i_RTDEx_PCIe_RxDataValidCh3_p = axi_rtdex_pcie_o_RxDataValidCh3_p                     ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch3_in_use}
 PORT i_RTDEx_PCIe_RxDataValidCh4_p = axi_rtdex_pcie_o_RxDataValidCh4_p                     ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch4_in_use}
 PORT i_RTDEx_PCIe_RxDataValidCh5_p = axi_rtdex_pcie_o_RxDataValidCh5_p                     ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch5_in_use}
 PORT i_RTDEx_PCIe_RxDataValidCh6_p = axi_rtdex_pcie_o_RxDataValidCh6_p                     ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch6_in_use}
 PORT i_RTDEx_PCIe_RxDataValidCh7_p = axi_rtdex_pcie_o_RxDataValidCh7_p                     ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch7_in_use}

 PORT i_RTDEx_PCIe_TxReadyCh0_p = axi_rtdex_pcie_o_TxReadyCh0_p                             ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch0_in_use}
 PORT i_RTDEx_PCIe_TxReadyCh1_p = axi_rtdex_pcie_o_TxReadyCh1_p                             ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch1_in_use}
 PORT i_RTDEx_PCIe_TxReadyCh2_p = axi_rtdex_pcie_o_TxReadyCh2_p                             ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch2_in_use}
 PORT i_RTDEx_PCIe_TxReadyCh3_p = axi_rtdex_pcie_o_TxReadyCh3_p                             ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch3_in_use}
 PORT i_RTDEx_PCIe_TxReadyCh4_p = axi_rtdex_pcie_o_TxReadyCh4_p                             ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch4_in_use}
 PORT i_RTDEx_PCIe_TxReadyCh5_p = axi_rtdex_pcie_o_TxReadyCh5_p                             ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch5_in_use}
 PORT i_RTDEx_PCIe_TxReadyCh6_p = axi_rtdex_pcie_o_TxReadyCh6_p                             ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch6_in_use}
 PORT i_RTDEx_PCIe_TxReadyCh7_p = axi_rtdex_pcie_o_TxReadyCh7_p                             ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch7_in_use}

 PORT o_RTDEx_PCIe_TxWeCh0_p = axi_rtdex_pcie_o_TxWeCh0_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch0_in_use}
 PORT o_RTDEx_PCIe_TxWeCh1_p = axi_rtdex_pcie_o_TxWeCh1_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch1_in_use}
 PORT o_RTDEx_PCIe_TxWeCh2_p = axi_rtdex_pcie_o_TxWeCh2_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch2_in_use}
 PORT o_RTDEx_PCIe_TxWeCh3_p = axi_rtdex_pcie_o_TxWeCh3_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch3_in_use}
 PORT o_RTDEx_PCIe_TxWeCh4_p = axi_rtdex_pcie_o_TxWeCh4_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch4_in_use}
 PORT o_RTDEx_PCIe_TxWeCh5_p = axi_rtdex_pcie_o_TxWeCh5_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch5_in_use}
 PORT o_RTDEx_PCIe_TxWeCh6_p = axi_rtdex_pcie_o_TxWeCh6_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch6_in_use}
 PORT o_RTDEx_PCIe_TxWeCh7_p = axi_rtdex_pcie_o_TxWeCh7_p                                   ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch7_in_use}

 PORT ov32_RTDEx_PCIe_TxDataCh0_p = axi_rtdex_pcie_ov32_TxDataCh0_p                         ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch0_in_use}
 PORT ov32_RTDEx_PCIe_TxDataCh1_p = axi_rtdex_pcie_ov32_TxDataCh1_p                         ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch1_in_use}
 PORT ov32_RTDEx_PCIe_TxDataCh2_p = axi_rtdex_pcie_ov32_TxDataCh2_p                         ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch2_in_use}
 PORT ov32_RTDEx_PCIe_TxDataCh3_p = axi_rtdex_pcie_ov32_TxDataCh3_p                         ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch3_in_use}
 PORT ov32_RTDEx_PCIe_TxDataCh4_p = axi_rtdex_pcie_ov32_TxDataCh4_p                         ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch4_in_use}
 PORT ov32_RTDEx_PCIe_TxDataCh5_p = axi_rtdex_pcie_ov32_TxDataCh5_p                         ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch5_in_use}
 PORT ov32_RTDEx_PCIe_TxDataCh6_p = axi_rtdex_pcie_ov32_TxDataCh6_p                         ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch6_in_use}
 PORT ov32_RTDEx_PCIe_TxDataCh7_p = axi_rtdex_pcie_ov32_TxDataCh7_p                         ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch7_in_use}

 # Record playback section
 PORT o_RecTrigger_p =     RecTrigger_s                                         ##{RECORD_PLAYBACK port :: record_trigger_in_use}
 PORT ov_RecDataPort0_p =  v_RecDataPort0_s                                     ##{RECORD_PLAYBACK port :: record_data_port0_in_use}
 PORT ov_RecDataPort1_p =  v_RecDataPort1_s                                     ##{RECORD_PLAYBACK port :: record_data_port1_in_use}
 PORT ov_RecDataPort2_p =  v_RecDataPort2_s                                     ##{RECORD_PLAYBACK port :: record_data_port2_in_use}
 PORT ov_RecDataPort3_p =  v_RecDataPort3_s                                     ##{RECORD_PLAYBACK port :: record_data_port3_in_use}
 PORT ov_RecDataPort4_p =  v_RecDataPort4_s                                     ##{RECORD_PLAYBACK port :: record_data_port4_in_use}
 PORT ov_RecDataPort5_p =  v_RecDataPort5_s                                     ##{RECORD_PLAYBACK port :: record_data_port5_in_use}
 PORT ov_RecDataPort6_p =  v_RecDataPort6_s                                     ##{RECORD_PLAYBACK port :: record_data_port6_in_use}
 PORT ov_RecDataPort7_p =  v_RecDataPort7_s                                     ##{RECORD_PLAYBACK port :: record_data_port7_in_use}
 PORT ov_RecDataPort8_p =  v_RecDataPort8_s                                     ##{RECORD_PLAYBACK port :: record_data_port8_in_use}
 PORT ov_RecDataPort9_p =  v_RecDataPort9_s                                     ##{RECORD_PLAYBACK port :: record_data_port9_in_use}
 PORT ov_RecDataPort10_p = v_RecDataPort10_s                                    ##{RECORD_PLAYBACK port :: record_data_port10_in_use}
 PORT ov_RecDataPort11_p = v_RecDataPort11_s                                    ##{RECORD_PLAYBACK port :: record_data_port11_in_use}
 PORT ov_RecDataPort12_p = v_RecDataPort12_s                                    ##{RECORD_PLAYBACK port :: record_data_port12_in_use}
 PORT ov_RecDataPort13_p = v_RecDataPort13_s                                    ##{RECORD_PLAYBACK port :: record_data_port13_in_use}
 PORT ov_RecDataPort14_p = v_RecDataPort14_s                                    ##{RECORD_PLAYBACK port :: record_data_port14_in_use}
 PORT ov_RecDataPort15_p = v_RecDataPort15_s                                    ##{RECORD_PLAYBACK port :: record_data_port15_in_use}
 PORT o_RecWriteEn_p =     RecWriteEn_s                                         ##{RECORD_PLAYBACK port :: record_in_use}
 PORT i_RecFifoFull_p =    RecFifoFull_s                                        ##{RECORD_PLAYBACK port :: record_fifo_full_in_use}

 PORT o_PlayTriggerIn_p =   PlayTriggerIn_s                                     ##{RECORD_PLAYBACK port :: playback_trigger_in_use}
 PORT iv_PlayDataPort0_p =  v_PlayDataPort0_s                                   ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort1_p =  v_PlayDataPort1_s                                   ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort2_p =  v_PlayDataPort2_s                                   ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort3_p =  v_PlayDataPort3_s                                   ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort4_p =  v_PlayDataPort4_s                                   ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort5_p =  v_PlayDataPort5_s                                   ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort6_p =  v_PlayDataPort6_s                                   ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort7_p =  v_PlayDataPort7_s                                   ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort8_p =  v_PlayDataPort8_s                                   ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort9_p =  v_PlayDataPort9_s                                   ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort10_p = v_PlayDataPort10_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort11_p = v_PlayDataPort11_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort12_p = v_PlayDataPort12_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort13_p = v_PlayDataPort13_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort14_p = v_PlayDataPort14_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT iv_PlayDataPort15_p = v_PlayDataPort15_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT i_PlayValid_p =       PlayValid_s                                         ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT o_PlayReadEn_p =      PlayReadEn_s                                        ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT i_PlayEmpty_p =       PlayEmpty_s                                         ##{RECORD_PLAYBACK port :: playback_fifo_empty_in_use}

 PORT i_RecPlayRxRe_p         = RecPlayRxRe_s                                   ##{RECORD_PLAYBACK port :: record_rtdex_in_use}
 PORT o_RecPlayRxReady_p      = RecPlayRxReady_s                                ##{RECORD_PLAYBACK port :: record_rtdex_in_use}
 PORT o_RecPlayRxDataValid_p  = RecPlayRxDataValid_s                            ##{RECORD_PLAYBACK port :: record_rtdex_in_use}
 PORT ov32_RecPlayRxDataCh0_p = v32_RecPlayRxDataCh0_s                          ##{RECORD_PLAYBACK port :: record_rtdex_in_use}

 PORT i_RecPlayTxWe_p         = RecPlayTxWe_s                                   ##{RECORD_PLAYBACK port :: playback_rtdex_in_use}
 PORT o_RecPlayTxReady_p      = RecPlayTxReady_s                                ##{RECORD_PLAYBACK port :: playback_rtdex_in_use}
 PORT iv32_RecPlayTxDataCh0_p = v32_RecPlayTxDataCh0_s                          ##{RECORD_PLAYBACK port :: playback_rtdex_in_use}

 PORT o_TwrftExtCtrlEn_p      = ExtCtrlEn_s                                     ##{TWRFT port :: in_use}
 PORT o_TwrftTxGainAtt_p      = TxGainAtt_s                                     ##{TWRFT port :: in_use}
 PORT ov2_TwrftTxGainPaGain_p = v2_TxGainPaGain_s                               ##{TWRFT port :: in_use}
 PORT ov5_TwrftTxGainMixAtt_p = v5_TxGainMixAtt_s                               ##{TWRFT port :: in_use}
 PORT ov12_TwrftRxGain_p      = v12_RxGain_s                                    ##{TWRFT port :: in_use}
 PORT ov14_TwrftRxPllCfg_p    = v14_RxPllCfg_s                                  ##{TWRFT port :: in_use}
 PORT ov14_TwrftTxPllCfg_p    = v14_TxPllCfg_s                                  ##{TWRFT port :: in_use}
 PORT o_TwrftTxGain_update_p  = TxGain_update_s                                 ##{TWRFT port :: in_use}
 PORT o_TwrftRxGain_update_p  = RxGain_update_s                                 ##{TWRFT port :: in_use}
 PORT o_TwrftRxPllCfgUpdate_p = RxPllCfgUpdate_s                                ##{TWRFT port :: in_use}
 PORT o_TwrftTxPllCfgUpdate_p = TxPllCfgUpdate_s                                ##{TWRFT port :: in_use}
 PORT o_TwrftTxnRx1_p         = TxnRx1_s                                        ##{TWRFT port :: in_use}
 PORT o_TwrftTxnRx2_p         = TxnRx2_s                                        ##{TWRFT port :: in_use}
 PORT o_TwrftTransceiverId_p  = TransceiverId_s                                 ##{TWRFT port :: in_use}
 PORT i_TwrftLockDetect_p     = LockDetect_s                                    ##{TWRFT port :: in_use}
 PORT i_TwrftSpiBusy_p        = SpiBusy_s                                       ##{TWRFT port :: in_use}

 # Radio420x section
 PORT iv12_Radio420xAdcDataCh1_p       = v12_Radio420x_AdcDataCh1_s             ##{RADIO420X port :: adc_1_in_use}
 PORT iv12_Radio420xAdcDataCh2_p       = v12_Radio420x_AdcDataCh2_s             ##{RADIO420X port :: adc_2_in_use}
 PORT ov12_Radio420xDacDataCh1_p       = v12_Radio420x_DacDataCh1_s             ##{RADIO420X port :: dac_1_in_use}
 PORT ov12_Radio420xDacDataCh2_p       = v12_Radio420x_DacDataCh2_s             ##{RADIO420X port :: dac_2_in_use}
 PORT i_Radio420xAdcIQSelCh1_p         = Radio420x_AdcIQSelCh1_s                ##{RADIO420X port :: adc_1_in_use}
 PORT i_Radio420xAdcIQSelCh2_p         = Radio420x_AdcIQSelCh2_s                ##{RADIO420X port :: adc_2_in_use}
 PORT o_Radio420xDacIQSelCh1_p         = Radio420x_DacIQSelCh1_s                ##{RADIO420X port :: dac_1_in_use}
 PORT o_Radio420xDacIQSelCh2_p         = Radio420x_DacIQSelCh2_s                ##{RADIO420X port :: dac_2_in_use}
 PORT iv5_Radio420xExtCtrlCh1_p        = v5_Radio420xExtCtrlCh1_s               ##{RADIO420X port :: ext_ctrl_1_in_use}
 PORT iv5_Radio420xExtCtrlCh2_p        = v5_Radio420xExtCtrlCh2_s               ##{RADIO420X port :: ext_ctrl_2_in_use}
 PORT ov16_Radio420xDacRefClkCh1_p     = v16_Radio420xDacRefClkCh1_s            ##{RADIO420X port :: dac_ref_clk_1_in_use}
 PORT ov16_Radio420xDacRefClkCh2_p     = v16_Radio420xDacRefClkCh2_s            ##{RADIO420X port :: dac_ref_clk_2_in_use}
 PORT o_Radio420xDacRefClkStartCh1_p   = Radio420xDacRefClkStartCh1_s           ##{RADIO420X port :: dac_ref_clk_1_in_use}
 PORT o_Radio420xDacRefClkStartCh2_p   = Radio420xDacRefClkStartCh2_s           ##{RADIO420X port :: dac_ref_clk_2_in_use}
 PORT i_Radio420xDacRefClkBusyCh1_p    = Radio420xDacRefClkBusyCh1_s            ##{RADIO420X port :: dac_ref_clk_1_in_use}
 PORT i_Radio420xDacRefClkBusyCh2_p    = Radio420xDacRefClkBusyCh2_s            ##{RADIO420X port :: dac_ref_clk_2_in_use}
 PORT ov16_Radio420xLimeDataCh1_p      = v16_Radio420xLimeDataCh1_s             ##{RADIO420X port :: lime_data_1_in_use}
 PORT ov16_Radio420xLimeDataCh2_p      = v16_Radio420xLimeDataCh2_s             ##{RADIO420X port :: lime_data_2_in_use}
 PORT o_Radio420xLimeDataStartCh1_p    = Radio420xLimeDataStartCh1_s            ##{RADIO420X port :: lime_data_1_in_use}
 PORT o_Radio420xLimeDataStartCh2_p    = Radio420xLimeDataStartCh2_s            ##{RADIO420X port :: lime_data_2_in_use}
 PORT i_Radio420xLimeDataBusyCh1_p     = Radio420xLimeDataBusyCh1_s             ##{RADIO420X port :: lime_data_1_in_use}
 PORT i_Radio420xLimeDataBusyCh2_p     = Radio420xLimeDataBusyCh2_s             ##{RADIO420X port :: lime_data_2_in_use}
 PORT ov6_Radio420xRxGainCh1_p         = v6_Radio420xRxGainCh1_s                ##{RADIO420X port :: rx_gain_1_in_use}
 PORT ov6_Radio420xRxGainCh2_p         = v6_Radio420xRxGainCh2_s                ##{RADIO420X port :: rx_gain_2_in_use}
 PORT o_Radio420xRxGainStartCh1_p      = Radio420xRxGainStartCh1_s              ##{RADIO420X port :: rx_gain_1_in_use}
 PORT o_Radio420xRxGainStartCh2_p      = Radio420xRxGainStartCh2_s              ##{RADIO420X port :: rx_gain_2_in_use}
 PORT i_Radio420xRxGainBusyCh1_p       = Radio420xRxGainBusyCh1_s               ##{RADIO420X port :: rx_gain_1_in_use}
 PORT i_Radio420xRxGainBusyCh2_p       = Radio420xRxGainBusyCh2_s               ##{RADIO420X port :: rx_gain_2_in_use}
 PORT ov6_Radio420xTxGainCh1_p         = v6_Radio420xTxGainCh1_s                ##{RADIO420X port :: tx_gain_1_in_use}
 PORT ov6_Radio420xTxGainCh2_p         = v6_Radio420xTxGainCh2_s                ##{RADIO420X port :: tx_gain_2_in_use}
 PORT o_Radio420xTxGainStartCh1_p      = Radio420xTxGainStartCh1_s              ##{RADIO420X port :: tx_gain_1_in_use}
 PORT o_Radio420xTxGainStartCh2_p      = Radio420xTxGainStartCh2_s              ##{RADIO420X port :: tx_gain_2_in_use}
 PORT i_Radio420xTxGainBusyCh1_p       = Radio420xTxGainBusyCh1_s               ##{RADIO420X port :: tx_gain_1_in_use}
 PORT i_Radio420xTxGainBusyCh2_p       = Radio420xTxGainBusyCh2_s               ##{RADIO420X port :: tx_gain_2_in_use}
 PORT ov32_Radio420xPllCtrlCh1_p       = v32_Radio420xPllCtrlCh1_s              ##{RADIO420X port :: pll_ctrl_1_in_use}
 PORT ov32_Radio420xPllCtrlCh2_p       = v32_Radio420xPllCtrlCh2_s              ##{RADIO420X port :: pll_ctrl_2_in_use}
 PORT ov2_Radio420xPllCtrlStartCh1_p   = v2_Radio420xPllCtrlStartCh1_s          ##{RADIO420X port :: pll_ctrl_1_in_use}
 PORT ov2_Radio420xPllCtrlStartCh2_p   = v2_Radio420xPllCtrlStartCh2_s          ##{RADIO420X port :: pll_ctrl_2_in_use}
 PORT i_Radio420xPllCtrlBusyCh1_p      = Radio420xPllCtrlBusyCh1_s              ##{RADIO420X port :: pll_ctrl_1_in_use}
 PORT i_Radio420xPllCtrlBusyCh2_p      = Radio420xPllCtrlBusyCh2_s              ##{RADIO420X port :: pll_ctrl_2_in_use}

 # ADAC250 section
 PORT iv14_Adac250_AdcDataChA_p     = v14_ADAC250AdcDataChA_s                   ##{ADAC250 port :: adc_a_in_use}
 PORT i_Adac250_ChA_OvrFiltred_p    = ADAC250ChA_OvrFiltred_s                   ##{ADAC250 port :: adc_a_ovr_f_in_use}
 PORT i_Adac250_ChA_OvrNotFiltred_p = ADAC250ChA_OvrNotFiltred_s                ##{ADAC250 port :: adc_a_ovr_in_use}
 PORT iv14_Adac250_AdcDataChB_p     = v14_ADAC250AdcDataChB_s                   ##{ADAC250 port :: adc_b_in_use}
 PORT i_Adac250_ChB_OvrFiltred_p    = ADAC250ChB_OvrFiltred_s                   ##{ADAC250 port :: adc_b_ovr_f_in_use}
 PORT i_Adac250_ChB_OvrNotFiltred_p = ADAC250ChB_OvrNotFiltred_s                ##{ADAC250 port :: adc_b_ovr_in_use}
 PORT i_Adac250_DataFormat_p        = ADAC250DataFormat_s                       ##{ADAC250 port :: data_format_in_use}
 PORT ov16_Adac250_DacChA_p         = v16_ADAC250DacChA_s                       ##{ADAC250 port :: dac_a_in_use}
 PORT ov16_Adac250_DacChB_p         = v16_ADAC250DacChB_s                       ##{ADAC250 port :: dac_b_in_use}
 PORT i_Adac250_Trigger_p           = ADAC250Trigger_s                          ##{ADAC250 port :: trigger_in_use}
 PORT o_Adac250_DacDataSync_p       = ADAC250DacDataSync_s                      ##{ADAC250 port :: in_use}

 # ADC5000 section
 PORT iv80_Adc5000_DataChA_p = axi_adc5000_ov80_DataChA_p                       ##{ADC5000 port :: adc_a_in_use}
 PORT iv80_Adc5000_DataChB_p = axi_adc5000_ov80_DataChB_p                       ##{ADC5000 port :: adc_b_in_use}
 PORT iv80_Adc5000_DataChC_p = axi_adc5000_ov80_DataChC_p                       ##{ADC5000 port :: adc_c_in_use}
 PORT iv80_Adc5000_DataChD_p = axi_adc5000_ov80_DataChD_p                       ##{ADC5000 port :: adc_d_in_use}
 PORT i_Adc5000_OverRangeChA_p = axi_adc5000_o_OverRangeChA_p                   ##{ADC5000 port :: adc_a_ovr_in_use}
 PORT i_Adc5000_OverRangeChB_p = axi_adc5000_o_OverRangeChB_p                   ##{ADC5000 port :: adc_b_ovr_in_use}
 PORT i_Adc5000_OverRangeChC_p = axi_adc5000_o_OverRangeChC_p                   ##{ADC5000 port :: adc_c_ovr_in_use}
 PORT i_Adc5000_OverRangeChD_p = axi_adc5000_o_OverRangeChD_p                   ##{ADC5000 port :: adc_d_ovr_in_use}
 PORT i_Adc5000_ReadyChA_p = axi_adc5000_o_ReadyChA_p                           ##{ADC5000 port :: adc_a_in_use}
 PORT i_Adc5000_ReadyChB_p = axi_adc5000_o_ReadyChB_p                           ##{ADC5000 port :: adc_b_in_use}
 PORT i_Adc5000_ReadyChC_p = axi_adc5000_o_ReadyChC_p                           ##{ADC5000 port :: adc_c_in_use}
 PORT i_Adc5000_ReadyChD_p = axi_adc5000_o_ReadyChD_p                           ##{ADC5000 port :: adc_d_in_use}
 PORT i_Adc5000_Trigger_p = axi_adc5000_o_Trigger_p                             ##{ADC5000 port :: control_in_use}

 # AURORA section
 PORT  o_aurora_amc4_7_RX_Fifo_Read_Enable_p    = aurora_amc4_7_RX_Fifo_Read_Enable_s       ##{AURORA port :: 4_7_in_use}
 PORT iv_aurora_amc4_7_RX_Fifo_Data_p           = aurora_amc4_7_RX_Fifo_Data_s              ##{AURORA port :: 4_7_in_use}
 PORT  i_aurora_amc4_7_RX_Data_Valid_p          = aurora_amc4_7_RX_Data_Valid_s             ##{AURORA port :: 4_7_in_use}
 PORT ov_aurora_amc4_7_TX_Fifo_Data_p           = aurora_amc4_7_TX_Fifo_Data_s              ##{AURORA port :: 4_7_in_use}
 PORT  o_aurora_amc4_7_TX_Fifo_Write_Enable_p   = aurora_amc4_7_TX_Fifo_Write_Enable_s      ##{AURORA port :: 4_7_in_use}
 PORT  i_aurora_amc4_7_TX_Fifo_Ready_p          = aurora_amc4_7_TX_Fifo_Ready_s             ##{AURORA port :: 4_7_in_use}

 PORT  o_aurora_amc8_11_RX_Fifo_Read_Enable_p   = aurora_amc8_11_RX_Fifo_Read_Enable_s      ##{AURORA port :: 8_11_in_use}
 PORT iv_aurora_amc8_11_RX_Fifo_Data_p          = aurora_amc8_11_RX_Fifo_Data_s             ##{AURORA port :: 8_11_in_use}
 PORT  i_aurora_amc8_11_RX_Data_Valid_p         = aurora_amc8_11_RX_Data_Valid_s            ##{AURORA port :: 8_11_in_use}
 PORT ov_aurora_amc8_11_TX_Fifo_Data_p          = aurora_amc8_11_TX_Fifo_Data_s             ##{AURORA port :: 8_11_in_use}
 PORT  o_aurora_amc8_11_TX_Fifo_Write_Enable_p  = aurora_amc8_11_TX_Fifo_Write_Enable_s     ##{AURORA port :: 8_11_in_use}
 PORT  i_aurora_amc8_11_TX_Fifo_Ready_p         = aurora_amc8_11_TX_Fifo_Ready_s            ##{AURORA port :: 8_11_in_use}

 PORT  o_aurora_amc17_20_RX_Fifo_Read_Enable_p  = aurora_amc17_20_RX_Fifo_Read_Enable_s     ##{AURORA port :: 17_20_in_use}
 PORT iv_aurora_amc17_20_RX_Fifo_Data_p         = aurora_amc17_20_RX_Fifo_Data_s            ##{AURORA port :: 17_20_in_use}
 PORT  i_aurora_amc17_20_RX_Data_Valid_p        = aurora_amc17_20_RX_Data_Valid_s           ##{AURORA port :: 17_20_in_use}
 PORT ov_aurora_amc17_20_TX_Fifo_Data_p         = aurora_amc17_20_TX_Fifo_Data_s            ##{AURORA port :: 17_20_in_use}
 PORT  o_aurora_amc17_20_TX_Fifo_Write_Enable_p = aurora_amc17_20_TX_Fifo_Write_Enable_s    ##{AURORA port :: 17_20_in_use}
 PORT  i_aurora_amc17_20_TX_Fifo_Ready_p        = aurora_amc17_20_TX_Fifo_Ready_s           ##{AURORA port :: 17_20_in_use}

 # MI250 section
 PORT iv14_Mi250AdcADataOut_p = v14_Mi250AdcADataOut_s                          ##{MI250 port :: adc_a_in_use}
 PORT iv14_Mi250AdcBDataOut_p = v14_Mi250AdcBDataOut_s                          ##{MI250 port :: adc_b_in_use}
 PORT iv14_Mi250AdcCDataOut_p = v14_Mi250AdcCDataOut_s                          ##{MI250 port :: adc_c_in_use}
 PORT iv14_Mi250AdcDDataOut_p = v14_Mi250AdcDDataOut_s                          ##{MI250 port :: adc_d_in_use}
 PORT iv14_Mi250AdcEDataOut_p = v14_Mi250AdcEDataOut_s                          ##{MI250 port :: adc_e_in_use}
 PORT iv14_Mi250AdcFDataOut_p = v14_Mi250AdcFDataOut_s                          ##{MI250 port :: adc_f_in_use}
 PORT iv14_Mi250AdcGDataOut_p = v14_Mi250AdcGDataOut_s                          ##{MI250 port :: adc_g_in_use}
 PORT iv14_Mi250AdcHDataOut_p = v14_Mi250AdcHDataOut_s                          ##{MI250 port :: adc_h_in_use}
 PORT i_Mi250AdcADataValid_p = Mi250AdcADataValid_s                             ##{MI250 port :: adc_a_in_use}
 PORT i_Mi250AdcBDataValid_p = Mi250AdcBDataValid_s                             ##{MI250 port :: adc_b_in_use}
 PORT i_Mi250AdcCDataValid_p = Mi250AdcCDataValid_s                             ##{MI250 port :: adc_c_in_use}
 PORT i_Mi250AdcDDataValid_p = Mi250AdcDDataValid_s                             ##{MI250 port :: adc_d_in_use}
 PORT i_Mi250AdcEDataValid_p = Mi250AdcEDataValid_s                             ##{MI250 port :: adc_e_in_use}
 PORT i_Mi250AdcFDataValid_p = Mi250AdcFDataValid_s                             ##{MI250 port :: adc_f_in_use}
 PORT i_Mi250AdcGDataValid_p = Mi250AdcGDataValid_s                             ##{MI250 port :: adc_g_in_use}
 PORT i_Mi250AdcHDataValid_p = Mi250AdcHDataValid_s                             ##{MI250 port :: adc_h_in_use}
 PORT i_Mi250AdcTrigout_p = Mi250AdcTrigout_s                                   ##{MI250 port :: control_in_use}

 # MI125 bottom section                                                         ##{MI125 port :: bottom_in_use}
 PORT iv14_Mi125AdcDataCh1_p = v14_Mi125AdcDataCh1Bottom_s                      ##{MI125 port :: bottom_adc1_in_use}
 PORT iv14_Mi125AdcDataCh2_p = v14_Mi125AdcDataCh2Bottom_s                      ##{MI125 port :: bottom_adc2_in_use}
 PORT iv14_Mi125AdcDataCh3_p = v14_Mi125AdcDataCh3Bottom_s                      ##{MI125 port :: bottom_adc3_in_use}
 PORT iv14_Mi125AdcDataCh4_p = v14_Mi125AdcDataCh4Bottom_s                      ##{MI125 port :: bottom_adc4_in_use}
 PORT iv14_Mi125AdcDataCh5_p = v14_Mi125AdcDataCh5Bottom_s                      ##{MI125 port :: bottom_adc5_in_use}
 PORT iv14_Mi125AdcDataCh6_p = v14_Mi125AdcDataCh6Bottom_s                      ##{MI125 port :: bottom_adc6_in_use}
 PORT iv14_Mi125AdcDataCh7_p = v14_Mi125AdcDataCh7Bottom_s                      ##{MI125 port :: bottom_adc7_in_use}
 PORT iv14_Mi125AdcDataCh8_p = v14_Mi125AdcDataCh8Bottom_s                      ##{MI125 port :: bottom_adc8_in_use}
 PORT iv14_Mi125AdcDataCh9_p = v14_Mi125AdcDataCh9Bottom_s                      ##{MI125 port :: bottom_adc9_in_use}
 PORT iv14_Mi125AdcDataCh10_p = v14_Mi125AdcDataCh10Bottom_s                    ##{MI125 port :: bottom_adc10_in_use}
 PORT iv14_Mi125AdcDataCh11_p = v14_Mi125AdcDataCh11Bottom_s                    ##{MI125 port :: bottom_adc11_in_use}
 PORT iv14_Mi125AdcDataCh12_p = v14_Mi125AdcDataCh12Bottom_s                    ##{MI125 port :: bottom_adc12_in_use}
 PORT iv14_Mi125AdcDataCh13_p = v14_Mi125AdcDataCh13Bottom_s                    ##{MI125 port :: bottom_adc13_in_use}
 PORT iv14_Mi125AdcDataCh14_p = v14_Mi125AdcDataCh14Bottom_s                    ##{MI125 port :: bottom_adc14_in_use}
 PORT iv14_Mi125AdcDataCh15_p = v14_Mi125AdcDataCh15Bottom_s                    ##{MI125 port :: bottom_adc15_in_use}
 PORT iv14_Mi125AdcDataCh16_p = v14_Mi125AdcDataCh16Bottom_s                    ##{MI125 port :: bottom_adc16_in_use}
 PORT i_Mi125AdcCh1Valid_p = Mi125AdcCh1ValidBottom_s                           ##{MI125 port :: bottom_adc1_in_use}
 PORT i_Mi125AdcCh2Valid_p = Mi125AdcCh2ValidBottom_s                           ##{MI125 port :: bottom_adc2_in_use}
 PORT i_Mi125AdcCh3Valid_p = Mi125AdcCh3ValidBottom_s                           ##{MI125 port :: bottom_adc3_in_use}
 PORT i_Mi125AdcCh4Valid_p = Mi125AdcCh4ValidBottom_s                           ##{MI125 port :: bottom_adc4_in_use}
 PORT i_Mi125AdcCh5Valid_p = Mi125AdcCh5ValidBottom_s                           ##{MI125 port :: bottom_adc5_in_use}
 PORT i_Mi125AdcCh6Valid_p = Mi125AdcCh6ValidBottom_s                           ##{MI125 port :: bottom_adc6_in_use}
 PORT i_Mi125AdcCh7Valid_p = Mi125AdcCh7ValidBottom_s                           ##{MI125 port :: bottom_adc7_in_use}
 PORT i_Mi125AdcCh8Valid_p = Mi125AdcCh8ValidBottom_s                           ##{MI125 port :: bottom_adc8_in_use}
 PORT i_Mi125AdcCh9Valid_p = Mi125AdcCh9ValidBottom_s                           ##{MI125 port :: bottom_adc9_in_use}
 PORT i_Mi125AdcCh10Valid_p = Mi125AdcCh10ValidBottom_s                         ##{MI125 port :: bottom_adc10_in_use}
 PORT i_Mi125AdcCh11Valid_p = Mi125AdcCh11ValidBottom_s                         ##{MI125 port :: bottom_adc11_in_use}
 PORT i_Mi125AdcCh12Valid_p = Mi125AdcCh12ValidBottom_s                         ##{MI125 port :: bottom_adc12_in_use}
 PORT i_Mi125AdcCh13Valid_p = Mi125AdcCh13ValidBottom_s                         ##{MI125 port :: bottom_adc13_in_use}
 PORT i_Mi125AdcCh14Valid_p = Mi125AdcCh14ValidBottom_s                         ##{MI125 port :: bottom_adc14_in_use}
 PORT i_Mi125AdcCh15Valid_p = Mi125AdcCh15ValidBottom_s                         ##{MI125 port :: bottom_adc15_in_use}
 PORT i_Mi125AdcCh16Valid_p = Mi125AdcCh16ValidBottom_s                         ##{MI125 port :: bottom_adc16_in_use}
 PORT i_Mi125Adc1to4Enabled_p = Mi125AdcCh1to4EnabledBottom_s                   ##{MI125 port :: bottom_adc_1to4_enabled_in_use}
 PORT i_Mi125Adc5to8Enabled_p = Mi125AdcCh5to8EnabledBottom_s                   ##{MI125 port :: bottom_adc_5to8_enabled_in_use}
 PORT i_Mi125Adc9to12Enabled_p = Mi125AdcCh9to12EnabledBottom_s                 ##{MI125 port :: bottom_adc_9to12_enabled_in_use}
 PORT i_Mi125Adc13to16Enabled_p = Mi125AdcCh13to16EnabledBottom_s               ##{MI125 port :: bottom_adc_13to16_enabled_in_use}
 PORT i_Mi125TriggerInput_p = Mi125TriggerToFPGA_s                              ##{MI125 port :: bottom_trigger_input_in_use}
 PORT o_Mi125TriggerOutput_p = Mi125TriggerFromFPGA_s                           ##{MI125 port :: bottom_trigger_output_in_use}
 PORT i_Mi125DataFormat_p = Mi125DataFormat_s                                   ##{MI125 port :: bottom_data_format_in_use}

 # MI125 top section                                                            ##{MI125 port :: top_slave_in_use}
 PORT iv14_Mi125AdcDataCh17_p = v14_Mi125AdcDataCh1Top_s                        ##{MI125 port :: top_slave_adc1_in_use}
 PORT iv14_Mi125AdcDataCh18_p = v14_Mi125AdcDataCh2Top_s                        ##{MI125 port :: top_slave_adc2_in_use}
 PORT iv14_Mi125AdcDataCh19_p = v14_Mi125AdcDataCh3Top_s                        ##{MI125 port :: top_slave_adc3_in_use}
 PORT iv14_Mi125AdcDataCh20_p = v14_Mi125AdcDataCh4Top_s                        ##{MI125 port :: top_slave_adc4_in_use}
 PORT iv14_Mi125AdcDataCh21_p = v14_Mi125AdcDataCh5Top_s                        ##{MI125 port :: top_slave_adc5_in_use}
 PORT iv14_Mi125AdcDataCh22_p = v14_Mi125AdcDataCh6Top_s                        ##{MI125 port :: top_slave_adc6_in_use}
 PORT iv14_Mi125AdcDataCh23_p = v14_Mi125AdcDataCh7Top_s                        ##{MI125 port :: top_slave_adc7_in_use}
 PORT iv14_Mi125AdcDataCh24_p = v14_Mi125AdcDataCh8Top_s                        ##{MI125 port :: top_slave_adc8_in_use}
 PORT iv14_Mi125AdcDataCh25_p = v14_Mi125AdcDataCh9Top_s                        ##{MI125 port :: top_slave_adc9_in_use}
 PORT iv14_Mi125AdcDataCh26_p = v14_Mi125AdcDataCh10Top_s                       ##{MI125 port :: top_slave_adc10_in_use}
 PORT iv14_Mi125AdcDataCh27_p = v14_Mi125AdcDataCh11Top_s                       ##{MI125 port :: top_slave_adc11_in_use}
 PORT iv14_Mi125AdcDataCh28_p = v14_Mi125AdcDataCh12Top_s                       ##{MI125 port :: top_slave_adc12_in_use}
 PORT iv14_Mi125AdcDataCh29_p = v14_Mi125AdcDataCh13Top_s                       ##{MI125 port :: top_slave_adc13_in_use}
 PORT iv14_Mi125AdcDataCh30_p = v14_Mi125AdcDataCh14Top_s                       ##{MI125 port :: top_slave_adc14_in_use}
 PORT iv14_Mi125AdcDataCh31_p = v14_Mi125AdcDataCh15Top_s                       ##{MI125 port :: top_slave_adc15_in_use}
 PORT iv14_Mi125AdcDataCh32_p = v14_Mi125AdcDataCh16Top_s                       ##{MI125 port :: top_slave_adc16_in_use}
 PORT i_Mi125AdcCh17Valid_p = Mi125AdcCh1ValidTop_s                             ##{MI125 port :: top_slave_adc1_in_use}
 PORT i_Mi125AdcCh18Valid_p = Mi125AdcCh2ValidTop_s                             ##{MI125 port :: top_slave_adc2_in_use}
 PORT i_Mi125AdcCh19Valid_p = Mi125AdcCh3ValidTop_s                             ##{MI125 port :: top_slave_adc3_in_use}
 PORT i_Mi125AdcCh20Valid_p = Mi125AdcCh4ValidTop_s                             ##{MI125 port :: top_slave_adc4_in_use}
 PORT i_Mi125AdcCh21Valid_p = Mi125AdcCh5ValidTop_s                             ##{MI125 port :: top_slave_adc5_in_use}
 PORT i_Mi125AdcCh22Valid_p = Mi125AdcCh6ValidTop_s                             ##{MI125 port :: top_slave_adc6_in_use}
 PORT i_Mi125AdcCh23Valid_p = Mi125AdcCh7ValidTop_s                             ##{MI125 port :: top_slave_adc7_in_use}
 PORT i_Mi125AdcCh24Valid_p = Mi125AdcCh8ValidTop_s                             ##{MI125 port :: top_slave_adc8_in_use}
 PORT i_Mi125AdcCh25Valid_p = Mi125AdcCh9ValidTop_s                             ##{MI125 port :: top_slave_adc9_in_use}
 PORT i_Mi125AdcCh26Valid_p = Mi125AdcCh10ValidTop_s                            ##{MI125 port :: top_slave_adc10_in_use}
 PORT i_Mi125AdcCh27Valid_p = Mi125AdcCh11ValidTop_s                            ##{MI125 port :: top_slave_adc11_in_use}
 PORT i_Mi125AdcCh28Valid_p = Mi125AdcCh12ValidTop_s                            ##{MI125 port :: top_slave_adc12_in_use}
 PORT i_Mi125AdcCh29Valid_p = Mi125AdcCh13ValidTop_s                            ##{MI125 port :: top_slave_adc13_in_use}
 PORT i_Mi125AdcCh30Valid_p = Mi125AdcCh14ValidTop_s                            ##{MI125 port :: top_slave_adc14_in_use}
 PORT i_Mi125AdcCh31Valid_p = Mi125AdcCh15ValidTop_s                            ##{MI125 port :: top_slave_adc15_in_use}
 PORT i_Mi125AdcCh32Valid_p = Mi125AdcCh16ValidTop_s                            ##{MI125 port :: top_slave_adc16_in_use}
 PORT i_Mi125Adc17to20Enabled_p = Mi125AdcCh1to4EnabledTop_s                    ##{MI125 port :: top_slave_adc_1to4_enabled_in_use}
 PORT i_Mi125Adc21to24Enabled_p = Mi125AdcCh5to8EnabledTop_s                    ##{MI125 port :: top_slave_adc_5to8_enabled_in_use}
 PORT i_Mi125Adc25to28Enabled_p = Mi125AdcCh9to12EnabledTop_s                   ##{MI125 port :: top_slave_adc_9to12_enabled_in_use}
 PORT i_Mi125Adc29to32Enabled_p = Mi125AdcCh13to16EnabledTop_s                  ##{MI125 port :: top_slave_adc_13to16_enabled_in_use}

 # MI125 top alone section                                                      ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh1_p = v14_Mi125AdcDataCh1Fifo_s                        ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh2_p = v14_Mi125AdcDataCh2Fifo_s                        ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh3_p = v14_Mi125AdcDataCh3Fifo_s                        ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh4_p = v14_Mi125AdcDataCh4Fifo_s                        ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh5_p = v14_Mi125AdcDataCh5Fifo_s                        ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh6_p = v14_Mi125AdcDataCh6Fifo_s                        ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh7_p = v14_Mi125AdcDataCh7Fifo_s                        ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh8_p = v14_Mi125AdcDataCh8Fifo_s                        ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh9_p = v14_Mi125AdcDataCh9Fifo_s                        ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh10_p = v14_Mi125AdcDataCh10Fifo_s                      ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh11_p = v14_Mi125AdcDataCh11Fifo_s                      ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh12_p = v14_Mi125AdcDataCh12Fifo_s                      ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh13_p = v14_Mi125AdcDataCh13Fifo_s                      ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh14_p = v14_Mi125AdcDataCh14Fifo_s                      ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh15_p = v14_Mi125AdcDataCh15Fifo_s                      ##{MI125 port :: top_with_mo1000_in_use}
 PORT iv14_Mi125AdcDataCh16_p = v14_Mi125AdcDataCh16Fifo_s                      ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh1Valid_p = Mi125AdcCh1ValidFifo_s                             ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh2Valid_p = Mi125AdcCh2ValidFifo_s                             ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh3Valid_p = Mi125AdcCh3ValidFifo_s                             ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh4Valid_p = Mi125AdcCh4ValidFifo_s                             ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh5Valid_p = Mi125AdcCh5ValidFifo_s                             ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh6Valid_p = Mi125AdcCh6ValidFifo_s                             ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh7Valid_p = Mi125AdcCh7ValidFifo_s                             ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh8Valid_p = Mi125AdcCh8ValidFifo_s                             ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh9Valid_p = Mi125AdcCh9ValidFifo_s                             ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh10Valid_p = Mi125AdcCh10ValidFifo_s                           ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh11Valid_p = Mi125AdcCh11ValidFifo_s                           ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh12Valid_p = Mi125AdcCh12ValidFifo_s                           ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh13Valid_p = Mi125AdcCh13ValidFifo_s                           ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh14Valid_p = Mi125AdcCh14ValidFifo_s                           ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh15Valid_p = Mi125AdcCh15ValidFifo_s                           ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125AdcCh16Valid_p = Mi125AdcCh16ValidFifo_s                           ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125Adc1to4Enabled_p = Mi125AdcCh1to4EnabledFifo_s                     ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125Adc5to8Enabled_p = Mi125AdcCh5to8EnabledFifo_s                     ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125Adc9to12Enabled_p = Mi125AdcCh9to12EnabledFifo_s                   ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125Adc13to16Enabled_p = Mi125AdcCh13to16EnabledFifo_s                 ##{MI125 port :: top_with_mo1000_in_use}
 PORT i_Mi125DataFormat_p = Mi125DataFormatFifo_s                               ##{MI125 port :: top_with_mo1000_in_use}

 # MO1000 0                                                                     ##{MO1000 port :: in_use_0}
 PORT ov16_Mo1000DacDataCh1_p = v16_mo1000_mux_0_data_0_s                       ##{MO1000 port :: dac1_in_use}
 PORT ov16_Mo1000DacDataCh2_p = v16_mo1000_mux_0_data_1_s                       ##{MO1000 port :: dac2_in_use}
 PORT ov16_Mo1000DacDataCh3_p = v16_mo1000_mux_0_data_2_s                       ##{MO1000 port :: dac3_in_use}
 PORT ov16_Mo1000DacDataCh4_p = v16_mo1000_mux_0_data_3_s                       ##{MO1000 port :: dac4_in_use}
 PORT ov16_Mo1000DacDataCh5_p = v16_mo1000_mux_0_data_4_s                       ##{MO1000 port :: dac5_in_use}
 PORT ov16_Mo1000DacDataCh6_p = v16_mo1000_mux_0_data_5_s                       ##{MO1000 port :: dac6_in_use}
 PORT ov16_Mo1000DacDataCh7_p = v16_mo1000_mux_0_data_6_s                       ##{MO1000 port :: dac7_in_use}
 PORT ov16_Mo1000DacDataCh8_p = v16_mo1000_mux_0_data_7_s                       ##{MO1000 port :: dac8_in_use}
 PORT i_Mo1000DacRdyCh1_p = mo1000_0_DacRdyCh1_s                                ##{MO1000 port :: dac1_in_use}
 PORT i_Mo1000DacRdyCh2_p = mo1000_0_DacRdyCh2_s                                ##{MO1000 port :: dac2_in_use}
 PORT i_Mo1000DacRdyCh3_p = mo1000_0_DacRdyCh3_s                                ##{MO1000 port :: dac3_in_use}
 PORT i_Mo1000DacRdyCh4_p = mo1000_0_DacRdyCh4_s                                ##{MO1000 port :: dac4_in_use}
 PORT i_Mo1000DacRdyCh5_p = mo1000_0_DacRdyCh5_s                                ##{MO1000 port :: dac5_in_use}
 PORT i_Mo1000DacRdyCh6_p = mo1000_0_DacRdyCh6_s                                ##{MO1000 port :: dac6_in_use}
 PORT i_Mo1000DacRdyCh7_p = mo1000_0_DacRdyCh7_s                                ##{MO1000 port :: dac7_in_use}
 PORT i_Mo1000DacRdyCh8_p = mo1000_0_DacRdyCh8_s                                ##{MO1000 port :: dac8_in_use}
 PORT i_Mo1000Trigger_p = mo1000_0_Trigger_s                                    ##{MO1000 port :: trig_in_use}

# MO1000 1                                                                      ##{MO1000 port :: in_use_1}
 PORT ov16_Mo1000DacDataCh9_p = v16_mo1000_mux_1_data_0_s                       ##{MO1000 port :: dac9_in_use}
 PORT ov16_Mo1000DacDataCh10_p = v16_mo1000_mux_1_data_1_s                      ##{MO1000 port :: dac10_in_use}
 PORT ov16_Mo1000DacDataCh11_p = v16_mo1000_mux_1_data_2_s                      ##{MO1000 port :: dac11_in_use}
 PORT ov16_Mo1000DacDataCh12_p = v16_mo1000_mux_1_data_3_s                      ##{MO1000 port :: dac12_in_use}
 PORT ov16_Mo1000DacDataCh13_p = v16_mo1000_mux_1_data_4_s                      ##{MO1000 port :: dac13_in_use}
 PORT ov16_Mo1000DacDataCh14_p = v16_mo1000_mux_1_data_5_s                      ##{MO1000 port :: dac14_in_use}
 PORT ov16_Mo1000DacDataCh15_p = v16_mo1000_mux_1_data_6_s                      ##{MO1000 port :: dac15_in_use}
 PORT ov16_Mo1000DacDataCh16_p = v16_mo1000_mux_1_data_7_s                      ##{MO1000 port :: dac16_in_use}
 PORT i_Mo1000DacRdyCh9_p = mo1000_1_DacRdyCh1_s                                ##{MO1000 port :: dac9_in_use}
 PORT i_Mo1000DacRdyCh10_p = mo1000_1_DacRdyCh2_s                               ##{MO1000 port :: dac10_in_use}
 PORT i_Mo1000DacRdyCh11_p = mo1000_1_DacRdyCh3_s                               ##{MO1000 port :: dac11_in_use}
 PORT i_Mo1000DacRdyCh12_p = mo1000_1_DacRdyCh4_s                               ##{MO1000 port :: dac12_in_use}
 PORT i_Mo1000DacRdyCh13_p = mo1000_1_DacRdyCh5_s                               ##{MO1000 port :: dac13_in_use}
 PORT i_Mo1000DacRdyCh14_p = mo1000_1_DacRdyCh6_s                               ##{MO1000 port :: dac14_in_use}
 PORT i_Mo1000DacRdyCh15_p = mo1000_1_DacRdyCh7_s                               ##{MO1000 port :: dac15_in_use}
 PORT i_Mo1000DacRdyCh16_p = mo1000_1_DacRdyCh8_s                               ##{MO1000 port :: dac16_in_use}

# FMC LVDS section                                                              ##{lvdsIO port :: bottom_fmc_in_use}
 PORT iv_lvdsIo_IN_1_rxData0_p  = iv_lvdsIo_IN_1_rxData0_s                      ##{lvdsIO port :: bottom_fmc_in_use}
 PORT o_lvdsIo_IN_1_rxRdEn0_p   = o_lvdsIo_IN_1_rxRdEn0_s                       ##{lvdsIO port :: bot_group0_use_input_fifo}
 PORT i_lvdsIo_IN_1_rxValid0_p  = i_lvdsIo_IN_1_rxValid0_s                      ##{lvdsIO port :: bot_group0_use_input_fifo}
 PORT i_lvdsIo_IN_1_rxEmpty0_p  = i_lvdsIo_IN_1_rxEmpty0_s                      ##{lvdsIO port :: bot_group0_use_input_fifo}
 PORT iv_lvdsIo_IN_1_rxData1_p  = iv_lvdsIo_IN_1_rxData1_s                      ##{lvdsIO port :: bottom_fmc_in_use}
 PORT o_lvdsIo_IN_1_rxRdEn1_p   = o_lvdsIo_IN_1_rxRdEn1_s                       ##{lvdsIO port :: bot_group1_use_input_fifo}
 PORT i_lvdsIo_IN_1_rxValid1_p  = i_lvdsIo_IN_1_rxValid1_s                      ##{lvdsIO port :: bot_group1_use_input_fifo}
 PORT i_lvdsIo_IN_1_rxEmpty1_p  = i_lvdsIo_IN_1_rxEmpty1_s                      ##{lvdsIO port :: bot_group1_use_input_fifo}
 PORT iv_lvdsIo_IN_2_rxData0_p  = iv_lvdsIo_IN_2_rxData0_s                      ##{lvdsIO port :: top_fmc_in_use}
 PORT o_lvdsIo_IN_2_rxRdEn0_p   = o_lvdsIo_IN_2_rxRdEn0_s                       ##{lvdsIO port :: top_group0_use_input_fifo}
 PORT i_lvdsIo_IN_2_rxValid0_p  = i_lvdsIo_IN_2_rxValid0_s                      ##{lvdsIO port :: top_group0_use_input_fifo}
 PORT i_lvdsIo_IN_2_rxEmpty0_p  = i_lvdsIo_IN_2_rxEmpty0_s                      ##{lvdsIO port :: top_group0_use_input_fifo}
 PORT iv_lvdsIo_IN_2_rxData1_p  = iv_lvdsIo_IN_2_rxData1_s                      ##{lvdsIO port :: top_fmc_in_use}
 PORT o_lvdsIo_IN_2_rxRdEn1_p   = o_lvdsIo_IN_2_rxRdEn1_s                       ##{lvdsIO port :: top_group1_use_input_fifo}
 PORT i_lvdsIo_IN_2_rxValid1_p  = i_lvdsIo_IN_2_rxValid1_s                      ##{lvdsIO port :: top_group1_use_input_fifo}
 PORT i_lvdsIo_IN_2_rxEmpty1_p  = i_lvdsIo_IN_2_rxEmpty1_s                      ##{lvdsIO port :: top_group1_use_input_fifo}
 PORT ov_lvdsIo_OUT_1_txData0_p = ov_lvdsIo_OUT_1_txData0_s                     ##{lvdsIO port :: bot_group0_as_output}
 PORT o_lvdsIo_OUT_1_txWrEn0_p  = o_lvdsIo_OUT_1_txWrEn0_s                      ##{lvdsIO port :: bot_group0_use_output_fifo}
 PORT i_lvdsIo_OUT_1_txWrAck0_p = i_lvdsIo_OUT_1_txWrAck0_s                     ##{lvdsIO port :: bot_group0_use_output_fifo}
 PORT i_lvdsIo_OUT_1_txFull0_p  = i_lvdsIo_OUT_1_txFull0_s                      ##{lvdsIO port :: bot_group0_use_output_fifo}
 PORT ov_lvdsIo_OUT_1_txData1_p = ov_lvdsIo_OUT_1_txData1_s                     ##{lvdsIO port :: bot_group1_as_output}
 PORT o_lvdsIo_OUT_1_txWrEn1_p  = o_lvdsIo_OUT_1_txWrEn1_s                      ##{lvdsIO port :: bot_group1_use_output_fifo}
 PORT i_lvdsIo_OUT_1_txWrAck1_p = i_lvdsIo_OUT_1_txWrAck1_s                     ##{lvdsIO port :: bot_group1_use_output_fifo}
 PORT i_lvdsIo_OUT_1_txFull1_p  = i_lvdsIo_OUT_1_txFull1_s                      ##{lvdsIO port :: bot_group1_use_output_fifo}
 PORT ov_lvdsIo_OUT_2_txData0_p = ov_lvdsIo_OUT_2_txData0_s                     ##{lvdsIO port :: top_group0_as_output}
 PORT o_lvdsIo_OUT_2_txWrEn0_p  = o_lvdsIo_OUT_2_txWrEn0_s                      ##{lvdsIO port :: top_group0_use_output_fifo}
 PORT i_lvdsIo_OUT_2_txWrAck0_p = i_lvdsIo_OUT_2_txWrAck0_s                     ##{lvdsIO port :: top_group0_use_output_fifo}
 PORT i_lvdsIo_OUT_2_txFull0_p  = i_lvdsIo_OUT_2_txFull0_s                      ##{lvdsIO port :: top_group0_use_output_fifo}
 PORT ov_lvdsIo_OUT_2_txData1_p = ov_lvdsIo_OUT_2_txData1_s                     ##{lvdsIO port :: top_group1_as_output}
 PORT o_lvdsIo_OUT_2_txWrEn1_p  = o_lvdsIo_OUT_2_txWrEn1_s                      ##{lvdsIO port :: top_group1_use_output_fifo}
 PORT i_lvdsIo_OUT_2_txWrAck1_p = i_lvdsIo_OUT_2_txWrAck1_s                     ##{lvdsIO port :: top_group1_use_output_fifo}
 PORT i_lvdsIo_OUT_2_txFull1_p  = i_lvdsIo_OUT_2_txFull1_s                      ##{lvdsIO port :: top_group1_use_output_fifo}

# LVDS GPIO
 PORT ov_mestor_gpio_0_data_p           = mestor_lvds0_iv_Data_s                ##{LVDS port :: lvds_gpio_0_write_in_use}
 PORT iv_mestor_gpio_0_data_p           = mestor_lvds0_ov_Data_s                ##{LVDS port :: lvds_gpio_0_read_in_use}
 PORT ov_mestor_gpio_0_outputenable_p   = mestor_lvds0_iv_OutputEnable_s        ##{LVDS port :: lvds_gpio_0_write_in_use}
 PORT ov_mestor_gpio_1_data_p           = mestor_lvds1_iv_Data_s                ##{LVDS port :: lvds_gpio_1_write_in_use}
 PORT iv_mestor_gpio_1_data_p           = mestor_lvds1_ov_Data_s                ##{LVDS port :: lvds_gpio_1_read_in_use}
 PORT ov_mestor_gpio_1_outputenable_p   = mestor_lvds1_iv_OutputEnable_s        ##{LVDS port :: lvds_gpio_1_write_in_use}
 PORT ov_mestor_gpio_2_data_p           = mestor_lvds2_iv_Data_s                ##{LVDS port :: lvds_gpio_2_write_in_use}
 PORT iv_mestor_gpio_2_data_p           = mestor_lvds2_ov_Data_s                ##{LVDS port :: lvds_gpio_2_read_in_use}
 PORT ov_mestor_gpio_2_outputenable_p   = mestor_lvds2_iv_OutputEnable_s        ##{LVDS port :: lvds_gpio_2_write_in_use}
 PORT ov_mestor_gpio_3_data_p           = mestor_lvds3_iv_Data_s                ##{LVDS port :: lvds_gpio_3_write_in_use}
 PORT iv_mestor_gpio_3_data_p           = mestor_lvds3_ov_Data_s                ##{LVDS port :: lvds_gpio_3_read_in_use}
 PORT ov_mestor_gpio_3_outputenable_p   = mestor_lvds3_iv_OutputEnable_s        ##{LVDS port :: lvds_gpio_3_write_in_use}
# LVDS Sync
 PORT o_mestor_sync_0_outputenable_p    = mestor_lvds0_i_OutputEnable_s         ##{LVDS port :: lvds_sync_0_write_in_use}
 PORT i_mestor_sync_0_rxready_p         = mestor_lvds0_o_RxReady_s              ##{LVDS port :: lvds_sync_0_read_in_use}
 PORT o_mestor_sync_0_rxre_p            = mestor_lvds0_i_RxRe_s                 ##{LVDS port :: lvds_sync_0_read_in_use}
 PORT iv_mestor_sync_0_rxdata_p         = mestor_lvds0_ov_RxData_s              ##{LVDS port :: lvds_sync_0_read_in_use}
 PORT i_mestor_sync_0_rxdatavalid_p     = mestor_lvds0_o_RxDataValid_s          ##{LVDS port :: lvds_sync_0_read_in_use}
 PORT i_mestor_sync_0_txready_p         = mestor_lvds0_o_TxReady_s              ##{LVDS port :: lvds_sync_0_write_in_use}
 PORT ov_mestor_sync_0_txdata_p         = mestor_lvds0_iv_TxData_s              ##{LVDS port :: lvds_sync_0_write_in_use}
 PORT o_mestor_sync_0_txwe_p            = mestor_lvds0_i_TxWe_s                 ##{LVDS port :: lvds_sync_0_write_in_use}
 PORT o_mestor_sync_1_outputenable_p    = mestor_lvds1_i_OutputEnable_s         ##{LVDS port :: lvds_sync_1_write_in_use}
 PORT i_mestor_sync_1_rxready_p         = mestor_lvds1_o_RxReady_s              ##{LVDS port :: lvds_sync_1_read_in_use}
 PORT o_mestor_sync_1_rxre_p            = mestor_lvds1_i_RxRe_s                 ##{LVDS port :: lvds_sync_1_read_in_use}
 PORT iv_mestor_sync_1_rxdata_p         = mestor_lvds1_ov_RxData_s              ##{LVDS port :: lvds_sync_1_read_in_use}
 PORT i_mestor_sync_1_rxdatavalid_p     = mestor_lvds1_o_RxDataValid_s          ##{LVDS port :: lvds_sync_1_read_in_use}
 PORT i_mestor_sync_1_txready_p         = mestor_lvds1_o_TxReady_s              ##{LVDS port :: lvds_sync_1_write_in_use}
 PORT ov_mestor_sync_1_txdata_p         = mestor_lvds1_iv_TxData_s              ##{LVDS port :: lvds_sync_1_write_in_use}
 PORT o_mestor_sync_1_txwe_p            = mestor_lvds1_i_TxWe_s                 ##{LVDS port :: lvds_sync_1_write_in_use}
 PORT o_mestor_sync_2_outputenable_p    = mestor_lvds2_i_OutputEnable_s         ##{LVDS port :: lvds_sync_2_write_in_use}
 PORT i_mestor_sync_2_rxready_p         = mestor_lvds2_o_RxReady_s              ##{LVDS port :: lvds_sync_2_read_in_use}
 PORT o_mestor_sync_2_rxre_p            = mestor_lvds2_i_RxRe_s                 ##{LVDS port :: lvds_sync_2_read_in_use}
 PORT iv_mestor_sync_2_rxdata_p         = mestor_lvds2_ov_RxData_s              ##{LVDS port :: lvds_sync_2_read_in_use}
 PORT i_mestor_sync_2_rxdatavalid_p     = mestor_lvds2_o_RxDataValid_s          ##{LVDS port :: lvds_sync_2_read_in_use}
 PORT i_mestor_sync_2_txready_p         = mestor_lvds2_o_TxReady_s              ##{LVDS port :: lvds_sync_2_write_in_use}
 PORT ov_mestor_sync_2_txdata_p         = mestor_lvds2_iv_TxData_s              ##{LVDS port :: lvds_sync_2_write_in_use}
 PORT o_mestor_sync_2_txwe_p            = mestor_lvds2_i_TxWe_s                 ##{LVDS port :: lvds_sync_2_write_in_use}
 PORT o_mestor_sync_3_outputenable_p    = mestor_lvds3_i_OutputEnable_s         ##{LVDS port :: lvds_sync_3_write_in_use}
 PORT i_mestor_sync_3_rxready_p         = mestor_lvds3_o_RxReady_s              ##{LVDS port :: lvds_sync_3_read_in_use}
 PORT o_mestor_sync_3_rxre_p            = mestor_lvds3_i_RxRe_s                 ##{LVDS port :: lvds_sync_3_read_in_use}
 PORT iv_mestor_sync_3_rxdata_p         = mestor_lvds3_ov_RxData_s              ##{LVDS port :: lvds_sync_3_read_in_use}
 PORT i_mestor_sync_3_rxdatavalid_p     = mestor_lvds3_o_RxDataValid_s          ##{LVDS port :: lvds_sync_3_read_in_use}
 PORT i_mestor_sync_3_txready_p         = mestor_lvds3_o_TxReady_s              ##{LVDS port :: lvds_sync_3_write_in_use}
 PORT ov_mestor_sync_3_txdata_p         = mestor_lvds3_iv_TxData_s              ##{LVDS port :: lvds_sync_3_write_in_use}
 PORT o_mestor_sync_3_txwe_p            = mestor_lvds3_i_TxWe_s                 ##{LVDS port :: lvds_sync_3_write_in_use}

# AMC GPIO section
 PORT o_nutaq_backplane_gpio_0_p = nutaq_backplane_gpio_output_0_s              ##{NUTAQ_BACKPLANE port :: gpio_output_0_in_use}
 PORT o_nutaq_backplane_gpio_1_p = nutaq_backplane_gpio_output_1_s              ##{NUTAQ_BACKPLANE port :: gpio_output_1_in_use}
 PORT i_nutaq_backplane_gpio_0_p = nutaq_backplane_gpio_input_0_R1_s            ##{NUTAQ_BACKPLANE port :: gpio_input_0_in_use}
 PORT i_nutaq_backplane_gpio_1_p = nutaq_backplane_gpio_input_1_R1_s            ##{NUTAQ_BACKPLANE port :: gpio_input_1_in_use}
 PORT o_nutaq_backplane_gpio_tclk_a_p = nutaq_backplane_gpio_output_tclk_a_s    ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
 PORT o_nutaq_backplane_gpio_tclk_b_p = nutaq_backplane_gpio_output_tclk_b_s    ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
 PORT o_nutaq_backplane_gpio_tclk_c_p = nutaq_backplane_gpio_output_tclk_c_s    ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
 PORT o_nutaq_backplane_gpio_tclk_d_p = nutaq_backplane_gpio_output_tclk_d_s    ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
 PORT i_nutaq_backplane_gpio_tclk_a_p = nutaq_backplane_gpio_input_tclk_a_R1_s  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
 PORT i_nutaq_backplane_gpio_tclk_b_p = nutaq_backplane_gpio_input_tclk_b_R1_s  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
 PORT i_nutaq_backplane_gpio_tclk_c_p = nutaq_backplane_gpio_input_tclk_c_R1_s  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
 PORT i_nutaq_backplane_gpio_tclk_d_p = nutaq_backplane_gpio_input_tclk_d_R1_s  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}

END    # lyt_cosim_interface_wrapper

BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_output_0_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_output_0                      ##{NUTAQ_BACKPLANE port :: gpio_output_0_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_output_0_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_output_0_USE_FF}                     ##{NUTAQ_BACKPLANE port :: gpio_output_0_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_output_0_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_output_0_s                               ##{NUTAQ_BACKPLANE port :: gpio_output_0_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_output_0_R1_s                           ##{NUTAQ_BACKPLANE port :: gpio_output_0_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_output_0_in_use}

BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_output_1_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_output_1                      ##{NUTAQ_BACKPLANE port :: gpio_output_1_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_output_1_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_output_1_USE_FF}                     ##{NUTAQ_BACKPLANE port :: gpio_output_1_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_output_1_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_output_1_s                               ##{NUTAQ_BACKPLANE port :: gpio_output_1_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_output_1_R1_s                           ##{NUTAQ_BACKPLANE port :: gpio_output_1_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_output_1_in_use}

BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_input_0_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_input_0                       ##{NUTAQ_BACKPLANE port :: gpio_input_0_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_input_0_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_input_0_USE_FF}                      ##{NUTAQ_BACKPLANE port :: gpio_input_0_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_input_0_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_input_0_s                                ##{NUTAQ_BACKPLANE port :: gpio_input_0_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_input_0_R1_s                            ##{NUTAQ_BACKPLANE port :: gpio_input_0_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_input_0_in_use}

BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_input_1_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_input_1                       ##{NUTAQ_BACKPLANE port :: gpio_input_1_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_input_1_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_input_1_USE_FF}                      ##{NUTAQ_BACKPLANE port :: gpio_input_1_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_input_1_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_input_1_s                                ##{NUTAQ_BACKPLANE port :: gpio_input_1_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_input_1_R1_s                            ##{NUTAQ_BACKPLANE port :: gpio_input_1_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_input_1_in_use}
# TCLK A OUTPUT                                                                 ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_output_tclk_a                 ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_output_tclk_a_USE_FF}                ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_output_tclk_a_s                          ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_output_tclk_a_R1_s                      ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_a_in_use}
# TCLK B OUTPUT                                                                 ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_output_tclk_b                 ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_output_tclk_b_USE_FF}                ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_output_tclk_b_s                          ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_output_tclk_b_R1_s                      ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_b_in_use}
# TCLK C OUTPUT                                                                 ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_output_tclk_c                 ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_output_tclk_c_USE_FF}                ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_output_tclk_c_s                          ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_output_tclk_c_R1_s                      ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_c_in_use}
# TCLK D OUTPUT                                                                 ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_output_tclk_d                 ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_output_tclk_d_USE_FF}                ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_output_tclk_d_s                          ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_output_tclk_d_R1_s                      ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_output_tclk_d_in_use}
# TCLK A INPUT                                                                  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_input_tclk_a                  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_input_tclk_a_USE_FF}                 ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_input_tclk_a_s                           ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_input_tclk_a_R1_s                       ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_a_in_use}
# TCLK B INPUT                                                                  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_input_tclk_b                  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_input_tclk_b_USE_FF}                 ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_input_tclk_b_s                           ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_input_tclk_b_R1_s                       ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_b_in_use}
# TCLK C INPUT                                                                  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_input_tclk_c                  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_input_tclk_c_USE_FF}                 ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_input_tclk_c_s                           ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_input_tclk_c_R1_s                       ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_c_in_use}
# TCLK D INPUT                                                                  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}
BEGIN lyt_io                                                                    ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}
 PARAMETER INSTANCE = lyt_io_nutaq_backplane_gpio_input_tclk_d                  ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}
 PARAMETER USE_FF = %{nutaq_backplane_gpio_input_tclk_d_USE_FF}                 ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}
 PORT i_Clk_p = DesignClk_s                                                     ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}
 PORT i_Input_p = nutaq_backplane_gpio_input_tclk_d_s                           ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}
 PORT o_Output_p = nutaq_backplane_gpio_input_tclk_d_R1_s                       ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}
END                                                                             ##{NUTAQ_BACKPLANE port :: gpio_input_tclk_d_in_use}

BEGIN lyt_axi_emac_rtdex                                                        ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER INSTANCE = axi_emac_rtdex                                            ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER C_RTDEX_RX_NUMER_OF_CHANNELS = %{rtdex_emac0_params_rx_nb_channels}  ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER C_RTDEX_TX_NUMER_OF_CHANNELS = %{rtdex_emac0_params_tx_nb_channels}  ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER C_BASEADDR = 0x71000000                                              ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER C_HIGHADDR = 0x7100ffff                                              ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER C_RX_CH_FIFO_DEPTH = %{rtdex_emac0_params_rx_fifo}                   ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER C_TX_CH_FIFO_DEPTH = %{rtdex_emac0_params_tx_fifo}                   ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER C_RX_STATS_COUNTERS = %{rtdex_emac0_params_rx_stat}                  ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER C_TX_STATS_COUNTERS = %{rtdex_emac0_params_tx_stat}                  ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER C_SUPPORT_JUMBO_FRM = %{rtdex_emac0_params_jumbo}                    ##{RTDEX_EMAC0 port :: in_use}
 PARAMETER C_ENABLE_FLOW_CTRL = %{rtdex_emac0_params_flowctrl}                  ##{RTDEX_EMAC0 port :: in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x7                                                 ##{RTDEX_EMAC0 port :: in_use}
 BUS_INTERFACE AXI_STR_EMAC_TXC = Hard_Ethernet_MAC_AXI_STR_RXS                 ##{RTDEX_EMAC0 port :: in_use}
 BUS_INTERFACE AXI_STR_EMAC_TXD = Hard_Ethernet_MAC_AXI_STR_RXD                 ##{RTDEX_EMAC0 port :: in_use}
 BUS_INTERFACE AXI_STR_EMAC_RXS = axi_rtdex_eth_AXI_STR_EMAC_RXS                ##{RTDEX_EMAC0 port :: in_use}
 BUS_INTERFACE AXI_STR_EMAC_RXD = axi_rtdex_eth_AXI_STR_EMAC_RXD                ##{RTDEX_EMAC0 port :: in_use}
 BUS_INTERFACE AXI_STR_EDMA_TXC = Ethernet_DMA_M_AXIS_MM2S_CNTRL                ##{RTDEX_EMAC0 port :: in_use}
 BUS_INTERFACE AXI_STR_EDMA_TXD = Ethernet_DMA_M_AXIS_MM2S                      ##{RTDEX_EMAC0 port :: in_use}
 BUS_INTERFACE AXI_STR_EDMA_RXD = axi_rtdex_eth_AXI_STR_EDMA_RXD                ##{RTDEX_EMAC0 port :: in_use}
 BUS_INTERFACE AXI_STR_EDMA_RXS = axi_rtdex_eth_AXI_STR_EDMA_RXS                ##{RTDEX_EMAC0 port :: in_use}
 PORT AXI_STR_EMAC_TXC_ACLK = clk_100_0000MHzMMCM0                              ##{RTDEX_EMAC0 port :: in_use}
 PORT AXI_STR_EMAC_TXD_ACLK = clk_100_0000MHzMMCM0                              ##{RTDEX_EMAC0 port :: in_use}
 PORT AXI_STR_EMAC_RXS_ACLK = clk_100_0000MHzMMCM0                              ##{RTDEX_EMAC0 port :: in_use}
 PORT AXI_STR_EMAC_RXD_ACLK = clk_100_0000MHzMMCM0                              ##{RTDEX_EMAC0 port :: in_use}
 PORT AXI_STR_EDMA_TXC_ACLK = clk_100_0000MHzMMCM0                              ##{RTDEX_EMAC0 port :: in_use}
 PORT AXI_STR_EDMA_TXD_ACLK = clk_100_0000MHzMMCM0                              ##{RTDEX_EMAC0 port :: in_use}
 PORT AXI_STR_EDMA_RXS_ACLK = clk_100_0000MHzMMCM0                              ##{RTDEX_EMAC0 port :: in_use}
 PORT AXI_STR_EDMA_RXD_ACLK = clk_100_0000MHzMMCM0                              ##{RTDEX_EMAC0 port :: in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{RTDEX_EMAC0 port :: in_use}
                                                                                ##{RTDEX_EMAC0 port :: in_use}
 PORT i_RxUserClk_p = DesignClk_s                                               ##{RTDEX_EMAC0 port :: in_use}
                                                                                ##{RTDEX_EMAC0 port :: in_use}
 PORT o_RxReadyCh0_p = axi_rtdex_eth_o_RxReadyCh0_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch0_in_use}
 PORT o_RxReadyCh1_p = axi_rtdex_eth_o_RxReadyCh1_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch1_in_use}
 PORT o_RxReadyCh2_p = axi_rtdex_eth_o_RxReadyCh2_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch2_in_use}
 PORT o_RxReadyCh3_p = axi_rtdex_eth_o_RxReadyCh3_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch3_in_use}
 PORT o_RxReadyCh4_p = axi_rtdex_eth_o_RxReadyCh4_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch4_in_use}
 PORT o_RxReadyCh5_p = axi_rtdex_eth_o_RxReadyCh5_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch5_in_use}
 PORT o_RxReadyCh6_p = axi_rtdex_eth_o_RxReadyCh6_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch6_in_use}
 PORT o_RxReadyCh7_p = axi_rtdex_eth_o_RxReadyCh7_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch7_in_use}
                                                                                ##{RTDEX_EMAC0 port :: in_use}
 PORT i_RxReCh0_p = axi_rtdex_eth_o_RxReCh0_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch0_in_use}
 PORT i_RxReCh1_p = axi_rtdex_eth_o_RxReCh1_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch1_in_use}
 PORT i_RxReCh2_p = axi_rtdex_eth_o_RxReCh2_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch2_in_use}
 PORT i_RxReCh3_p = axi_rtdex_eth_o_RxReCh3_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch3_in_use}
 PORT i_RxReCh4_p = axi_rtdex_eth_o_RxReCh4_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch4_in_use}
 PORT i_RxReCh5_p = axi_rtdex_eth_o_RxReCh5_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch5_in_use}
 PORT i_RxReCh6_p = axi_rtdex_eth_o_RxReCh6_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch6_in_use}
 PORT i_RxReCh7_p = axi_rtdex_eth_o_RxReCh7_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch7_in_use}
                                                                                ##{RTDEX_EMAC0 port :: in_use}
 PORT ov32_RxDataCh0_p = axi_rtdex_eth_ov32_RxDataCh0_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch0_in_use}
 PORT ov32_RxDataCh1_p = axi_rtdex_eth_ov32_RxDataCh1_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch1_in_use}
 PORT ov32_RxDataCh2_p = axi_rtdex_eth_ov32_RxDataCh2_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch2_in_use}
 PORT ov32_RxDataCh3_p = axi_rtdex_eth_ov32_RxDataCh3_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch3_in_use}
 PORT ov32_RxDataCh4_p = axi_rtdex_eth_ov32_RxDataCh4_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch4_in_use}
 PORT ov32_RxDataCh5_p = axi_rtdex_eth_ov32_RxDataCh5_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch5_in_use}
 PORT ov32_RxDataCh6_p = axi_rtdex_eth_ov32_RxDataCh6_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch6_in_use}
 PORT ov32_RxDataCh7_p = axi_rtdex_eth_ov32_RxDataCh7_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch7_in_use}
                                                                                ##{RTDEX_EMAC0 port :: in_use}
 PORT o_RxDataValidCh0_p = axi_rtdex_eth_o_RxDataValidCh0_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch0_in_use}
 PORT o_RxDataValidCh1_p = axi_rtdex_eth_o_RxDataValidCh1_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch1_in_use}
 PORT o_RxDataValidCh2_p = axi_rtdex_eth_o_RxDataValidCh2_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch2_in_use}
 PORT o_RxDataValidCh3_p = axi_rtdex_eth_o_RxDataValidCh3_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch3_in_use}
 PORT o_RxDataValidCh4_p = axi_rtdex_eth_o_RxDataValidCh4_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch4_in_use}
 PORT o_RxDataValidCh5_p = axi_rtdex_eth_o_RxDataValidCh5_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch5_in_use}
 PORT o_RxDataValidCh6_p = axi_rtdex_eth_o_RxDataValidCh6_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch6_in_use}
 PORT o_RxDataValidCh7_p = axi_rtdex_eth_o_RxDataValidCh7_p                     ##{RTDEX_EMAC0 port :: rtdex_emac0_rx_data_ch7_in_use}
                                                                                ##{RTDEX_EMAC0 port :: in_use}
 PORT i_TxUserClk_p = DesignClk_s                                               ##{RTDEX_EMAC0 port :: in_use}
                                                                                ##{RTDEX_EMAC0 port :: in_use}
 PORT o_TxReadyCh0_p = axi_rtdex_eth_o_TxReadyCh0_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch0_in_use}
 PORT o_TxReadyCh1_p = axi_rtdex_eth_o_TxReadyCh1_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch1_in_use}
 PORT o_TxReadyCh2_p = axi_rtdex_eth_o_TxReadyCh2_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch2_in_use}
 PORT o_TxReadyCh3_p = axi_rtdex_eth_o_TxReadyCh3_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch3_in_use}
 PORT o_TxReadyCh4_p = axi_rtdex_eth_o_TxReadyCh4_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch4_in_use}
 PORT o_TxReadyCh5_p = axi_rtdex_eth_o_TxReadyCh5_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch5_in_use}
 PORT o_TxReadyCh6_p = axi_rtdex_eth_o_TxReadyCh6_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch6_in_use}
 PORT o_TxReadyCh7_p = axi_rtdex_eth_o_TxReadyCh7_p                             ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch7_in_use}
                                                                                ##{RTDEX_EMAC0 port :: in_use}
 PORT i_TxWeCh0_p = axi_rtdex_eth_o_TxWeCh0_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch0_in_use}
 PORT i_TxWeCh1_p = axi_rtdex_eth_o_TxWeCh1_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch1_in_use}
 PORT i_TxWeCh2_p = axi_rtdex_eth_o_TxWeCh2_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch2_in_use}
 PORT i_TxWeCh3_p = axi_rtdex_eth_o_TxWeCh3_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch3_in_use}
 PORT i_TxWeCh4_p = axi_rtdex_eth_o_TxWeCh4_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch4_in_use}
 PORT i_TxWeCh5_p = axi_rtdex_eth_o_TxWeCh5_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch5_in_use}
 PORT i_TxWeCh6_p = axi_rtdex_eth_o_TxWeCh6_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch6_in_use}
 PORT i_TxWeCh7_p = axi_rtdex_eth_o_TxWeCh7_p                                   ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch7_in_use}
                                                                                ##{RTDEX_EMAC0 port :: in_use}
 PORT iv32_TxDataCh0_p = axi_rtdex_eth_ov32_TxDataCh0_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch0_in_use}
 PORT iv32_TxDataCh1_p = axi_rtdex_eth_ov32_TxDataCh1_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch1_in_use}
 PORT iv32_TxDataCh2_p = axi_rtdex_eth_ov32_TxDataCh2_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch2_in_use}
 PORT iv32_TxDataCh3_p = axi_rtdex_eth_ov32_TxDataCh3_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch3_in_use}
 PORT iv32_TxDataCh4_p = axi_rtdex_eth_ov32_TxDataCh4_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch4_in_use}
 PORT iv32_TxDataCh5_p = axi_rtdex_eth_ov32_TxDataCh5_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch5_in_use}
 PORT iv32_TxDataCh6_p = axi_rtdex_eth_ov32_TxDataCh6_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch6_in_use}
 PORT iv32_TxDataCh7_p = axi_rtdex_eth_ov32_TxDataCh7_p                         ##{RTDEX_EMAC0 port :: rtdex_emac0_tx_data_ch7_in_use}
                                                                                ##{RTDEX_EMAC0 port :: in_use}
END                                                                             ##{RTDEX_EMAC0 port :: in_use}

BEGIN lyt_axi_pcie_rtdex                                                        ##{RTDEX_PCIE port :: in_use}
 PARAMETER INSTANCE = lyt_axi_pcie_rtdex_0                                      ##{RTDEX_PCIE port :: in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{RTDEX_PCIE port :: in_use}
 PARAMETER C_S_AXI_SUPPORTS_READ = 0                                            ##{RTDEX_PCIE port :: in_use}
 PARAMETER C_S_AXI_ID_WIDTH = 4                                                 ##{RTDEX_PCIE port :: in_use}
 PARAMETER C_RTDEX_RX_NUMBER_OF_CHANNELS = %{rtdex_pcie_params_rx_nb_channels}  ##{RTDEX_PCIE port :: in_use}
 PARAMETER C_RTDEX_TX_NUMBER_OF_CHANNELS = %{rtdex_pcie_params_tx_nb_channels}  ##{RTDEX_PCIE port :: in_use}
 PARAMETER C_REG_BASEADDR = 0x50022000                                          ##{RTDEX_PCIE port :: in_use}
 PARAMETER C_REG_HIGHADDR = 0x50023FFF                                          ##{RTDEX_PCIE port :: in_use}
 PARAMETER C_INTERCONNECT_S_AXI_MASTERS = axi_cdma_0.M_AXI & PCIe.M_AXI         ##{PCIE port :: cdma_in_use}
 PARAMETER C_INTERCONNECT_S_AXI_MASTERS = PCIe.M_AXI                            ##{PCIE port :: in_use_cdma_unused}
 PARAMETER C_INTERCONNECT_S_AXI_REG_MASTERS = PCIe.M_AXI                        ##{RTDEX_PCIE port :: in_use}
 PARAMETER C_S_AXI_RX_FIFO_BASEADDR = 0x51000000                                ##{RTDEX_PCIE port :: in_use}
 PARAMETER C_S_AXI_RX_FIFO_HIGHADDR = 0x510fffff                                ##{RTDEX_PCIE port :: in_use}
 PARAMETER C_RX_CH_FIFO_DEPTH = %{rtdex_pcie_params_rx_fifo}                    ##{RTDEX_PCIE port :: in_use}
 PARAMETER C_TX_CH_FIFO_DEPTH = %{rtdex_pcie_params_tx_fifo}                    ##{RTDEX_PCIE port :: in_use}
 BUS_INTERFACE S_AXI_REG = AXI_MM_PCIe                                          ##{RTDEX_PCIE port :: in_use}
 BUS_INTERFACE S_AXI = AXI_MM_PCIe                                              ##{RTDEX_PCIE port :: in_use}
 BUS_INTERFACE M_AXI_S2MM_CH0 = AXI_MM_PCIe                                     ##{RTDEX_PCIE port :: in_use_rtdex_pcie_tx_data_ch_unused}
 BUS_INTERFACE M_AXI_S2MM_CH0 = AXI_MM_PCIe                                     ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch0_in_use}
 BUS_INTERFACE M_AXI_S2MM_CH1 = AXI_MM_PCIe                                     ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch1_in_use}
 BUS_INTERFACE M_AXI_S2MM_CH2 = AXI_MM_PCIe                                     ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch2_in_use}
 BUS_INTERFACE M_AXI_S2MM_CH3 = AXI_MM_PCIe                                     ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch3_in_use}
 BUS_INTERFACE M_AXI_S2MM_CH4 = AXI_MM_PCIe                                     ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch4_in_use}
 BUS_INTERFACE M_AXI_S2MM_CH5 = AXI_MM_PCIe                                     ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch5_in_use}
 BUS_INTERFACE M_AXI_S2MM_CH6 = AXI_MM_PCIe                                     ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch6_in_use}
 BUS_INTERFACE M_AXI_S2MM_CH7 = AXI_MM_PCIe                                     ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch7_in_use}
 PORT S_AXI_ACLK = PCIe_axi_aclk_out                                            ##{RTDEX_PCIE port :: in_use}
 PORT o_mbIrq_p = rtdexMbIrq_s                                                  ##{RTDEX_PCIE port :: in_use}
 PORT m_axi_s2mm_Ch0_aclk = PCIe_axi_aclk_out                                   ##{RTDEX_PCIE port :: in_use}
 PORT m_axi_s2mm_Ch1_aclk = PCIe_axi_aclk_out                                   ##{RTDEX_PCIE port :: in_use}
 PORT m_axi_s2mm_Ch2_aclk = PCIe_axi_aclk_out                                   ##{RTDEX_PCIE port :: in_use}
 PORT m_axi_s2mm_Ch3_aclk = PCIe_axi_aclk_out                                   ##{RTDEX_PCIE port :: in_use}
 PORT m_axi_s2mm_Ch4_aclk = PCIe_axi_aclk_out                                   ##{RTDEX_PCIE port :: in_use}
 PORT m_axi_s2mm_Ch5_aclk = PCIe_axi_aclk_out                                   ##{RTDEX_PCIE port :: in_use}
 PORT m_axi_s2mm_Ch6_aclk = PCIe_axi_aclk_out                                   ##{RTDEX_PCIE port :: in_use}
 PORT m_axi_s2mm_Ch7_aclk = PCIe_axi_aclk_out                                   ##{RTDEX_PCIE port :: in_use}
 PORT o_PcieMsi_p = lyt_axi_pcie_rtdex_0_o_PcieMsi_p                            ##{RTDEX_PCIE port :: in_use}
 PORT S_AXI_REG_ACLK = PCIe_axi_aclk_out                                        ##{RTDEX_PCIE port :: in_use}
                                                                                ##{RTDEX_PCIE port :: in_use}
 PORT i_RxUserClk_p = DesignClk_s                                               ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch0_in_use}
                                                                                ##{RTDEX_PCIE port :: in_use}
 PORT o_RxReadyCh0_p = axi_rtdex_pcie_o_RxReadyCh0_p                            ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch0_in_use}
 PORT o_RxReadyCh1_p = axi_rtdex_pcie_o_RxReadyCh1_p                            ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch1_in_use}
 PORT o_RxReadyCh2_p = axi_rtdex_pcie_o_RxReadyCh2_p                            ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch2_in_use}
 PORT o_RxReadyCh3_p = axi_rtdex_pcie_o_RxReadyCh3_p                            ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch3_in_use}
 PORT o_RxReadyCh4_p = axi_rtdex_pcie_o_RxReadyCh4_p                            ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch4_in_use}
 PORT o_RxReadyCh5_p = axi_rtdex_pcie_o_RxReadyCh5_p                            ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch5_in_use}
 PORT o_RxReadyCh6_p = axi_rtdex_pcie_o_RxReadyCh6_p                            ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch6_in_use}
 PORT o_RxReadyCh7_p = axi_rtdex_pcie_o_RxReadyCh7_p                            ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch7_in_use}
                                                                                ##{RTDEX_PCIE port :: in_use}
 PORT i_RxReCh0_p = axi_rtdex_pcie_o_RxReCh0_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch0_in_use}
 PORT i_RxReCh1_p = axi_rtdex_pcie_o_RxReCh1_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch1_in_use}
 PORT i_RxReCh2_p = axi_rtdex_pcie_o_RxReCh2_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch2_in_use}
 PORT i_RxReCh3_p = axi_rtdex_pcie_o_RxReCh3_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch3_in_use}
 PORT i_RxReCh4_p = axi_rtdex_pcie_o_RxReCh4_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch4_in_use}
 PORT i_RxReCh5_p = axi_rtdex_pcie_o_RxReCh5_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch5_in_use}
 PORT i_RxReCh6_p = axi_rtdex_pcie_o_RxReCh6_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch6_in_use}
 PORT i_RxReCh7_p = axi_rtdex_pcie_o_RxReCh7_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch7_in_use}
                                                                                ##{RTDEX_PCIE port :: in_use}
 PORT ov32_RxDataCh0_p = axi_rtdex_pcie_ov32_RxDataCh0_p                        ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch0_in_use}
 PORT ov32_RxDataCh1_p = axi_rtdex_pcie_ov32_RxDataCh1_p                        ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch1_in_use}
 PORT ov32_RxDataCh2_p = axi_rtdex_pcie_ov32_RxDataCh2_p                        ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch2_in_use}
 PORT ov32_RxDataCh3_p = axi_rtdex_pcie_ov32_RxDataCh3_p                        ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch3_in_use}
 PORT ov32_RxDataCh4_p = axi_rtdex_pcie_ov32_RxDataCh4_p                        ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch4_in_use}
 PORT ov32_RxDataCh5_p = axi_rtdex_pcie_ov32_RxDataCh5_p                        ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch5_in_use}
 PORT ov32_RxDataCh6_p = axi_rtdex_pcie_ov32_RxDataCh6_p                        ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch6_in_use}
 PORT ov32_RxDataCh7_p = axi_rtdex_pcie_ov32_RxDataCh7_p                        ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch7_in_use}
                                                                                ##{RTDEX_PCIE port :: in_use}
 PORT o_RxDataValidCh0_p = axi_rtdex_pcie_o_RxDataValidCh0_p                    ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch0_in_use}
 PORT o_RxDataValidCh1_p = axi_rtdex_pcie_o_RxDataValidCh1_p                    ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch1_in_use}
 PORT o_RxDataValidCh2_p = axi_rtdex_pcie_o_RxDataValidCh2_p                    ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch2_in_use}
 PORT o_RxDataValidCh3_p = axi_rtdex_pcie_o_RxDataValidCh3_p                    ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch3_in_use}
 PORT o_RxDataValidCh4_p = axi_rtdex_pcie_o_RxDataValidCh4_p                    ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch4_in_use}
 PORT o_RxDataValidCh5_p = axi_rtdex_pcie_o_RxDataValidCh5_p                    ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch5_in_use}
 PORT o_RxDataValidCh6_p = axi_rtdex_pcie_o_RxDataValidCh6_p                    ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch6_in_use}
 PORT o_RxDataValidCh7_p = axi_rtdex_pcie_o_RxDataValidCh7_p                    ##{RTDEX_PCIE port :: rtdex_pcie_rx_data_ch7_in_use}
                                                                                ##{RTDEX_PCIE port :: in_use}
 PORT i_TxUserClk_p = DesignClk_s                                               ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch0_in_use}
                                                                                ##{RTDEX_PCIE port :: in_use}
 PORT o_TxReadyCh0_p = axi_rtdex_pcie_o_TxReadyCh0_p                            ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch0_in_use}
 PORT o_TxReadyCh1_p = axi_rtdex_pcie_o_TxReadyCh1_p                            ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch1_in_use}
 PORT o_TxReadyCh2_p = axi_rtdex_pcie_o_TxReadyCh2_p                            ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch2_in_use}
 PORT o_TxReadyCh3_p = axi_rtdex_pcie_o_TxReadyCh3_p                            ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch3_in_use}
 PORT o_TxReadyCh4_p = axi_rtdex_pcie_o_TxReadyCh4_p                            ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch4_in_use}
 PORT o_TxReadyCh5_p = axi_rtdex_pcie_o_TxReadyCh5_p                            ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch5_in_use}
 PORT o_TxReadyCh6_p = axi_rtdex_pcie_o_TxReadyCh6_p                            ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch6_in_use}
 PORT o_TxReadyCh7_p = axi_rtdex_pcie_o_TxReadyCh7_p                            ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch7_in_use}
                                                                                ##{RTDEX_PCIE port :: in_use}
 PORT i_TxWeCh0_p = axi_rtdex_pcie_o_TxWeCh0_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch0_in_use}
 PORT i_TxWeCh1_p = axi_rtdex_pcie_o_TxWeCh1_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch1_in_use}
 PORT i_TxWeCh2_p = axi_rtdex_pcie_o_TxWeCh2_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch2_in_use}
 PORT i_TxWeCh3_p = axi_rtdex_pcie_o_TxWeCh3_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch3_in_use}
 PORT i_TxWeCh4_p = axi_rtdex_pcie_o_TxWeCh4_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch4_in_use}
 PORT i_TxWeCh5_p = axi_rtdex_pcie_o_TxWeCh5_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch5_in_use}
 PORT i_TxWeCh6_p = axi_rtdex_pcie_o_TxWeCh6_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch6_in_use}
 PORT i_TxWeCh7_p = axi_rtdex_pcie_o_TxWeCh7_p                                  ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch7_in_use}
                                                                                ##{RTDEX_PCIE port :: in_use}
 PORT iv32_TxDataCh0_p = axi_rtdex_pcie_ov32_TxDataCh0_p                        ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch0_in_use}
 PORT iv32_TxDataCh1_p = axi_rtdex_pcie_ov32_TxDataCh1_p                        ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch1_in_use}
 PORT iv32_TxDataCh2_p = axi_rtdex_pcie_ov32_TxDataCh2_p                        ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch2_in_use}
 PORT iv32_TxDataCh3_p = axi_rtdex_pcie_ov32_TxDataCh3_p                        ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch3_in_use}
 PORT iv32_TxDataCh4_p = axi_rtdex_pcie_ov32_TxDataCh4_p                        ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch4_in_use}
 PORT iv32_TxDataCh5_p = axi_rtdex_pcie_ov32_TxDataCh5_p                        ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch5_in_use}
 PORT iv32_TxDataCh6_p = axi_rtdex_pcie_ov32_TxDataCh6_p                        ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch6_in_use}
 PORT iv32_TxDataCh7_p = axi_rtdex_pcie_ov32_TxDataCh7_p                        ##{RTDEX_PCIE port :: rtdex_pcie_tx_data_ch7_in_use}
                                                                                ##{RTDEX_PCIE port :: in_use}
END                                                                             ##{RTDEX_PCIE port :: in_use}


BEGIN lyt_axi_record_playback                                                   ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER INSTANCE = RECORD_PLAYBACK                                           ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER C_BASEADDR = 0x73000000                                              ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER C_HIGHADDR = 0x7300ffff                                              ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER RecordPortWidth_g = %{recplay_params_rec_port_width}                 ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER PlayBackPortWidth_g = %{recplay_params_play_port_width}              ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER NumberOfRecordPorts_g = %{recplay_params_rec_nb_ports}               ##{RECORD_PLAYBACK port :: in_use}
 PARAMETER NumberOfPlayBackPorts_g = %{recplay_params_play_nb_ports}            ##{RECORD_PLAYBACK port :: in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x7                                                 ##{RECORD_PLAYBACK port :: in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{RECORD_PLAYBACK port :: in_use}
 PORT i_RTDExRxClock_p = DesignClk_s                                            ##{RECORD_PLAYBACK port :: in_use}
 PORT i_RTDExTxClock_p = DesignClk_s                                            ##{RECORD_PLAYBACK port :: in_use}
 PORT o_RxRe_p = RecPlayRxRe_s                                                  ##{RECORD_PLAYBACK port :: record_rtdex_in_use}
 PORT i_RxReady_p = RecPlayRxReady_s                                            ##{RECORD_PLAYBACK port :: record_rtdex_in_use}
 PORT i_RxDataValid_p = RecPlayRxDataValid_s                                    ##{RECORD_PLAYBACK port :: record_rtdex_in_use}
 PORT iv32_RxDataCh0_p = v32_RecPlayRxDataCh0_s                                 ##{RECORD_PLAYBACK port :: record_rtdex_in_use}
 PORT o_TxWe_p = RecPlayTxWe_s                                                  ##{RECORD_PLAYBACK port :: playback_rtdex_in_use}
 PORT i_TxReady_p = RecPlayTxReady_s                                            ##{RECORD_PLAYBACK port :: playback_rtdex_in_use}
 PORT ov32_TxDataCh0_p = v32_RecPlayTxDataCh0_s                                 ##{RECORD_PLAYBACK port :: playback_rtdex_in_use}
 PORT clk_ref = clk_200_0000MHzMMCM0                                            ##{RECORD_PLAYBACK port :: in_use}
 PORT sys_clk = ddr3RefClk_s                                                    ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_dq = iov64_SodimmDdr3Dq_p                                            ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_addr = v16_SodimmDdr3A_s                                             ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_ba = v3_SodimmDdr3Ba_s                                               ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_ras_n = nSodimmDdr3Ras_s                                             ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_cas_n = nSodimmDdr3Cas_s                                             ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_we_n = nSodimmDdr3We_s                                               ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_reset_n = nSodimmDdr3Reset_s                                         ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_cs_n = nSodimmDdr3S0_s                                               ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_odt = SodimmDdr3Odt0_s                                               ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_cke = SodimmDdr3Cke0_s                                               ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_dm = v8_SodimmDdr3Dm_s                                               ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_dqs_p = iov8dp_SodimmDdr3Dqs_p                                       ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_dqs_n = iov8dn_SodimmDdr3Dqs_p                                       ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_ck_p = dpSodimmDdr3Ck_s                                              ##{RECORD_PLAYBACK port :: in_use}
 PORT ddr3_ck_n = dnSodimmDdr3Ck_s                                              ##{RECORD_PLAYBACK port :: in_use}
 PORT iodelay_ctrl_rdy = IoDelayCtrlRdy_s                                       ##{RECORD_PLAYBACK port :: in_use}
 PORT i_RecDataClk_p = DesignClk_s                                              ##{RECORD_PLAYBACK port :: record_in_use}
 PORT iv_RecDataPort0_p = v_RecDataPort0_s                                      ##{RECORD_PLAYBACK port :: record_data_port0_in_use}
 PORT iv_RecDataPort1_p = v_RecDataPort1_s                                      ##{RECORD_PLAYBACK port :: record_data_port1_in_use}
 PORT iv_RecDataPort2_p = v_RecDataPort2_s                                      ##{RECORD_PLAYBACK port :: record_data_port2_in_use}
 PORT iv_RecDataPort3_p = v_RecDataPort3_s                                      ##{RECORD_PLAYBACK port :: record_data_port3_in_use}
 PORT iv_RecDataPort4_p = v_RecDataPort4_s                                      ##{RECORD_PLAYBACK port :: record_data_port4_in_use}
 PORT iv_RecDataPort5_p = v_RecDataPort5_s                                      ##{RECORD_PLAYBACK port :: record_data_port5_in_use}
 PORT iv_RecDataPort6_p = v_RecDataPort6_s                                      ##{RECORD_PLAYBACK port :: record_data_port6_in_use}
 PORT iv_RecDataPort7_p = v_RecDataPort7_s                                      ##{RECORD_PLAYBACK port :: record_data_port7_in_use}
 PORT iv_RecDataPort8_p = v_RecDataPort8_s                                      ##{RECORD_PLAYBACK port :: record_data_port8_in_use}
 PORT iv_RecDataPort9_p = v_RecDataPort9_s                                      ##{RECORD_PLAYBACK port :: record_data_port9_in_use}
 PORT iv_RecDataPort10_p = v_RecDataPort10_s                                    ##{RECORD_PLAYBACK port :: record_data_port10_in_use}
 PORT iv_RecDataPort11_p = v_RecDataPort11_s                                    ##{RECORD_PLAYBACK port :: record_data_port11_in_use}
 PORT iv_RecDataPort12_p = v_RecDataPort12_s                                    ##{RECORD_PLAYBACK port :: record_data_port12_in_use}
 PORT iv_RecDataPort13_p = v_RecDataPort13_s                                    ##{RECORD_PLAYBACK port :: record_data_port13_in_use}
 PORT iv_RecDataPort14_p = v_RecDataPort14_s                                    ##{RECORD_PLAYBACK port :: record_data_port14_in_use}
 PORT iv_RecDataPort15_p = v_RecDataPort15_s                                    ##{RECORD_PLAYBACK port :: record_data_port15_in_use}
 PORT i_RecWriteEn_p = RecWriteEn_s                                             ##{RECORD_PLAYBACK port :: record_in_use}
 PORT i_RecTrigger_p = RecTrigger_s                                             ##{RECORD_PLAYBACK port :: record_trigger_in_use}
 PORT o_RecFifoFull_p = RecFifoFull_s                                           ##{RECORD_PLAYBACK port :: record_fifo_full_in_use}
 PORT i_PlayDataClk_p = DesignClk_s                                             ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort0_p = v_PlayDataPort0_s                                    ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort1_p = v_PlayDataPort1_s                                    ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort2_p = v_PlayDataPort2_s                                    ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort3_p = v_PlayDataPort3_s                                    ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort4_p = v_PlayDataPort4_s                                    ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort5_p = v_PlayDataPort5_s                                    ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort6_p = v_PlayDataPort6_s                                    ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort7_p = v_PlayDataPort7_s                                    ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort8_p = v_PlayDataPort8_s                                    ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort9_p = v_PlayDataPort9_s                                    ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort10_p = v_PlayDataPort10_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort11_p = v_PlayDataPort11_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort12_p = v_PlayDataPort12_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort13_p = v_PlayDataPort13_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort14_p = v_PlayDataPort14_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT ov_PlayDataPort15_p = v_PlayDataPort15_s                                  ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT o_PlayValid_p = PlayValid_s                                               ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT i_PlayReadEn_p = PlayReadEn_s                                             ##{RECORD_PLAYBACK port :: playback_in_use}
 PORT i_PlayTriggerIn_p = PlayTriggerIn_s                                       ##{RECORD_PLAYBACK port :: playback_trigger_in_use}
 PORT o_PlayEmpty_p = PlayEmpty_s                                               ##{RECORD_PLAYBACK port :: playback_fifo_empty_in_use}
END                                                                             ##{RECORD_PLAYBACK port :: in_use}

BEGIN proc_sys_reset
 PARAMETER INSTANCE = proc_sys_reset_0
 PARAMETER HW_VER = 3.00.a
 PARAMETER C_EXT_RESET_HIGH = 1
 PARAMETER C_EXT_RST_WIDTH = 16
 PARAMETER C_AUX_RST_WIDTH = 16
 PORT MB_Debug_Sys_Rst = proc_sys_reset_0_MB_Debug_Sys_Rst
 PORT Dcm_locked = proc_sys_reset_0_Dcm_locked
 PORT MB_Reset = proc_sys_reset_0_MB_Reset
 PORT Slowest_sync_clk = clk_100_0000MHzMMCM0
 PORT Interconnect_aresetn = proc_sys_reset_0_Interconnect_aresetn
 PORT Ext_Reset_In = sys_reset
 PORT BUS_STRUCT_RESET = proc_sys_reset_0_BUS_STRUCT_RESET
 PORT Peripheral_Reset = sys_periph_reset
 PORT Aux_Reset_In = axi_timebase_wdt_0_WDT_Reset
END

BEGIN lmb_v10
 PARAMETER INSTANCE = i_lmb
 PARAMETER HW_VER = 2.00.b
 PORT SYS_RST = proc_sys_reset_0_BUS_STRUCT_RESET
 PORT LMB_CLK = clk_100_0000MHzMMCM0
END

BEGIN lmb_bram_if_cntlr
 PARAMETER INSTANCE = i_bram_ctrl
 PARAMETER HW_VER = 3.00.b
 PARAMETER C_BASEADDR = 0x00000000
 PARAMETER C_HIGHADDR = 0x00007fff
 BUS_INTERFACE SLMB = i_lmb
 BUS_INTERFACE BRAM_PORT = microblaze_0_i_bram_ctrl_2_microblaze_0_bram_block
END

BEGIN lmb_v10
 PARAMETER INSTANCE = d_lmb
 PARAMETER HW_VER = 2.00.b
 PORT SYS_RST = proc_sys_reset_0_BUS_STRUCT_RESET
 PORT LMB_CLK = clk_100_0000MHzMMCM0
END

BEGIN lmb_bram_if_cntlr
 PARAMETER INSTANCE = d_bram_ctrl
 PARAMETER HW_VER = 3.00.b
 PARAMETER C_BASEADDR = 0x00000000
 PARAMETER C_HIGHADDR = 0x00007fff
 BUS_INTERFACE SLMB = d_lmb
 BUS_INTERFACE BRAM_PORT = microblaze_0_d_bram_ctrl_2_microblaze_0_bram_block
END

BEGIN bram_block
 PARAMETER INSTANCE = bram_block0
 PARAMETER HW_VER = 1.00.a
 BUS_INTERFACE PORTA = microblaze_0_i_bram_ctrl_2_microblaze_0_bram_block
 BUS_INTERFACE PORTB = microblaze_0_d_bram_ctrl_2_microblaze_0_bram_block
END

BEGIN microblaze
 PARAMETER INSTANCE = main_cpu
 PARAMETER HW_VER = 8.20.b
 PARAMETER C_INTERCONNECT = 2
 PARAMETER C_USE_BARREL = 1
 PARAMETER C_USE_FPU = 2
 PARAMETER C_DEBUG_ENABLED = 1
 PARAMETER C_ICACHE_BASEADDR = 0x90000000
 PARAMETER C_ICACHE_HIGHADDR = 0x97ffffff
 PARAMETER C_USE_ICACHE = 1
 PARAMETER C_CACHE_BYTE_SIZE = 16384
 PARAMETER C_ICACHE_ALWAYS_USED = 1
 PARAMETER C_DCACHE_BASEADDR = 0x90000000
 PARAMETER C_DCACHE_HIGHADDR = 0x97ffffff
 PARAMETER C_USE_DCACHE = 1
 PARAMETER C_DCACHE_BYTE_SIZE = 16384
 PARAMETER C_DCACHE_ALWAYS_USED = 1
 PARAMETER C_STREAM_INTERCONNECT = 0
 PARAMETER C_ICACHE_STREAMS = 0
 PARAMETER C_ICACHE_VICTIMS = 0
 PARAMETER C_DCACHE_LINE_LEN = 4
 PARAMETER C_DCACHE_USE_WRITEBACK = 0
 PARAMETER C_USE_DIV = 1
 PARAMETER C_USE_BRANCH_TARGET_CACHE = 0
 PARAMETER C_USE_HW_MUL = 2
 PARAMETER C_ICACHE_LINE_LEN = 4
 PARAMETER C_USE_MMU = 3
 PARAMETER C_NUMBER_OF_PC_BRK = 1
 PARAMETER C_NUMBER_OF_RD_ADDR_BRK = 0
 PARAMETER C_NUMBER_OF_WR_ADDR_BRK = 0
 PARAMETER C_INTERCONNECT_M_AXI_DC_AW_REGISTER = 1
 PARAMETER C_INTERCONNECT_M_AXI_DC_AR_REGISTER = 1
 PARAMETER C_INTERCONNECT_M_AXI_IC_AW_REGISTER = 1
 PARAMETER C_INTERCONNECT_M_AXI_IC_AR_REGISTER = 1
 PARAMETER C_INTERCONNECT_M_AXI_DC_W_REGISTER = 1
 PARAMETER C_INTERCONNECT_M_AXI_DC_R_REGISTER = 1
 PARAMETER C_INTERCONNECT_M_AXI_DC_B_REGISTER = 1
 PARAMETER C_INTERCONNECT_M_AXI_IC_W_REGISTER = 1
 PARAMETER C_INTERCONNECT_M_AXI_IC_R_REGISTER = 1
 PARAMETER C_INTERCONNECT_M_AXI_IC_B_REGISTER = 1
 BUS_INTERFACE DEBUG = microblaze_0_debug
 BUS_INTERFACE M_AXI_DP = AXI_Lite
 BUS_INTERFACE M_AXI_IP = AXI_Lite
 BUS_INTERFACE M_AXI_DC = AXI_MM
 BUS_INTERFACE M_AXI_IC = AXI_MM
 BUS_INTERFACE DLMB = d_lmb
 BUS_INTERFACE ILMB = i_lmb
 PORT MB_RESET = proc_sys_reset_0_MB_Reset
 PORT CLK = clk_100_0000MHzMMCM0
 PORT INTERRUPT = Interrupt_Cntlr_Irq
END

BEGIN mdm
 PARAMETER INSTANCE = debug_module
 PARAMETER HW_VER = 2.00.b
 PARAMETER C_INTERCONNECT = 2
 PARAMETER C_USE_UART = 1
 PARAMETER C_BASEADDR = 0x80000000
 PARAMETER C_HIGHADDR = 0x8000ffff
 PARAMETER C_MB_DBG_PORTS = 1
 BUS_INTERFACE S_AXI = AXI_Lite_0x8
 BUS_INTERFACE MBDEBUG_0 = microblaze_0_debug
 PORT Debug_SYS_Rst = proc_sys_reset_0_MB_Debug_Sys_Rst
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0
 PORT Interrupt = debug_module_Interrupt
END

BEGIN clock_generator
 PARAMETER INSTANCE = clock_generator_0
 PARAMETER HW_VER = 4.03.a
 PARAMETER C_CLKIN_FREQ = 200000000
 PARAMETER C_CLKOUT0_FREQ = 100000000
 PARAMETER C_CLKOUT0_GROUP = MMCM0
 PARAMETER C_CLKOUT1_FREQ = 200000000
 PARAMETER C_CLKOUT1_GROUP = MMCM0
 PARAMETER C_CLKOUT2_FREQ = 400000000
 PARAMETER C_CLKOUT2_GROUP = MMCM0
 PARAMETER C_CLKOUT3_FREQ = 400000000
 PARAMETER C_CLKOUT3_GROUP = MMCM0
 PARAMETER C_CLKOUT3_BUF = FALSE
 PARAMETER C_CLKOUT3_VARIABLE_PHASE = TRUE
 PARAMETER C_CLKOUT1_BUF = TRUE
 PORT LOCKED = proc_sys_reset_0_Dcm_locked
 PORT CLKOUT0 = clk_100_0000MHzMMCM0
 PORT CLKOUT3 = clk_400_0000MHzMMCM0_nobuf_varphase
 PORT CLKOUT2 = clk_400_0000MHzMMCM0
 PORT CLKOUT1 = clk_200_0000MHzMMCM0
 PORT CLKIN = CLK
 PORT PSCLK = clk_200_0000MHzMMCM0
 PORT PSEN = DDR3_SDRAM_pd_PSEN
 PORT PSINCDEC = DDR3_SDRAM_pd_PSINCDEC
 PORT PSDONE = clock_generator_0_PSDONE
END

BEGIN axi_interconnect
 PARAMETER INSTANCE = AXI_Lite
 PARAMETER HW_VER = 1.04.a
 PARAMETER C_INTERCONNECT_CONNECTIVITY_MODE = 0
 PORT INTERCONNECT_ARESETN = proc_sys_reset_0_Interconnect_aresetn
 PORT INTERCONNECT_ACLK = clk_100_0000MHzMMCM0
END

BEGIN axi2axi_connector
 PARAMETER INSTANCE = axi2axi_0x7
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_S_AXI_NUM_ADDR_RANGES = 1
 PARAMETER C_S_AXI_RNG00_BASEADDR = 0x70000000
 PARAMETER C_S_AXI_RNG00_HIGHADDR = 0x7FFFFFFF
 PARAMETER C_S_AXI_PROTOCOL = AXI4LITE
 PARAMETER C_INTERCONNECT_M_AXI_AW_REGISTER = 7
 PARAMETER C_INTERCONNECT_M_AXI_AR_REGISTER = 7
 PARAMETER C_INTERCONNECT_M_AXI_W_REGISTER = 7
 PARAMETER C_INTERCONNECT_M_AXI_R_REGISTER = 7
 PARAMETER C_INTERCONNECT_M_AXI_B_REGISTER = 7
 BUS_INTERFACE S_AXI = AXI_Lite
 BUS_INTERFACE M_AXI = AXI_Lite_0x7
END

BEGIN axi2axi_connector
 PARAMETER INSTANCE = axi2axi_0x8
 PARAMETER C_S_AXI_RNG00_BASEADDR = 0x80000000
 PARAMETER C_S_AXI_RNG00_HIGHADDR = 0x8FFFFFFF
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_INTERCONNECT_M_AXI_AW_REGISTER = 7
 PARAMETER C_INTERCONNECT_M_AXI_AR_REGISTER = 7
 PARAMETER C_INTERCONNECT_M_AXI_W_REGISTER = 7
 PARAMETER C_INTERCONNECT_M_AXI_R_REGISTER = 7
 PARAMETER C_INTERCONNECT_M_AXI_B_REGISTER = 7
 BUS_INTERFACE S_AXI = AXI_Lite
 BUS_INTERFACE M_AXI = AXI_Lite_0x8
END

BEGIN axi_interconnect
 PARAMETER INSTANCE = AXI_Lite_0x7
 PARAMETER HW_VER = 1.04.a
 PARAMETER C_INTERCONNECT_CONNECTIVITY_MODE = 0
 PORT INTERCONNECT_ARESETN = proc_sys_reset_0_Interconnect_aresetn
 PORT INTERCONNECT_ACLK = clk_100_0000MHzMMCM0
END

BEGIN axi_interconnect
 PARAMETER INSTANCE = AXI_Lite_0x8
 PARAMETER HW_VER = 1.04.a
 PARAMETER C_INTERCONNECT_CONNECTIVITY_MODE = 0
 PORT INTERCONNECT_ARESETN = proc_sys_reset_0_Interconnect_aresetn
 PORT INTERCONNECT_ACLK = clk_100_0000MHzMMCM0
END

BEGIN lyt_uart_switch
 PARAMETER INSTANCE = uart_switch
 PARAMETER HW_VER = 1.00.a
 PORT iv2_SelectMode_p = v2_UartSelectMode_s
 PORT i_DaughterAbsent_p = net_gnd
 PORT i_Daughter_RX_p = i_FpUartRX_p
 PORT io_Daughter_TX_p = io_FpUartTX_p
 PORT i_AMC_RX_p = i_AMCUartRX_p
 PORT io_AMC_TX_p = io_AMCUartTX_p
 PORT o_AXI_RX_p = FpUartRX_s
 PORT i_AXI_TX_p = FpUartTX_s
END

BEGIN axi_uartlite
 PARAMETER INSTANCE = fp_uart
 PARAMETER HW_VER = 1.02.a
 PARAMETER C_BAUDRATE = 115200
 PARAMETER C_BASEADDR = 0x84000000
 PARAMETER C_HIGHADDR = 0x8400ffff
 BUS_INTERFACE S_AXI = AXI_Lite_0x8
 PORT RX = FpUartRX_s
 PORT TX = FpUartTX_s
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0
 PORT Interrupt = fp_uart_Interrupt
END

BEGIN axi_interconnect
 PARAMETER INSTANCE = AXI_MM
 PARAMETER HW_VER = 1.05.a
 PORT INTERCONNECT_ACLK = clk_100_0000MHzMMCM0
 PORT INTERCONNECT_ARESETN = proc_sys_reset_0_Interconnect_aresetn
END

BEGIN axi_emc
 PARAMETER INSTANCE = Flash
 PARAMETER HW_VER = 1.03.a
 PARAMETER C_MAX_MEM_WIDTH = 16
 PARAMETER C_MEM0_WIDTH = 16
 PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_0 = 1
 PARAMETER C_MEM0_TYPE = 5
 PARAMETER C_TCEDV_PS_MEM_0 = 110000
 PARAMETER C_TAVDV_PS_MEM_0 = 110000
 PARAMETER C_THZCE_PS_MEM_0 = 35000
 PARAMETER C_THZOE_PS_MEM_0 = 15000
 PARAMETER C_TWC_PS_MEM_0 = 11000
 PARAMETER C_TWP_PS_MEM_0 = 70000
 PARAMETER C_TLZWE_PS_MEM_0 = 35000
 PARAMETER C_S_AXI_MEM_ID_WIDTH = 1
 PARAMETER C_S_AXI_MEM_PROTOCOL = axi4lite
 PARAMETER C_S_AXI_MEM0_BASEADDR = 0xa0000000
 PARAMETER C_S_AXI_MEM0_HIGHADDR = 0xa3ffffff
 BUS_INTERFACE S_AXI_MEM = AXI_Lite
 PORT RdClk = clk_100_0000MHzMMCM0
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0
# PORT Mem_A = fpga_0_FLASH_Mem_A_split
 PORT Mem_A = 0b000000 & fpga_0_FLASH_Mem_A & 0b0
 PORT Mem_WEN = Flash_Mem_WEN
 PORT Mem_DQ = Flash_Mem_DQ
 PORT Mem_CEN = Flash_Mem_CEN
 PORT Mem_OEN = Flash_Mem_OEN
 PORT Mem_ADV_LDN = Flash_Mem_ADV_LDN
END

# BEGIN util_bus_split
# PARAMETER INSTANCE = FLASH_util_bus_split_0
# PARAMETER HW_VER = 1.00.a
# PARAMETER C_SIZE_IN = 32
# PARAMETER C_LEFT_POS = 6
# PARAMETER C_SPLIT = 31
# PORT Sig = fpga_0_FLASH_Mem_A_split
# PORT Out1 = fpga_0_FLASH_Mem_A
# END
BEGIN util_vector_logic
 PARAMETER INSTANCE = util_vector_logic_0
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_OPERATION = not
 PARAMETER C_SIZE = 1
 PORT Op1 = sys_periph_reset
 PORT Res = nflash_rst
END

BEGIN axi_ethernet                                                  ##{ETHERNET port :: in_use}
 PARAMETER INSTANCE = Hard_Ethernet_MAC                             ##{ETHERNET port :: in_use}
 PARAMETER HW_VER = 3.00.a                                          ##{ETHERNET port :: in_use}
 PARAMETER C_TYPE = 2                                               ##{ETHERNET port :: in_use}
 PARAMETER C_PHY_TYPE = 5                                           ##{ETHERNET port :: in_use}
 PARAMETER C_TXMEM = 16384                                          ##{ETHERNET port :: in_use}
 PARAMETER C_RXMEM = 16384                                          ##{ETHERNET port :: in_use}
 PARAMETER C_TXCSUM = 2                                             ##{ETHERNET port :: in_use}
 PARAMETER C_RXCSUM = 2                                             ##{ETHERNET port :: in_use}
 PARAMETER C_PHYADDR = 0b10111                                      ##{ETHERNET port :: in_use}
 PARAMETER C_BASEADDR = 0x81c00000                                  ##{ETHERNET port :: in_use}
 PARAMETER C_HIGHADDR = 0x81c7ffff                                  ##{ETHERNET port :: in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                     ##{ETHERNET port :: in_use}
 BUS_INTERFACE AXI_STR_TXC = ETHERNET_dma_txc                       ##{ETHERNET port :: Only_EMAC0_CCE_in_use}
 BUS_INTERFACE AXI_STR_TXD = ETHERNET_dma_txd                       ##{ETHERNET port :: Only_EMAC0_CCE_in_use}
 BUS_INTERFACE AXI_STR_RXD = ETHERNET_dma_rxd                       ##{ETHERNET port :: Only_EMAC0_CCE_in_use}
 BUS_INTERFACE AXI_STR_RXS = ETHERNET_dma_rxs                       ##{ETHERNET port :: Only_EMAC0_CCE_in_use}
 BUS_INTERFACE AXI_STR_RXS = Hard_Ethernet_MAC_AXI_STR_RXS          ##{ETHERNET port :: Full_EMAC0_in_use}
 BUS_INTERFACE AXI_STR_RXD = Hard_Ethernet_MAC_AXI_STR_RXD          ##{ETHERNET port :: Full_EMAC0_in_use}
 BUS_INTERFACE AXI_STR_TXC = axi_rtdex_eth_AXI_STR_EMAC_RXS         ##{ETHERNET port :: Full_EMAC0_in_use}
 BUS_INTERFACE AXI_STR_TXD = axi_rtdex_eth_AXI_STR_EMAC_RXD         ##{ETHERNET port :: Full_EMAC0_in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                             ##{ETHERNET port :: in_use}
 PORT PHY_RST_N = axi_ethernet_0_PHY_RST_N                          ##{ETHERNET port :: in_use}
 PORT MGT_CLK_P = axi_ethernet_0_MGT_CLK_P                          ##{ETHERNET port :: in_use}
 PORT MGT_CLK_N = axi_ethernet_0_MGT_CLK_N                          ##{ETHERNET port :: in_use}
 PORT TXP = axi_ethernet_0_TXP                                      ##{ETHERNET port :: in_use}
 PORT TXN = axi_ethernet_0_TXN                                      ##{ETHERNET port :: in_use}
 PORT RXP = axi_ethernet_0_RXP                                      ##{ETHERNET port :: in_use}
 PORT RXN = axi_ethernet_0_RXN                                      ##{ETHERNET port :: in_use}
# PORT MDC = axi_ethernet_0_MDC                                     ##{ETHERNET port :: in_use}
# PORT MDIO = axi_ethernet_0_MDIO                                   ##{ETHERNET port :: in_use}
 PORT INTERRUPT = Hard_Ethernet_MAC_INTERRUPT                       ##{ETHERNET port :: in_use}
 PORT AXI_STR_TXC_ACLK = clk_100_0000MHzMMCM0                       ##{ETHERNET port :: in_use}
 PORT AXI_STR_TXD_ACLK = clk_100_0000MHzMMCM0                       ##{ETHERNET port :: in_use}
 PORT AXI_STR_RXS_ACLK = clk_100_0000MHzMMCM0                       ##{ETHERNET port :: in_use}
 PORT AXI_STR_RXD_ACLK = clk_100_0000MHzMMCM0                       ##{ETHERNET port :: in_use}
END                                                                 ##{ETHERNET port :: in_use}

BEGIN axi_dma                                                       ##{ETHERNET port :: in_use}
 PARAMETER INSTANCE = Ethernet_DMA                                  ##{ETHERNET port :: in_use}
 PARAMETER HW_VER = 5.00.a                                          ##{ETHERNET port :: in_use}
 PARAMETER C_INCLUDE_MM2S_DRE = 1                                   ##{ETHERNET port :: in_use}
 PARAMETER C_MM2S_BURST_SIZE = 256                                  ##{ETHERNET port :: in_use}
 PARAMETER C_INCLUDE_S2MM_DRE = 1                                   ##{ETHERNET port :: in_use}
 PARAMETER C_S2MM_BURST_SIZE = 256                                  ##{ETHERNET port :: in_use}
 PARAMETER C_SG_INCLUDE_DESC_QUEUE = 1                              ##{ETHERNET port :: in_use}
 PARAMETER C_SG_LENGTH_WIDTH = 16                                   ##{ETHERNET port :: in_use}
 PARAMETER C_DLYTMR_RESOLUTION = 1250                               ##{ETHERNET port :: in_use}
 PARAMETER C_PRMRY_IS_ACLK_ASYNC = 0                                ##{ETHERNET port :: in_use}
 PARAMETER C_BASEADDR = 0x84600000                                  ##{ETHERNET port :: in_use}
 PARAMETER C_HIGHADDR = 0x8460ffff                                  ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_SG_AW_REGISTER = 1                  ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_SG_AR_REGISTER = 1                  ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_MM2S_AW_REGISTER = 1                ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_MM2S_AR_REGISTER = 1                ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_S2MM_AW_REGISTER = 1                ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_S2MM_AR_REGISTER = 1                ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_SG_W_REGISTER = 1                   ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_SG_R_REGISTER = 1                   ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_SG_B_REGISTER = 1                   ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_MM2S_W_REGISTER = 1                 ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_MM2S_R_REGISTER = 1                 ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_MM2S_B_REGISTER = 1                 ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_S2MM_W_REGISTER = 1                 ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_S2MM_R_REGISTER = 1                 ##{ETHERNET port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_S2MM_B_REGISTER = 1                 ##{ETHERNET port :: in_use}
 BUS_INTERFACE S_AXI_LITE = AXI_Lite_0x8                            ##{ETHERNET port :: in_use}
 BUS_INTERFACE M_AXI_SG = AXI_MM                                    ##{ETHERNET port :: in_use}
 BUS_INTERFACE M_AXI_MM2S = AXI_MM                                  ##{ETHERNET port :: in_use}
 BUS_INTERFACE M_AXI_S2MM = AXI_MM                                  ##{ETHERNET port :: in_use}
 BUS_INTERFACE M_AXIS_MM2S_CNTRL = ETHERNET_dma_txc                 ##{ETHERNET port :: Only_EMAC0_CCE_in_use}
 BUS_INTERFACE M_AXIS_MM2S = ETHERNET_dma_txd                       ##{ETHERNET port :: Only_EMAC0_CCE_in_use}
 BUS_INTERFACE S_AXIS_S2MM = ETHERNET_dma_rxd                       ##{ETHERNET port :: Only_EMAC0_CCE_in_use}
 BUS_INTERFACE S_AXIS_S2MM_STS = ETHERNET_dma_rxs                   ##{ETHERNET port :: Only_EMAC0_CCE_in_use}
 BUS_INTERFACE M_AXIS_MM2S_CNTRL = Ethernet_DMA_M_AXIS_MM2S_CNTRL   ##{ETHERNET port :: Full_EMAC0_in_use}
 BUS_INTERFACE M_AXIS_MM2S = Ethernet_DMA_M_AXIS_MM2S               ##{ETHERNET port :: Full_EMAC0_in_use}
 BUS_INTERFACE S_AXIS_S2MM = axi_rtdex_eth_AXI_STR_EDMA_RXD         ##{ETHERNET port :: Full_EMAC0_in_use}
 BUS_INTERFACE S_AXIS_S2MM_STS = axi_rtdex_eth_AXI_STR_EDMA_RXS     ##{ETHERNET port :: Full_EMAC0_in_use}
 PORT s_axi_lite_aclk = clk_100_0000MHzMMCM0                        ##{ETHERNET port :: in_use}
 PORT m_axi_sg_aclk = clk_100_0000MHzMMCM0                          ##{ETHERNET port :: in_use}
 PORT m_axi_mm2s_aclk = clk_100_0000MHzMMCM0                        ##{ETHERNET port :: in_use}
 PORT m_axi_s2mm_aclk = clk_100_0000MHzMMCM0                        ##{ETHERNET port :: in_use}
 PORT mm2s_introut = Ethernet_DMA_mm2s_introut                      ##{ETHERNET port :: in_use}
 PORT s2mm_introut = Ethernet_DMA_s2mm_introut                      ##{ETHERNET port :: in_use}
END                                                                 ##{ETHERNET port :: in_use}

BEGIN axi_intc
 PARAMETER INSTANCE = irq_Ctlr
 PARAMETER HW_VER = 1.01.a
 PARAMETER C_BASEADDR = 0x81800000
 PARAMETER C_HIGHADDR = 0x8180ffff
 BUS_INTERFACE S_AXI = AXI_Lite_0x8
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0
 PORT Intr = sys_reset & sys_reset & sys_reset & fp_uart_Interrupt & debug_module_Interrupt & Ethernet_DMA_mm2s_introut & Ethernet_DMA_s2mm_introut & Hard_Ethernet_MAC_INTERRUPT & axi_timer_0_Interrupt                                 ##{CCE port :: Only_EMAC0_CCE_in_use}
 PORT Intr = rtdexMbIrq_s & PCIe_interrupt_out & sys_reset & fp_uart_Interrupt & debug_module_Interrupt & Ethernet_DMA_mm2s_introut & Ethernet_DMA_s2mm_introut & Hard_Ethernet_MAC_INTERRUPT & axi_timer_0_Interrupt         ##{CCE port :: EMAC0_and_PCIe_without_CDMA_in_use}
 PORT Intr = rtdexMbIrq_s & PCIe_interrupt_out & cdmaMsi_s & fp_uart_Interrupt & debug_module_Interrupt & Ethernet_DMA_mm2s_introut & Ethernet_DMA_s2mm_introut & Hard_Ethernet_MAC_INTERRUPT & axi_timer_0_Interrupt   ##{CCE port :: EMAC0_and_PCIe_with_CDMA_in_use}
 PORT Intr = rtdexMbIrq_s & PCIe_interrupt_out & sys_reset & fp_uart_Interrupt & debug_module_Interrupt & sys_reset & sys_reset & sys_reset & axi_timer_0_Interrupt                                                                             ##{CCE port :: Only_PCIe_without_CDMA_in_use}
 PORT Intr = rtdexMbIrq_s & PCIe_interrupt_out & cdmaMsi_s & fp_uart_Interrupt & debug_module_Interrupt & sys_reset & sys_reset & sys_reset & axi_timer_0_Interrupt                                                                       ##{CCE port :: Only_PCIe_with_CDMA_in_use}
 PORT Irq = Interrupt_Cntlr_Irq
END

BEGIN axi_timer
 PARAMETER INSTANCE = timer
 PARAMETER HW_VER = 1.03.a
 PARAMETER C_BASEADDR = 0x83c00000
 PARAMETER C_HIGHADDR = 0x83c0ffff
 BUS_INTERFACE S_AXI = AXI_Lite_0x8
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0
 PORT Interrupt = axi_timer_0_Interrupt
END

# BEGIN axi_uartlite
# PARAMETER INSTANCE = ipmi_uart
# PARAMETER HW_VER = 1.02.a
# PARAMETER C_ODD_PARITY = 1
# PARAMETER C_BASEADDR = 0x84100000
# PARAMETER C_HIGHADDR = 0x8410ffff
# BUS_INTERFACE S_AXI = AXI_Lite_0x8
# PORT S_AXI_ACLK = clk_100_0000MHzMMCM0
# PORT RX = impi_uart_RX
# PORT TX = impi_uart_TX
# PORT Interrupt = ipmi_uart_Interrupt
# END
BEGIN axi_v6_ddrx
 PARAMETER INSTANCE = DDR3_SDRAM
 PARAMETER HW_VER = 1.05.a
 PARAMETER C_MEM_PARTNO = MT41J128M8XX-15E
 PARAMETER C_DM_WIDTH = 1
 PARAMETER C_DQS_WIDTH = 1
 PARAMETER C_ROW_WIDTH = 14
 PARAMETER C_DQ_WIDTH = 8
 PARAMETER C_RTT_NOM = 60
 PARAMETER C_OUTPUT_DRV = LOW
 PARAMETER C_MMCM_EXT_LOC = MMCM_ADV_X0Y10
 PARAMETER C_INTERCONNECT_S_AXI_MASTERS = main_cpu.M_AXI_DC & main_cpu.M_AXI_IC                                                                                   ##{ETHERNET port :: unused}
 PARAMETER C_INTERCONNECT_S_AXI_MASTERS = Ethernet_DMA.M_AXI_SG & Ethernet_DMA.M_AXI_MM2S & Ethernet_DMA.M_AXI_S2MM & main_cpu.M_AXI_DC & main_cpu.M_AXI_IC       ##{ETHERNET port :: in_use}
 PARAMETER C_IODELAY_GRP = DUAL_DDR3
 PARAMETER C_S_AXI_BASEADDR = 0x90000000
 PARAMETER C_S_AXI_HIGHADDR = 0x97ffffff
 PARAMETER C_INTERCONNECT_S_AXI_AW_REGISTER = 1
 PARAMETER C_INTERCONNECT_S_AXI_AR_REGISTER = 1
 PARAMETER C_INTERCONNECT_S_AXI_W_REGISTER = 1
 PARAMETER C_INTERCONNECT_S_AXI_R_REGISTER = 1
 PARAMETER C_INTERCONNECT_S_AXI_B_REGISTER = 1
 BUS_INTERFACE S_AXI = AXI_MM
 PORT clk = clk_200_0000MHzMMCM0
 PORT ddr_addr = axi_v6_ddrx_0_ddr_addr
 PORT ddr_ba = axi_v6_ddrx_0_ddr_ba
 PORT ddr_cas_n = axi_v6_ddrx_0_ddr_cas_n
 PORT ddr_ck_p = axi_v6_ddrx_0_ddr_ck_p
 PORT ddr_ck_n = axi_v6_ddrx_0_ddr_ck_n
 PORT ddr_cke = axi_v6_ddrx_0_ddr_cke
 PORT ddr_cs_n = axi_v6_ddrx_0_ddr_cs_n
 PORT ddr_dm = axi_v6_ddrx_0_ddr_dm
 PORT ddr_odt = axi_v6_ddrx_0_ddr_odt
 PORT ddr_ras_n = axi_v6_ddrx_0_ddr_ras_n
 PORT ddr_reset_n = axi_v6_ddrx_0_ddr_reset_n
 PORT ddr_parity = axi_v6_ddrx_0_ddr_parity
 PORT ddr_we_n = axi_v6_ddrx_0_ddr_we_n
 PORT ddr_dq = axi_v6_ddrx_0_ddr_dq
 PORT ddr_dqs_p = axi_v6_ddrx_0_ddr_dqs_p
 PORT ddr_dqs_n = axi_v6_ddrx_0_ddr_dqs_n
 PORT clk_mem = clk_400_0000MHzMMCM0
 PORT clk_rd_base = clk_400_0000MHzMMCM0_nobuf_varphase
 PORT clk_ref = clk_200_0000MHzMMCM0
 PORT pd_PSEN = DDR3_SDRAM_pd_PSEN
 PORT pd_PSINCDEC = DDR3_SDRAM_pd_PSINCDEC
 PORT pd_PSDONE = clock_generator_0_PSDONE
 PORT iodelay_ctrl_rdy_o = IoDelayCtrlRdy_s
 PORT phy_init_done = DDR3_SDRAM_phy_init_done_0
END

BEGIN axi_timebase_wdt
 PARAMETER INSTANCE = watchdog
 PARAMETER HW_VER = 1.01.a
 PARAMETER C_BASEADDR = 0x83600000
 PARAMETER C_HIGHADDR = 0x8360ffff
 BUS_INTERFACE S_AXI = AXI_Lite_0x8
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0
 PORT WDT_Reset = axi_timebase_wdt_0_WDT_Reset
END

BEGIN lyt_axi_perseus6010_regs
 PARAMETER INSTANCE = axi_perseus6010_regs
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_BASEADDR = 0x70000000
 PARAMETER C_HIGHADDR = 0x7000ffff
 BUS_INTERFACE S_AXI = AXI_Lite_0x7
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0
 PORT o_nFpgaProg_p = axi_perseus6010_regs_o_nFpgaProg_p
 PORT i_DaughterIoAbsent_p = DaughterIoAbsent_s
 PORT ov2_UartSelectMode_p = v2_UartSelectMode_s
 PORT i_FmcAbsent_p = FmcAbsent_s
 PORT o_CtrlTclkdTxEn_p = CtrlTclkdTxEn_s
 PORT o_CtrlTclkdRxDis_p = CtrlTclkdRxDis_s
 PORT o_CtrlAmctclkc2Fmcclk3En_p = CtrlAmctclkc2Fmcclk3En_s
 PORT o_CtrlAmctclka2Fmcclk2En_p = CtrlAmctclka2Fmcclk2En_s
 PORT o_CtrlFclkaHighz_p = CtrlFclkaHighz_s
 PORT o_Ctrl100mhzOutEn_p = Ctrl100mhzOutEn_s
 PORT o_CtrlTclkcTxEn_p = CtrlTclkcTxEn_s
 PORT o_CtrlTclkcRxDis_p = CtrlTclkcRxDis_s
 PORT o_CtrlTclkbTxEn_p = CtrlTclkbTxEn_s
 PORT o_CtrlTclkbRxDis_p = CtrlTclkbRxDis_s
 PORT o_CtrlTclkaTxEn_p = CtrlTclkaTxEn_s
 PORT o_CtrlTclkaRxDis_p = CtrlTclkaRxDis_s
 PORT o_CtrlFmcclk12AmctclkdEn_p = CtrlFmcclk12AmctclkdEn_s
 PORT o_CtrlFmcclk02AmctclkbEn_p = CtrlFmcclk02AmctclkbEn_s
 PORT ov2_CtrlVadjSel_p = v2_CtrlVadjSel_s
 PORT o_CtrlVadjEn_p = CtrlVadjEn_s
 PORT o_CtrlLedBufOd_p = CtrlLedBufOd_s
 PORT i_Ddr3CceInitDone_p = DDR3_SDRAM_phy_init_done_0
 PORT ov8_nCtrlLedRed_p = v8_nCtrlLedRed_s
 PORT ov8_nCtrlLedGrn_p = v8_nCtrlLedGrn_s
 PORT i_MmcI2cReleaseAck_p = MmcI2cReleaseAck_s
 PORT o_MmcI2cReleaseReq_p = MmcI2cReleaseReq_s
 PORT i_FmcStackAbsent_p = FmcStackAbsent_s

 PORT i_PciePresent_p = net_vcc                                                 ##{PCIE port :: in_use}
 PORT i_PciePresent_p = net_gnd                                                 ##{PCIE port :: unused}
 PORT i_PcieDcmLocked_p = PCIe_mmcm_lock                                        ##{PCIE port :: in_use}
 PORT i_PcieDcmLocked_p = net_gnd                                               ##{PCIE port :: unused}
 PORT o_PcieMsi_p = rtdexPcieMsi_s                                              ##{PCIE port :: in_use}

 PORT iv32_Aurora_CoreId47_p = v32_Aurora4_7_CoreID_s                          ##{AURORA port :: 4_7_in_use}
 PORT ov32_Aurora_Ctrl47_p = iv32_Aurora4_7_Reg0_Control_s                     ##{AURORA port :: 4_7_in_use}
 PORT iv32_Aurora_Ctrl47_p = ov32_Aurora4_7_Reg0_Control_s                     ##{AURORA port :: 4_7_in_use}
 PORT iv32_Aurora_RxDataCnt47_p = v32_Aurora4_7_Reg1_Receive_Count_s           ##{AURORA port :: 4_7_in_use}
 PORT iv32_Aurora_TxDataCnt47_p = v32_Aurora4_7_Reg2_Transmit_Count_s          ##{AURORA port :: 4_7_in_use}
 PORT iv32_Aurora_CoreId811_p = v32_Aurora8_11_CoreID_s                        ##{AURORA port :: 8_11_in_use}
 PORT ov32_Aurora_Ctrl811_p = iv32_Aurora8_11_Reg0_Control_s                   ##{AURORA port :: 8_11_in_use}
 PORT iv32_Aurora_Ctrl811_p = ov32_Aurora8_11_Reg0_Control_s                   ##{AURORA port :: 8_11_in_use}
 PORT iv32_Aurora_RxDataCnt811_p = v32_Aurora8_11_Reg1_Receive_Count_s         ##{AURORA port :: 8_11_in_use}
 PORT iv32_Aurora_TxDataCnt811_p = v32_Aurora8_11_Reg2_Transmit_Count_s        ##{AURORA port :: 8_11_in_use}
 PORT iv32_Aurora_CoreId1720_p = v32_Aurora17_20_CoreID_s                      ##{AURORA port :: 17_20_in_use}
 PORT ov32_Aurora_Ctrl1720_p = iv32_Aurora17_20_Reg0_Control_s                 ##{AURORA port :: 17_20_in_use}
 PORT iv32_Aurora_Ctrl1720_p = ov32_Aurora17_20_Reg0_Control_s                 ##{AURORA port :: 17_20_in_use}
 PORT iv32_Aurora_RxDataCnt1720_p = v32_Aurora17_20_Reg1_Receive_Count_s       ##{AURORA port :: 17_20_in_use}
 PORT iv32_Aurora_TxDataCnt1720_p = v32_Aurora17_20_Reg2_Transmit_Count_s      ##{AURORA port :: 17_20_in_use}

 PORT iv32_CustomReg0_p  = v32_CustomReg0wr_s                                   ##{CUSTOM_REG port :: reg0_wr_in_use}
 PORT ov32_CustomReg0_p  = v32_CustomReg0rd_s                                   ##{CUSTOM_REG port :: reg0_rd_in_use}
 PORT iv32_CustomReg1_p  = v32_CustomReg1wr_s                                   ##{CUSTOM_REG port :: reg1_wr_in_use}
 PORT ov32_CustomReg1_p  = v32_CustomReg1rd_s                                   ##{CUSTOM_REG port :: reg1_rd_in_use}
 PORT iv32_CustomReg2_p  = v32_CustomReg2wr_s                                   ##{CUSTOM_REG port :: reg2_wr_in_use}
 PORT ov32_CustomReg2_p  = v32_CustomReg2rd_s                                   ##{CUSTOM_REG port :: reg2_rd_in_use}
 PORT iv32_CustomReg3_p  = v32_CustomReg3wr_s                                   ##{CUSTOM_REG port :: reg3_wr_in_use}
 PORT ov32_CustomReg3_p  = v32_CustomReg3rd_s                                   ##{CUSTOM_REG port :: reg3_rd_in_use}
 PORT iv32_CustomReg4_p  = v32_CustomReg4wr_s                                   ##{CUSTOM_REG port :: reg4_wr_in_use}
 PORT ov32_CustomReg4_p  = v32_CustomReg4rd_s                                   ##{CUSTOM_REG port :: reg4_rd_in_use}
 PORT iv32_CustomReg5_p  = v32_CustomReg5wr_s                                   ##{CUSTOM_REG port :: reg5_wr_in_use}
 PORT ov32_CustomReg5_p  = v32_CustomReg5rd_s                                   ##{CUSTOM_REG port :: reg5_rd_in_use}
 PORT iv32_CustomReg6_p  = v32_CustomReg6wr_s                                   ##{CUSTOM_REG port :: reg6_wr_in_use}
 PORT ov32_CustomReg6_p  = v32_CustomReg6rd_s                                   ##{CUSTOM_REG port :: reg6_rd_in_use}
 PORT iv32_CustomReg7_p  = v32_CustomReg7wr_s                                   ##{CUSTOM_REG port :: reg7_wr_in_use}
 PORT ov32_CustomReg7_p  = v32_CustomReg7rd_s                                   ##{CUSTOM_REG port :: reg7_rd_in_use}
 PORT iv32_CustomReg8_p  = v32_CustomReg8wr_s                                   ##{CUSTOM_REG port :: reg8_wr_in_use}
 PORT ov32_CustomReg8_p  = v32_CustomReg8rd_s                                   ##{CUSTOM_REG port :: reg8_rd_in_use}
 PORT iv32_CustomReg9_p  = v32_CustomReg9wr_s                                   ##{CUSTOM_REG port :: reg9_wr_in_use}
 PORT ov32_CustomReg9_p  = v32_CustomReg9rd_s                                   ##{CUSTOM_REG port :: reg9_rd_in_use}
 PORT iv32_CustomReg10_p = v32_CustomReg10wr_s                                  ##{CUSTOM_REG port :: reg10_wr_in_use}
 PORT ov32_CustomReg10_p = v32_CustomReg10rd_s                                  ##{CUSTOM_REG port :: reg10_rd_in_use}
 PORT iv32_CustomReg11_p = v32_CustomReg11wr_s                                  ##{CUSTOM_REG port :: reg11_wr_in_use}
 PORT ov32_CustomReg11_p = v32_CustomReg11rd_s                                  ##{CUSTOM_REG port :: reg11_rd_in_use}
 PORT iv32_CustomReg12_p = v32_CustomReg12wr_s                                  ##{CUSTOM_REG port :: reg12_wr_in_use}
 PORT ov32_CustomReg12_p = v32_CustomReg12rd_s                                  ##{CUSTOM_REG port :: reg12_rd_in_use}
 PORT iv32_CustomReg13_p = v32_CustomReg13wr_s                                  ##{CUSTOM_REG port :: reg13_wr_in_use}
 PORT ov32_CustomReg13_p = v32_CustomReg13rd_s                                  ##{CUSTOM_REG port :: reg13_rd_in_use}
 PORT iv32_CustomReg14_p = v32_CustomReg14wr_s                                  ##{CUSTOM_REG port :: reg14_wr_in_use}
 PORT ov32_CustomReg14_p = v32_CustomReg14rd_s                                  ##{CUSTOM_REG port :: reg14_rd_in_use}
 PORT iv32_CustomReg15_p = v32_CustomReg15wr_s                                  ##{CUSTOM_REG port :: reg15_wr_in_use}
 PORT ov32_CustomReg15_p = v32_CustomReg15rd_s                                  ##{CUSTOM_REG port :: reg15_rd_in_use}
 PORT iv32_CustomReg16_p = v32_CustomReg16wr_s                                  ##{CUSTOM_REG port :: reg16_wr_in_use}
 PORT ov32_CustomReg16_p = v32_CustomReg16rd_s                                  ##{CUSTOM_REG port :: reg16_rd_in_use}
 PORT iv32_CustomReg17_p = v32_CustomReg17wr_s                                  ##{CUSTOM_REG port :: reg17_wr_in_use}
 PORT ov32_CustomReg17_p = v32_CustomReg17rd_s                                  ##{CUSTOM_REG port :: reg17_rd_in_use}
 PORT iv32_CustomReg18_p = v32_CustomReg18wr_s                                  ##{CUSTOM_REG port :: reg18_wr_in_use}
 PORT ov32_CustomReg18_p = v32_CustomReg18rd_s                                  ##{CUSTOM_REG port :: reg18_rd_in_use}
 PORT iv32_CustomReg19_p = v32_CustomReg19wr_s                                  ##{CUSTOM_REG port :: reg19_wr_in_use}
 PORT ov32_CustomReg19_p = v32_CustomReg19rd_s                                  ##{CUSTOM_REG port :: reg19_rd_in_use}
 PORT iv32_CustomReg20_p = v32_CustomReg20wr_s                                  ##{CUSTOM_REG port :: reg20_wr_in_use}
 PORT ov32_CustomReg20_p = v32_CustomReg20rd_s                                  ##{CUSTOM_REG port :: reg20_rd_in_use}
 PORT iv32_CustomReg21_p = v32_CustomReg21wr_s                                  ##{CUSTOM_REG port :: reg21_wr_in_use}
 PORT ov32_CustomReg21_p = v32_CustomReg21rd_s                                  ##{CUSTOM_REG port :: reg21_rd_in_use}
 PORT iv32_CustomReg22_p = v32_CustomReg22wr_s                                  ##{CUSTOM_REG port :: reg22_wr_in_use}
 PORT ov32_CustomReg22_p = v32_CustomReg22rd_s                                  ##{CUSTOM_REG port :: reg22_rd_in_use}
 PORT iv32_CustomReg23_p = v32_CustomReg23wr_s                                  ##{CUSTOM_REG port :: reg23_wr_in_use}
 PORT ov32_CustomReg23_p = v32_CustomReg23rd_s                                  ##{CUSTOM_REG port :: reg23_rd_in_use}
 PORT iv32_CustomReg24_p = v32_CustomReg24wr_s                                  ##{CUSTOM_REG port :: reg24_wr_in_use}
 PORT ov32_CustomReg24_p = v32_CustomReg24rd_s                                  ##{CUSTOM_REG port :: reg24_rd_in_use}
 PORT iv32_CustomReg25_p = v32_CustomReg25wr_s                                  ##{CUSTOM_REG port :: reg25_wr_in_use}
 PORT ov32_CustomReg25_p = v32_CustomReg25rd_s                                  ##{CUSTOM_REG port :: reg25_rd_in_use}
 PORT iv32_CustomReg26_p = v32_CustomReg26wr_s                                  ##{CUSTOM_REG port :: reg26_wr_in_use}
 PORT ov32_CustomReg26_p = v32_CustomReg26rd_s                                  ##{CUSTOM_REG port :: reg26_rd_in_use}
 PORT iv32_CustomReg27_p = v32_CustomReg27wr_s                                  ##{CUSTOM_REG port :: reg27_wr_in_use}
 PORT ov32_CustomReg27_p = v32_CustomReg27rd_s                                  ##{CUSTOM_REG port :: reg27_rd_in_use}
 PORT iv32_CustomReg28_p = v32_CustomReg28wr_s                                  ##{CUSTOM_REG port :: reg28_wr_in_use}
 PORT ov32_CustomReg28_p = v32_CustomReg28rd_s                                  ##{CUSTOM_REG port :: reg28_rd_in_use}
 PORT iv32_CustomReg29_p = v32_CustomReg29wr_s                                  ##{CUSTOM_REG port :: reg29_wr_in_use}
 PORT ov32_CustomReg29_p = v32_CustomReg29rd_s                                  ##{CUSTOM_REG port :: reg29_rd_in_use}
 PORT iv32_CustomReg30_p = v32_CustomReg30wr_s                                  ##{CUSTOM_REG port :: reg30_wr_in_use}
 PORT ov32_CustomReg30_p = v32_CustomReg30rd_s                                  ##{CUSTOM_REG port :: reg30_rd_in_use}
 PORT iv32_CustomReg31_p = v32_CustomReg31wr_s                                  ##{CUSTOM_REG port :: reg31_wr_in_use}
 PORT ov32_CustomReg31_p = v32_CustomReg31rd_s                                  ##{CUSTOM_REG port :: reg31_rd_in_use}

 PORT iv32_PPSSYNC_CoreIdVers_p = pps_sync_ov32_CoreIdVers_p					##{RADIO420X port :: in_use}
 PORT ov32_PPSSYNC_FmcClkVal_p = axi_perseus6010_regs_ov32_PPSSYNC_FmcClkVal_p	##{RADIO420X port :: in_use}
 PORT o_PPSSYNC_CoreReset_p = axi_perseus6010_regs_o_PPSSYNC_CoreReset_p		##{RADIO420X port :: in_use}
 PORT o_PPSSYNC_RstUponRead_p = axi_perseus6010_regs_o_PPSSYNC_RstUponRead_p	##{RADIO420X port :: in_use}
 PORT o_PPSSYNC_RstAcc_p = axi_perseus6010_regs_o_PPSSYNC_RstAcc_p				##{RADIO420X port :: in_use}
 PORT o_PPSSYNC_CoreEnable_p = axi_perseus6010_regs_o_PPSSYNC_CoreEnable_p		##{RADIO420X port :: in_use}
 PORT o_PPSSYNC_DiffAccRead_p = axi_perseus6010_regs_o_PPSSYNC_DiffAccRead_p	##{RADIO420X port :: in_use}
 PORT iv32_PPSSYNC_PpsCnt_p = pps_sync_ov32_PpsCnt_p							##{RADIO420X port :: in_use}
 PORT iv32_PPSSYNC_DiffAcc_p = pps_sync_ov32_DiffAcc_p							##{RADIO420X port :: in_use}

 PORT iv32_PPSSYNC_CoreIdVers_p = pps_sync_ov32_CoreIdVers_p					##{ADAC250 port :: in_use}
 PORT ov32_PPSSYNC_FmcClkVal_p = axi_perseus6010_regs_ov32_PPSSYNC_FmcClkVal_p	##{ADAC250 port :: in_use}
 PORT o_PPSSYNC_CoreReset_p = axi_perseus6010_regs_o_PPSSYNC_CoreReset_p		##{ADAC250 port :: in_use}
 PORT o_PPSSYNC_RstUponRead_p = axi_perseus6010_regs_o_PPSSYNC_RstUponRead_p	##{ADAC250 port :: in_use}
 PORT o_PPSSYNC_RstAcc_p = axi_perseus6010_regs_o_PPSSYNC_RstAcc_p				##{ADAC250 port :: in_use}
 PORT o_PPSSYNC_CoreEnable_p = axi_perseus6010_regs_o_PPSSYNC_CoreEnable_p		##{ADAC250 port :: in_use}
 PORT o_PPSSYNC_DiffAccRead_p = axi_perseus6010_regs_o_PPSSYNC_DiffAccRead_p	##{ADAC250 port :: in_use}
 PORT iv32_PPSSYNC_PpsCnt_p = pps_sync_ov32_PpsCnt_p							##{ADAC250 port :: in_use}
 PORT iv32_PPSSYNC_DiffAcc_p = pps_sync_ov32_DiffAcc_p							##{ADAC250 port :: in_use}

 PORT iv32_lvds0_coreid_p = mestor_lvds_ov32_lvds0_coreid_s                     ##{LVDS port :: lvds_gpio_0_in_use}
 PORT ov32_lvds0_ctrl_p = mestor_lvds_iv32_lvds0_ctrl_s                         ##{LVDS port :: lvds_gpio_0_in_use}
 PORT iv32_lvds0_value_p = mestor_lvds_ov32_lvds0_value_s                       ##{LVDS port :: lvds_gpio_0_in_use}
 PORT ov32_lvds0_value_p = mestor_lvds_iv32_lvds0_value_s                       ##{LVDS port :: lvds_gpio_0_in_use}
 PORT ov32_lvds0_oe_p = mestor_lvds_iv32_lvds0_oe_s                             ##{LVDS port :: lvds_gpio_0_in_use}
 PORT iv32_lvds0_coreid_p = mestor_lvds_ov32_lvds0_coreid_s                     ##{LVDS port :: lvds_sync_0_in_use}
 PORT ov32_lvds0_ctrl_p = mestor_lvds_iv32_lvds0_ctrl_s                         ##{LVDS port :: lvds_sync_0_in_use}
 PORT ov32_lvds0_oe_p = mestor_lvds_iv32_lvds0_oe_s                             ##{LVDS port :: lvds_sync_0_in_use}

 PORT iv32_lvds1_coreid_p = mestor_lvds_ov32_lvds1_coreid_s                     ##{LVDS port :: lvds_gpio_1_in_use}
 PORT ov32_lvds1_ctrl_p = mestor_lvds_iv32_lvds1_ctrl_s                         ##{LVDS port :: lvds_gpio_1_in_use}
 PORT iv32_lvds1_value_p = mestor_lvds_ov32_lvds1_value_s                       ##{LVDS port :: lvds_gpio_1_in_use}
 PORT ov32_lvds1_value_p = mestor_lvds_iv32_lvds1_value_s                       ##{LVDS port :: lvds_gpio_1_in_use}
 PORT ov32_lvds1_oe_p = mestor_lvds_iv32_lvds1_oe_s                             ##{LVDS port :: lvds_gpio_1_in_use}
 PORT iv32_lvds1_coreid_p = mestor_lvds_ov32_lvds1_coreid_s                     ##{LVDS port :: lvds_sync_1_in_use}
 PORT ov32_lvds1_ctrl_p = mestor_lvds_iv32_lvds1_ctrl_s                         ##{LVDS port :: lvds_sync_1_in_use}
 PORT ov32_lvds1_oe_p = mestor_lvds_iv32_lvds1_oe_s                             ##{LVDS port :: lvds_sync_1_in_use}

 PORT iv32_lvds2_coreid_p = mestor_lvds_ov32_lvds2_coreid_s                     ##{LVDS port :: lvds_gpio_2_in_use}
 PORT ov32_lvds2_ctrl_p = mestor_lvds_iv32_lvds2_ctrl_s                         ##{LVDS port :: lvds_gpio_2_in_use}
 PORT iv32_lvds2_value_p = mestor_lvds_ov32_lvds2_value_s                       ##{LVDS port :: lvds_gpio_2_in_use}
 PORT ov32_lvds2_value_p = mestor_lvds_iv32_lvds2_value_s                       ##{LVDS port :: lvds_gpio_2_in_use}
 PORT ov32_lvds2_oe_p = mestor_lvds_iv32_lvds2_oe_s                             ##{LVDS port :: lvds_gpio_2_in_use}
 PORT iv32_lvds2_coreid_p = mestor_lvds_ov32_lvds2_coreid_s                     ##{LVDS port :: lvds_sync_2_in_use}
 PORT ov32_lvds2_ctrl_p = mestor_lvds_iv32_lvds2_ctrl_s                         ##{LVDS port :: lvds_sync_2_in_use}
 PORT ov32_lvds2_oe_p = mestor_lvds_iv32_lvds2_oe_s                             ##{LVDS port :: lvds_sync_2_in_use}

 PORT iv32_lvds3_coreid_p = mestor_lvds_ov32_lvds3_coreid_s                     ##{LVDS port :: lvds_gpio_3_in_use}
 PORT ov32_lvds3_ctrl_p = mestor_lvds_iv32_lvds3_ctrl_s                         ##{LVDS port :: lvds_gpio_3_in_use}
 PORT iv32_lvds3_value_p = mestor_lvds_ov32_lvds3_value_s                       ##{LVDS port :: lvds_gpio_3_in_use}
 PORT ov32_lvds3_value_p = mestor_lvds_iv32_lvds3_value_s                       ##{LVDS port :: lvds_gpio_3_in_use}
 PORT ov32_lvds3_oe_p = mestor_lvds_iv32_lvds3_oe_s                             ##{LVDS port :: lvds_gpio_3_in_use}
 PORT iv32_lvds3_coreid_p = mestor_lvds_ov32_lvds3_coreid_s                     ##{LVDS port :: lvds_sync_3_in_use}
 PORT ov32_lvds3_ctrl_p = mestor_lvds_iv32_lvds3_ctrl_s                         ##{LVDS port :: lvds_sync_3_in_use}
 PORT ov32_lvds3_oe_p = mestor_lvds_iv32_lvds3_oe_s                             ##{LVDS port :: lvds_sync_3_in_use}
END

BEGIN axi_iic
 PARAMETER INSTANCE = axi_iic_FMC
 PARAMETER HW_VER = 1.01.b
 PARAMETER C_S_AXI_ACLK_FREQ_HZ = 100000000
 PARAMETER C_SCL_INERTIAL_DELAY = 5
 PARAMETER C_SDA_INERTIAL_DELAY = 5
 PARAMETER C_BASEADDR = 0x81600000
 PARAMETER C_HIGHADDR = 0x8160FFFF
 BUS_INTERFACE S_AXI = AXI_Lite_0x8
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0
 PORT Gpo = axi_iic_0_Gpo
 PORT Sda = axi_iic_0_Sda
 PORT Scl = axi_iic_0_Scl
 PORT IIC2INTC_Irpt = axi_iic_FMC_IIC2INTC_Irpt
END

BEGIN axi_iic
 PARAMETER INSTANCE = IIC_DDR3
 PARAMETER HW_VER = 1.01.b
 PARAMETER C_IIC_FREQ = 100000
 PARAMETER C_TEN_BIT_ADR = 0
 PARAMETER C_BASEADDR = 0x74000000
 PARAMETER C_HIGHADDR = 0x7400ffff
 PARAMETER C_S_AXI_ACLK_FREQ_HZ = 100000000
 BUS_INTERFACE S_AXI = AXI_Lite_0x7
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0
 PORT Scl = iic_ddr3_scl_s
 PORT Sda = iic_ddr3_sda_s
END

BEGIN axi_sysmon_adc
 PARAMETER INSTANCE = axi_sysmon_adc_0
 PARAMETER HW_VER = 2.00.a
 PARAMETER C_INCLUDE_INTR = 1
 PARAMETER C_BASEADDR = 0x75000000
 PARAMETER C_HIGHADDR = 0x75000FFF
 BUS_INTERFACE S_AXI = AXI_Lite_0x7
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0
 PORT IP2INTC_Irpt = sysmon_adc_intr
END

BEGIN axi_pcie                                                                  ##{PCIE port :: in_use}
 PARAMETER INSTANCE = PCIe                                                      ##{PCIE port :: in_use}
 PARAMETER HW_VER = 1.06.a                                                      ##{PCIE port :: in_use}
 PARAMETER C_NO_OF_LANES = 4                                                    ##{PCIE port :: in_use}
 PARAMETER C_INTERRUPT_PIN = 1                                                  ##{PCIE port :: in_use}
 PARAMETER C_INCLUDE_BAROFFSET_REG = 1                                          ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_ID_WIDTH = 3                                                 ##{PCIE port :: in_use}
 PARAMETER C_CLASS_CODE = 0x058000                                              ##{PCIE port :: in_use}
 PARAMETER C_VENDOR_ID = 0x1AE2                                                 ##{PCIE port :: in_use}
 PARAMETER C_DEVICE_ID = 0x2525                                                 ##{PCIE port :: in_use}
 PARAMETER C_SUBSYSTEM_ID = 0x0007                                              ##{PCIE port :: in_use}
 PARAMETER C_SUBSYSTEM_VENDOR_ID = 0x1AE2                                       ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_NUM = 6                                                     ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_AS_0 = 1                                                    ##{PCIE port :: in_use}
 PARAMETER C_PCIE_CAP_SLOT_IMPLEMENTED = 0                                      ##{PCIE port :: in_use}
 PARAMETER C_PCIEBAR_AS = 1                                                     ##{PCIE port :: in_use}
 PARAMETER C_PCIEBAR_LEN_0 = 18                                                 ##{PCIE port :: in_use}
 PARAMETER C_PCIEBAR2AXIBAR_0 = 0x50000000                                      ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_DATA_WIDTH = 64                                              ##{PCIE port :: in_use}
 PARAMETER C_M_AXI_DATA_WIDTH = 64                                              ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_0 = 0x88000000                                              ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_HIGHADDR_0 = 0x887FFFFF                                     ##{PCIE port :: in_use}
 PARAMETER C_BASEADDR = 0x50024000                                              ##{PCIE port :: in_use}
 PARAMETER C_HIGHADDR = 0x50025FFF                                              ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_SUPPORTS_NARROW_BURST = 0                                    ##{PCIE port :: in_use}
 PARAMETER C_PCIEBAR_NUM = 2                                                    ##{PCIE port :: in_use}
 PARAMETER C_PCIEBAR_LEN_1 = 20                                                 ##{PCIE port :: in_use}
 PARAMETER C_PCIEBAR2AXIBAR_1 = 0x51000000                                      ##{PCIE port :: in_use}
 PARAMETER C_INTERCONNECT_S_AXI_MASTERS = %{axi_pcie_interconnect}              ##{PCIE port :: in_use}
 PARAMETER C_INTERCONNECT_S_AXI_CTL_MASTERS = PCIe.M_AXI                        ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_1 = 0x88800000                                              ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_HIGHADDR_1 = 0x88FFFFFF                                     ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_2 = 0x89000000                                              ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_HIGHADDR_2 = 0x897FFFFF                                     ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_3 = 0x89800000                                              ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_HIGHADDR_3 = 0x89FFFFFF                                     ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_4 = 0x8A000000                                              ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_HIGHADDR_4 = 0x8A7FFFFF                                     ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_5 = 0x8A800000                                              ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_HIGHADDR_5 = 0x8AFFFFFF                                     ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_AS_1 = 1                                                    ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_AS_2 = 1                                                    ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_AS_3 = 1                                                    ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_AS_4 = 1                                                    ##{PCIE port :: in_use}
 PARAMETER C_AXIBAR_AS_5 = 1                                                    ##{PCIE port :: in_use}
 PARAMETER C_INTERCONNECT_S_AXI_WRITE_ACCEPTANCE = 2                            ##{PCIE port :: in_use}
 PARAMETER C_INTERCONNECT_S_AXI_WRITE_FIFO_DEPTH = 512                          ##{PCIE port :: in_use}
 PARAMETER C_INTERCONNECT_S_AXI_READ_FIFO_DEPTH = 512                           ##{PCIE port :: in_use}
 PARAMETER C_INTERCONNECT_S_AXI_IS_ACLK_ASYNC = 1                               ##{PCIE port :: in_use}
 PARAMETER C_INTERCONNECT_M_AXI_IS_ACLK_ASYNC = 1                               ##{PCIE port :: in_use}
 BUS_INTERFACE S_AXI_CTL = AXI_MM_PCIe                                          ##{PCIE port :: in_use}
 BUS_INTERFACE M_AXI = AXI_MM_PCIe                                              ##{PCIE port :: in_use}
 BUS_INTERFACE S_AXI = AXI_MM_PCIe                                              ##{PCIE port :: in_use}
 PORT axi_aclk = PCIe_axi_aclk_out                                              ##{PCIE port :: in_use}
 PORT interrupt_out = PCIe_interrupt_out                                        ##{PCIE port :: in_use}
 PORT REFCLK = util_ds_buf_0_IBUF_OUT                                           ##{PCIE port :: in_use}
 PORT axi_aclk_out = PCIe_axi_aclk_out                                          ##{PCIE port :: in_use}
 PORT axi_ctl_aclk_out = PCIe_axi_ctl_aclk_out                                  ##{PCIE port :: in_use}
 PORT axi_ctl_aclk = PCIe_axi_ctl_aclk_out                                      ##{PCIE port :: in_use}
 PORT mmcm_lock = PCIe_mmcm_lock                                                ##{PCIE port :: in_use}
 PORT INTX_MSI_Request = PcieMsi_s                                              ##{PCIE port :: in_use}
 PORT pci_exp_txp = pci_txp_s                                                   ##{PCIE port :: in_use}
 PORT pci_exp_txn = pci_txn_s                                                   ##{PCIE port :: in_use}
 PORT pci_exp_rxp = pci_rxp_s                                                   ##{PCIE port :: in_use}
 PORT pci_exp_rxn = pci_rxn_s                                                   ##{PCIE port :: in_use}
END                                                                             ##{PCIE port :: in_use}
                                                                                ##{PCIE port :: in_use}
BEGIN util_ds_buf                                                               ##{PCIE port :: in_use}
 PARAMETER INSTANCE = util_ds_buf_0                                             ##{PCIE port :: in_use}
 PARAMETER HW_VER = 1.01.a                                                      ##{PCIE port :: in_use}
 PARAMETER C_BUF_TYPE = IBUFDSGTXE                                              ##{PCIE port :: in_use}
 PORT IBUF_DS_P = net_PCIe_DiffClk_P_pin                                        ##{PCIE port :: in_use}
 PORT IBUF_DS_N = net_PCIe_DiffClk_N_pin                                        ##{PCIE port :: in_use}
 PORT IBUF_OUT = util_ds_buf_0_IBUF_OUT                                         ##{PCIE port :: in_use}
END                                                                             ##{PCIE port :: in_use}
                                                                                ##{PCIE port :: in_use}
BEGIN axi_cdma                                                                  ##{PCIE port :: cdma_in_use}
 PARAMETER INSTANCE = axi_cdma_0                                                ##{PCIE port :: cdma_in_use}
 PARAMETER HW_VER = 3.02.a                                                      ##{PCIE port :: cdma_in_use}
 PARAMETER C_AXI_LITE_IS_ASYNC = 1                                              ##{PCIE port :: cdma_in_use}
 PARAMETER C_M_AXI_DATA_WIDTH = 64                                              ##{PCIE port :: cdma_in_use}
 PARAMETER C_M_AXI_MAX_BURST_LEN = 64                                           ##{PCIE port :: cdma_in_use}
 PARAMETER C_READ_ADDR_PIPE_DEPTH = 8                                           ##{PCIE port :: cdma_in_use}
 PARAMETER C_WRITE_ADDR_PIPE_DEPTH = 2                                          ##{PCIE port :: cdma_in_use}
 PARAMETER C_BASEADDR = 0x50020000                                              ##{PCIE port :: cdma_in_use}
 PARAMETER C_HIGHADDR = 0x50021fff                                              ##{PCIE port :: cdma_in_use}
 PARAMETER C_INCLUDE_SG = 1                                                     ##{PCIE port :: cdma_in_use}
 PARAMETER C_INTERCONNECT_S_AXI_LITE_MASTERS = PCIe.M_AXI                       ##{PCIE port :: cdma_in_use}
 PARAMETER C_INCLUDE_DRE = 0                                                    ##{PCIE port :: cdma_in_use}
 BUS_INTERFACE M_AXI = AXI_MM_PCIe                                              ##{PCIE port :: cdma_in_use}
 BUS_INTERFACE M_AXI_SG = AXI_MM_PCIe                                           ##{PCIE port :: cdma_in_use}
 BUS_INTERFACE S_AXI_LITE = AXI_MM_PCIe                                         ##{PCIE port :: cdma_in_use}
 PORT s_axi_lite_aclk = PCIe_axi_aclk_out                                       ##{PCIE port :: cdma_in_use}
 PORT m_axi_aclk = PCIe_axi_aclk_out                                            ##{PCIE port :: cdma_in_use}
 PORT cdma_introut = cdmaMsi_s                                                  ##{PCIE port :: cdma_in_use}
END                                                                             ##{PCIE port :: cdma_in_use}
                                                                                ##{PCIE port :: in_use}
BEGIN axi_bram_ctrl                                                             ##{PCIE port :: in_use}
 PARAMETER INSTANCE = axi_bram_ctrl_mailbox                                     ##{PCIE port :: in_use}
 PARAMETER HW_VER = 1.03.a                                                      ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_BASEADDR = 0x80100000                                        ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_HIGHADDR = 0x80100FFF                                        ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_ID_WIDTH = 1                                                 ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_PROTOCOL = AXI4LITE                                          ##{PCIE port :: in_use}
 PARAMETER C_SINGLE_PORT_BRAM = 1                                               ##{PCIE port :: in_use}
 BUS_INTERFACE S_AXI = AXI_Lite_0x8                                                 ##{PCIE port :: in_use}
 BUS_INTERFACE BRAM_PORTA = axi_bram_ctrl_0_BRAM_PORTA                          ##{PCIE port :: in_use}
 PORT S_AXI_ACLK = clk_100_0000MHzMMCM0                                         ##{PCIE port :: in_use}
END                                                                             ##{PCIE port :: in_use}
                                                                                ##{PCIE port :: in_use}
BEGIN bram_block                                                                ##{PCIE port :: in_use}
 PARAMETER INSTANCE = bram_block_mailbox                                        ##{PCIE port :: in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{PCIE port :: in_use}
 BUS_INTERFACE PORTA = axi_bram_ctrl_0_BRAM_PORTA                               ##{PCIE port :: in_use}
 BUS_INTERFACE PORTB = axi_bram_ctrl_pcie_mailbox_BRAM_PORTA                    ##{PCIE port :: in_use}
END                                                                             ##{PCIE port :: in_use}
                                                                                ##{PCIE port :: in_use}
BEGIN axi_bram_ctrl                                                             ##{PCIE port :: in_use}
 PARAMETER INSTANCE = axi_bram_ctrl_pcie_mailbox                                ##{PCIE port :: in_use}
 PARAMETER HW_VER = 1.03.a                                                      ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_BASEADDR = 0x50000000                                        ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_HIGHADDR = 0x50000FFF                                        ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_ID_WIDTH = 4                                                 ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_SUPPORTS_NARROW_BURST = 1                                    ##{PCIE port :: in_use}
 PARAMETER C_SINGLE_PORT_BRAM = 1                                               ##{PCIE port :: in_use}
 PARAMETER C_INTERCONNECT_S_AXI_MASTERS = PCIe.M_AXI                            ##{PCIE port :: in_use}
 PARAMETER C_S_AXI_DATA_WIDTH = 32                                              ##{PCIE port :: in_use}
 BUS_INTERFACE BRAM_PORTA = axi_bram_ctrl_pcie_mailbox_BRAM_PORTA               ##{PCIE port :: in_use}
 BUS_INTERFACE S_AXI = AXI_MM_PCIe                                              ##{PCIE port :: in_use}
 PORT S_AXI_ACLK = PCIe_axi_aclk_out                                            ##{PCIE port :: in_use}
END                                                                             ##{PCIE port :: in_use}
                                                                                ##{PCIE port :: in_use}
BEGIN axi_interconnect                                                          ##{PCIE port :: in_use}
 PARAMETER INSTANCE = AXI_MM_PCIe                                               ##{PCIE port :: in_use}
 PARAMETER HW_VER = 1.05.a                                                      ##{PCIE port :: in_use}
 PORT INTERCONNECT_ACLK = PCIe_axi_aclk_out                                     ##{PCIE port :: in_use}
 PORT INTERCONNECT_ARESETN = proc_sys_reset_0_Interconnect_aresetn              ##{PCIE port :: in_use}
END                                                                             ##{PCIE port :: in_use}
                                                                                ##{PCIE port :: in_use}
BEGIN util_vector_logic                                                         ##{PCIE port :: in_use}
 PARAMETER INSTANCE = util_vector_logic_or_1                                    ##{PCIE port :: in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{PCIE port :: in_use}
 PARAMETER C_OPERATION = or                                                     ##{PCIE port :: in_use}
 PARAMETER C_SIZE = 1                                                           ##{PCIE port :: in_use}
 PORT Op1 = rtdexPcieMsi_s                                                      ##{PCIE port :: in_use}
 PORT Op2 = cdmaMsi_s                                                           ##{PCIE port :: cdma_in_use}
 PORT Op2 = net_gnd                                                             ##{PCIE port :: in_use_cdma_unused}
 PORT Res = intermediateRes_s                                                   ##{PCIE port :: in_use}
END                                                                             ##{PCIE port :: in_use}
                                                                                ##{PCIE port :: in_use}
BEGIN util_vector_logic                                                         ##{PCIE port :: in_use}
 PARAMETER INSTANCE = util_vector_logic_or_2                                    ##{PCIE port :: in_use}
 PARAMETER HW_VER = 1.00.a                                                      ##{PCIE port :: in_use}
 PARAMETER C_OPERATION = or                                                     ##{PCIE port :: in_use}
 PARAMETER C_SIZE = 1                                                           ##{PCIE port :: in_use}
 PORT Op1 = intermediateRes_s                                                   ##{PCIE port :: in_use}
 PORT Op2 = lyt_axi_pcie_rtdex_0_o_PcieMsi_p                                    ##{PCIE port :: in_use}
 PORT Res = PcieMsi_s                                                           ##{PCIE port :: in_use}
END                                                                             ##{PCIE port :: in_use}

#BEGIN edk_GTX_to_bufg                                                           ##{AURORA port :: in_use}
# PARAMETER INSTANCE = edk_GTX_to_bufg_0                                         ##{AURORA port :: in_use}
# PARAMETER HW_VER = 1.00.a                                                      ##{AURORA port :: in_use}
# PORT i_GTX_CLK_p = FCLKA_P                                                     ##{AURORA port :: in_use}
# PORT i_GTX_CLK_n = FCLKA_N                                                     ##{AURORA port :: in_use}
# PORT o_GTX_Bufg_clk = AMC_FclkA_s                                              ##{AURORA port :: in_use}
#END                                                                             ##{AURORA port :: in_use}

BEGIN lyt_aurora                                                                                ##{AURORA port :: 4_7_in_use}
 PARAMETER INSTANCE = aurora_core4_7                                                            ##{AURORA port :: 4_7_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{AURORA port :: 4_7_in_use}
 PARAMETER USER_DATA_WIDTH = 32                                                                 ##{AURORA port :: 4_7_in_use}
 PARAMETER AURORA_SPEED = 0                                                                     ##{AURORA port :: 4_7_in_use}
# PARAMETER AURORA_SPEED 0 = 3G125_125MHz                                                       ##{AURORA port :: 4_7_in_use}
# PARAMETER AURORA_SPEED 1 = 3G125_156.25MHz                                                    ##{AURORA port :: 4_7_in_use}
# PARAMETER AURORA_SPEED 2 = 5G_125MHz                                                          ##{AURORA port :: 4_7_in_use}
# PARAMETER AURORA_SPEED 3 = 5G_156.25MHz                                                       ##{AURORA port :: 4_7_in_use}
 PORT ov32_Aurora_CoreID_p = v32_Aurora4_7_CoreID_s                                             ##{AURORA port :: 4_7_in_use}
 PORT i_Fifo_User_Clock_p = DesignClk_s                                                         ##{AURORA port :: 4_7_in_use}
 PORT ov_Fifo_RX_Data_p = aurora_amc4_7_RX_Fifo_Data_s                                          ##{AURORA port :: 4_7_in_use}
 PORT iv_Fifo_TX_Data_p = aurora_amc4_7_TX_Fifo_Data_s                                          ##{AURORA port :: 4_7_in_use}
 PORT i_RX_Fifo_Read_Enable_p = aurora_amc4_7_RX_Fifo_Read_Enable_s                             ##{AURORA port :: 4_7_in_use}
 PORT i_TX_Fifo_Write_Enable_p = aurora_amc4_7_TX_Fifo_Write_Enable_s                           ##{AURORA port :: 4_7_in_use}
 PORT o_RX_Data_Valid_p = aurora_amc4_7_RX_Data_Valid_s                                         ##{AURORA port :: 4_7_in_use}
 PORT o_TX_Fifo_Ready_p = aurora_amc4_7_TX_Fifo_Ready_s                                         ##{AURORA port :: 4_7_in_use}
 #PORT ov16_RX_Fifo_Write_Data_Count_p = v16_RX_Fifo_Write_Data_Count_s                         ##{AURORA port :: 4_7_in_use}
 #PORT ov16_RX_Fifo_Read_Data_Count_p = v16_RX_Fifo_Read_Data_Count_s                           ##{AURORA port :: 4_7_in_use}
 PORT iv16_RX_Fifo_Prog_Almost_Full_Threshold_p = %{v16_aurora_amc4_7_RX_Fifo_Prog_Almost_Full_Threshold_s}   ##{AURORA port :: 4_7_in_use}
 PORT iv16_RX_Fifo_Prog_Almost_Empty_Threshold_p = %{v16_aurora_amc4_7_RX_Fifo_Prog_Almost_Empty_Threshold_s} ##{AURORA port :: 4_7_in_use}
 #PORT ov16_TX_Fifo_Write_Data_Count_p = v16_TX_Fifo_Write_Data_Count_s                          ##{AURORA port :: 4_7_in_use}
 #PORT ov16_TX_Fifo_Read_Data_Count_p = v16_TX_Fifo_Read_Data_Count_s                            ##{AURORA port :: 4_7_in_use}
 PORT iv16_TX_Fifo_Prog_Almost_Full_Threshold_p = %{v16_aurora_amc4_7_TX_Fifo_Prog_Almost_Full_Threshold_s}   ##{AURORA port :: 4_7_in_use}
 PORT iv16_TX_Fifo_Prog_Almost_Empty_Threshold_p = %{v16_aurora_amc4_7_TX_Fifo_Prog_Almost_Empty_Threshold_s} ##{AURORA port :: 4_7_in_use}
 PORT iv4_Aurora_GTX_RX_p = v4_Aurora4_7_GTX_RXp_s                                              ##{AURORA port :: 4_7_in_use}
 PORT iv4_Aurora_GTX_RX_n = v4_Aurora4_7_GTX_RXn_s                                              ##{AURORA port :: 4_7_in_use}
 PORT ov4_Aurora_GTX_TX_p = v4_Aurora4_7_GTX_TXp_s                                              ##{AURORA port :: 4_7_in_use}
 PORT ov4_Aurora_GTX_TX_n = v4_Aurora4_7_GTX_TXn_s                                              ##{AURORA port :: 4_7_in_use}
 PORT i_Aurora_GTX_CLK_p = Aurora4_7_GTX_CLKp_s                                                 ##{AURORA port :: 4_7_in_use}
 PORT i_Aurora_GTX_CLK_n = Aurora4_7_GTX_CLKn_s                                                 ##{AURORA port :: 4_7_in_use}
 PORT iv32_Aurora_Reg0_Control_p = iv32_Aurora4_7_Reg0_Control_s                                ##{AURORA port :: 4_7_in_use}
 PORT ov32_Aurora_Reg0_Control_p = ov32_Aurora4_7_Reg0_Control_s                                ##{AURORA port :: 4_7_in_use}
 PORT ov32_Aurora_Reg1_Receive_Data_Count_p = v32_Aurora4_7_Reg1_Receive_Count_s                ##{AURORA port :: 4_7_in_use}
 PORT ov32_Aurora_Reg2_Transmit_Data_Count_p = v32_Aurora4_7_Reg2_Transmit_Count_s              ##{AURORA port :: 4_7_in_use}
END                                                                                             ##{AURORA port :: 4_7_in_use}

BEGIN lyt_aurora                                                                                ##{AURORA port :: 8_11_in_use}
 PARAMETER INSTANCE = aurora_core8_11                                                           ##{AURORA port :: 8_11_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{AURORA port :: 8_11_in_use}
 PARAMETER USER_DATA_WIDTH = 32                                                                 ##{AURORA port :: 8_11_in_use}
 PARAMETER AURORA_SPEED = 1                                                                     ##{AURORA port :: 8_11_in_use}
# PARAMETER AURORA_SPEED 0 = 3G125_125MHz                                                       ##{AURORA port :: 8_11_in_use}
# PARAMETER AURORA_SPEED 1 = 3G125_156.25MHz                                                    ##{AURORA port :: 8_11_in_use}
# PARAMETER AURORA_SPEED 2 = 5G_125MHz                                                          ##{AURORA port :: 8_11_in_use}
# PARAMETER AURORA_SPEED 3 = 5G_156.25MHz                                                       ##{AURORA port :: 8_11_in_use}
 PORT ov32_Aurora_CoreID_p = v32_Aurora8_11_CoreID_s                                            ##{AURORA port :: 8_11_in_use}
 PORT i_Fifo_User_Clock_p = DesignClk_s                                                         ##{AURORA port :: 8_11_in_use}
 PORT ov_Fifo_RX_Data_p = aurora_amc8_11_RX_Fifo_data_s                                         ##{AURORA port :: 8_11_in_use}
 PORT iv_Fifo_TX_Data_p = aurora_amc8_11_TX_Fifo_data_s                                         ##{AURORA port :: 8_11_in_use}
 PORT i_RX_Fifo_Read_Enable_p = aurora_amc8_11_RX_Fifo_Read_Enable_s                            ##{AURORA port :: 8_11_in_use}
 PORT i_TX_Fifo_Write_Enable_p = aurora_amc8_11_TX_Fifo_Write_Enable_s                          ##{AURORA port :: 8_11_in_use}
 PORT o_RX_Data_Valid_p = aurora_amc8_11_RX_Data_Valid_s                                        ##{AURORA port :: 8_11_in_use}
 PORT o_TX_Fifo_Ready_p = aurora_amc8_11_TX_Fifo_Ready_s                                        ##{AURORA port :: 8_11_in_use}
 #PORT ov16_RX_Fifo_Write_Data_Count_p = v16_RX_Fifo_Write_Data_Count_s                         ##{AURORA port :: 8_11_in_use}
 #PORT ov16_RX_Fifo_Read_Data_Count_p = v16_RX_Fifo_Read_Data_Count_s                           ##{AURORA port :: 8_11_in_use}
 PORT iv16_RX_Fifo_Prog_Almost_Full_Threshold_p = %{v16_aurora_amc8_11_RX_Fifo_Prog_Almost_Full_Threshold_s}   ##{AURORA port :: 8_11_in_use}
 PORT iv16_RX_Fifo_Prog_Almost_Empty_Threshold_p = %{v16_aurora_amc8_11_RX_Fifo_Prog_Almost_Empty_Threshold_s} ##{AURORA port :: 8_11_in_use}
 #PORT ov16_TX_Fifo_Write_Data_Count_p = v16_TX_Fifo_Write_Data_Count_s                          ##{AURORA port :: 8_11_in_use}
 #PORT ov16_TX_Fifo_Read_Data_Count_p = v16_TX_Fifo_Read_Data_Count_s                            ##{AURORA port :: 8_11_in_use}
 PORT iv16_TX_Fifo_Prog_Almost_Full_Threshold_p = %{v16_aurora_amc8_11_TX_Fifo_Prog_Almost_Full_Threshold_s}   ##{AURORA port :: 8_11_in_use}
 PORT iv16_TX_Fifo_Prog_Almost_Empty_Threshold_p = %{v16_aurora_amc8_11_TX_Fifo_Prog_Almost_Empty_Threshold_s} ##{AURORA port :: 8_11_in_use}
 PORT iv4_Aurora_GTX_RX_p = v4_Aurora8_11_GTX_RXp_s                                             ##{AURORA port :: 8_11_in_use}
 PORT iv4_Aurora_GTX_RX_n = v4_Aurora8_11_GTX_RXn_s                                             ##{AURORA port :: 8_11_in_use}
 PORT ov4_Aurora_GTX_TX_p = v4_Aurora8_11_GTX_TXp_s                                             ##{AURORA port :: 8_11_in_use}
 PORT ov4_Aurora_GTX_TX_n = v4_Aurora8_11_GTX_TXn_s                                             ##{AURORA port :: 8_11_in_use}
 PORT i_Aurora_GTX_CLK_p = Aurora8_11_GTX_CLKp_s                                                ##{AURORA port :: 8_11_in_use}
 PORT i_Aurora_GTX_CLK_n = Aurora8_11_GTX_CLKn_s                                                ##{AURORA port :: 8_11_in_use}
 PORT iv32_Aurora_Reg0_Control_p = iv32_Aurora8_11_Reg0_Control_s                               ##{AURORA port :: 8_11_in_use}
 PORT ov32_Aurora_Reg0_Control_p = ov32_Aurora8_11_Reg0_Control_s                               ##{AURORA port :: 8_11_in_use}
 PORT ov32_Aurora_Reg1_Receive_Data_Count_p = v32_Aurora8_11_Reg1_Receive_Count_s               ##{AURORA port :: 8_11_in_use}
 PORT ov32_Aurora_Reg2_Transmit_Data_Count_p = v32_Aurora8_11_Reg2_Transmit_Count_s             ##{AURORA port :: 8_11_in_use}
END                                                                                             ##{AURORA port :: 8_11_in_use}

BEGIN lyt_aurora                                                                                ##{AURORA port :: 17_20_in_use}
 PARAMETER INSTANCE = aurora_core17_20                                                          ##{AURORA port :: 17_20_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{AURORA port :: 17_20_in_use}
 PARAMETER USER_DATA_WIDTH = 32                                                                 ##{AURORA port :: 17_20_in_use}
 PARAMETER AURORA_SPEED = 1                                                                     ##{AURORA port :: 17_20_in_use}
# PARAMETER AURORA_SPEED 0 = 3G125_125MHz                                                       ##{AURORA port :: 17_20_in_use}
# PARAMETER AURORA_SPEED 1 = 3G125_156.25MHz                                                    ##{AURORA port :: 17_20_in_use}
# PARAMETER AURORA_SPEED 2 = 5G_125MHz                                                          ##{AURORA port :: 17_20_in_use}
# PARAMETER AURORA_SPEED 3 = 5G_156.25MHz                                                       ##{AURORA port :: 17_20_in_use}
 PORT ov32_Aurora_CoreID_p = v32_Aurora17_20_CoreID_s                                           ##{AURORA port :: 17_20_in_use}
 PORT i_Fifo_User_Clock_p = DesignClk_s                                                         ##{AURORA port :: 17_20_in_use}
 PORT ov_Fifo_RX_Data_p = aurora_amc17_20_RX_Fifo_Data_s                                        ##{AURORA port :: 17_20_in_use}
 PORT iv_Fifo_TX_Data_p = aurora_amc17_20_TX_Fifo_Data_s                                        ##{AURORA port :: 17_20_in_use}
 PORT i_RX_Fifo_Read_Enable_p = aurora_amc17_20_RX_Fifo_Read_Enable_s                           ##{AURORA port :: 17_20_in_use}
 PORT i_TX_Fifo_Write_Enable_p = aurora_amc17_20_TX_Fifo_Write_Enable_s                         ##{AURORA port :: 17_20_in_use}
 PORT o_RX_Data_Valid_p = aurora_amc17_20_RX_Data_Valid_s                                       ##{AURORA port :: 17_20_in_use}
 PORT o_TX_Fifo_Ready_p = aurora_amc17_20_TX_Fifo_Ready_s                                       ##{AURORA port :: 17_20_in_use}
 #PORT ov16_RX_Fifo_Write_Data_Count_p = v16_RX_Fifo_Write_Data_Count_s                         ##{AURORA port :: 17_20_in_use}
 #PORT ov16_RX_Fifo_Read_Data_Count_p = v16_RX_Fifo_Read_Data_Count_s                           ##{AURORA port :: 17_20_in_use}
 PORT iv16_RX_Fifo_Prog_Almost_Full_Threshold_p = %{v16_aurora_amc17_20_RX_Fifo_Prog_Almost_Full_Threshold_s}   ##{AURORA port :: 17_20_in_use}
 PORT iv16_RX_Fifo_Prog_Almost_Empty_Threshold_p = %{v16_aurora_amc17_20_RX_Fifo_Prog_Almost_Empty_Threshold_s} ##{AURORA port :: 17_20_in_use}
 #PORT ov16_TX_Fifo_Write_Data_Count_p = v16_TX_Fifo_Write_Data_Count_s                          ##{AURORA port :: 17_20_in_use}
 #PORT ov16_TX_Fifo_Read_Data_Count_p = v16_TX_Fifo_Read_Data_Count_s                            ##{AURORA port :: 17_20_in_use}
 PORT iv16_TX_Fifo_Prog_Almost_Full_Threshold_p = %{v16_aurora_amc17_20_TX_Fifo_Prog_Almost_Full_Threshold_s}   ##{AURORA port :: 17_20_in_use}
 PORT iv16_TX_Fifo_Prog_Almost_Empty_Threshold_p = %{v16_aurora_amc17_20_TX_Fifo_Prog_Almost_Empty_Threshold_s} ##{AURORA port :: 17_20_in_use}
 PORT iv4_Aurora_GTX_RX_p = v4_Aurora17_20_GTX_RXp_s                                            ##{AURORA port :: 17_20_in_use}
 PORT iv4_Aurora_GTX_RX_n = v4_Aurora17_20_GTX_RXn_s                                            ##{AURORA port :: 17_20_in_use}
 PORT ov4_Aurora_GTX_TX_p = v4_Aurora17_20_GTX_TXp_s                                            ##{AURORA port :: 17_20_in_use}
 PORT ov4_Aurora_GTX_TX_n = v4_Aurora17_20_GTX_TXn_s                                            ##{AURORA port :: 17_20_in_use}
 PORT i_Aurora_GTX_CLK_p = Aurora17_20_GTX_CLKp_s                                               ##{AURORA port :: 17_20_in_use}
 PORT i_Aurora_GTX_CLK_n = Aurora17_20_GTX_CLKn_s                                               ##{AURORA port :: 17_20_in_use}
 PORT iv32_Aurora_Reg0_Control_p = iv32_Aurora17_20_Reg0_Control_s                              ##{AURORA port :: 17_20_in_use}
 PORT ov32_Aurora_Reg0_Control_p = ov32_Aurora17_20_Reg0_Control_s                              ##{AURORA port :: 17_20_in_use}
 PORT ov32_Aurora_Reg1_Receive_Data_Count_p = v32_Aurora17_20_Reg1_Receive_Count_s              ##{AURORA port :: 17_20_in_use}
 PORT ov32_Aurora_Reg2_Transmit_Data_Count_p = v32_Aurora17_20_Reg2_Transmit_Count_s            ##{AURORA port :: 17_20_in_use}
END                                                                                             ##{AURORA port :: 17_20_in_use}

BEGIN lyt_idelayctrl                                                                            ##{LVDS port :: mestor_in_use}
 PARAMETER INSTANCE = mestor_idelayctrl                                                         ##{LVDS port :: mestor_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{LVDS port :: mestor_in_use}
 PORT i_rst_p = sys_periph_reset                                                                ##{LVDS port :: mestor_in_use}
 PORT i_clk_p = clk_200_0000MHzMMCM0                                                            ##{LVDS port :: mestor_in_use}
END                                                                                             ##{LVDS port :: mestor_in_use}

BEGIN lyt_lvds_gpio                                                                             ##{LVDS port :: lvds_gpio_0_in_use}
 PARAMETER INSTANCE = mestor_lvds0                                                              ##{LVDS port :: lvds_gpio_0_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{LVDS port :: lvds_gpio_0_in_use}
 PARAMETER DATA_WIDTH = %{mestor_lvds0_data_width}                                              ##{LVDS port :: lvds_gpio_0_in_use}
 PARAMETER DATA_INPUT_DELAY = %{mestor_lvds0_data_input_delay}                                  ##{LVDS port :: lvds_gpio_0_in_use}
 PARAMETER DATA_OUTPUT_DELAY = %{mestor_lvds0_data_output_delay}                                ##{LVDS port :: lvds_gpio_0_in_use}
 PORT i_SystemClk_p = clk_100_0000MHzMMCM0                                                      ##{LVDS port :: lvds_gpio_0_in_use}
 PORT ov32_InfoRegister_p = mestor_lvds_ov32_lvds0_coreid_s                                     ##{LVDS port :: lvds_gpio_0_in_use}
 PORT iv32_CtrlRegister_p = mestor_lvds_iv32_lvds0_ctrl_s                                       ##{LVDS port :: lvds_gpio_0_in_use}
 PORT iv32_ValueRegister_p = mestor_lvds_iv32_lvds0_value_s                                     ##{LVDS port :: lvds_gpio_0_in_use}
 PORT ov32_ValueRegister_p = mestor_lvds_ov32_lvds0_value_s                                     ##{LVDS port :: lvds_gpio_0_in_use}
 PORT iv32_OERegister_p = mestor_lvds_iv32_lvds0_oe_s                                           ##{LVDS port :: lvds_gpio_0_in_use}
 PORT iv_Data_p = mestor_lvds0_iv_Data_s                                                        ##{LVDS port :: lvds_gpio_0_write_in_use}
 PORT ov_Data_p = mestor_lvds0_ov_Data_s                                                        ##{LVDS port :: lvds_gpio_0_read_in_use}
 PORT iv_OutputEnable_p = mestor_lvds0_iv_OutputEnable_s                                        ##{LVDS port :: lvds_gpio_0_write_in_use}
 PORT iovdp_lvds_p = mestor_data0_padIOp_p                                                      ##{LVDS port :: lvds_gpio_0_in_use}
 PORT iovdn_lvds_p = mestor_data0_padIOn_p                                                      ##{LVDS port :: lvds_gpio_0_in_use}
END                                                                                             ##{LVDS port :: lvds_gpio_0_in_use}

BEGIN lyt_lvds_gpio                                                                             ##{LVDS port :: lvds_gpio_1_in_use}
 PARAMETER INSTANCE = mestor_lvds1                                                              ##{LVDS port :: lvds_gpio_1_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{LVDS port :: lvds_gpio_1_in_use}
 PARAMETER DATA_WIDTH = %{mestor_lvds1_data_width}                                              ##{LVDS port :: lvds_gpio_1_in_use}
 PARAMETER DATA_INPUT_DELAY = %{mestor_lvds1_data_input_delay}                                  ##{LVDS port :: lvds_gpio_1_in_use}
 PARAMETER DATA_OUTPUT_DELAY = %{mestor_lvds1_data_output_delay}                                ##{LVDS port :: lvds_gpio_1_in_use}
 PORT i_SystemClk_p = clk_100_0000MHzMMCM0                                                      ##{LVDS port :: lvds_gpio_1_in_use}
 PORT ov32_InfoRegister_p = mestor_lvds_ov32_lvds1_coreid_s                                     ##{LVDS port :: lvds_gpio_1_in_use}
 PORT iv32_CtrlRegister_p = mestor_lvds_iv32_lvds1_ctrl_s                                       ##{LVDS port :: lvds_gpio_1_in_use}
 PORT iv32_ValueRegister_p = mestor_lvds_iv32_lvds1_value_s                                     ##{LVDS port :: lvds_gpio_1_in_use}
 PORT ov32_ValueRegister_p = mestor_lvds_ov32_lvds1_value_s                                     ##{LVDS port :: lvds_gpio_1_in_use}
 PORT iv32_OERegister_p = mestor_lvds_iv32_lvds1_oe_s                                           ##{LVDS port :: lvds_gpio_1_in_use}
 PORT iv_Data_p = mestor_lvds1_iv_Data_s                                                        ##{LVDS port :: lvds_gpio_1_write_in_use}
 PORT ov_Data_p = mestor_lvds1_ov_Data_s                                                        ##{LVDS port :: lvds_gpio_1_read_in_use}
 PORT iv_OutputEnable_p = mestor_lvds1_iv_OutputEnable_s                                        ##{LVDS port :: lvds_gpio_1_write_in_use}
 PORT iovdp_lvds_p = mestor_data1_padIOp_p                                                      ##{LVDS port :: lvds_gpio_1_in_use}
 PORT iovdn_lvds_p = mestor_data1_padIOn_p                                                      ##{LVDS port :: lvds_gpio_1_in_use}
END                                                                                             ##{LVDS port :: lvds_gpio_1_in_use}

BEGIN lyt_lvds_gpio                                                                             ##{LVDS port :: lvds_gpio_2_in_use}
 PARAMETER INSTANCE = mestor_lvds2                                                              ##{LVDS port :: lvds_gpio_2_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{LVDS port :: lvds_gpio_2_in_use}
 PARAMETER DATA_WIDTH = %{mestor_lvds2_data_width}                                              ##{LVDS port :: lvds_gpio_2_in_use}
 PARAMETER DATA_INPUT_DELAY = %{mestor_lvds2_data_input_delay}                                  ##{LVDS port :: lvds_gpio_2_in_use}
 PARAMETER DATA_OUTPUT_DELAY = %{mestor_lvds2_data_output_delay}                                ##{LVDS port :: lvds_gpio_2_in_use}
 PORT i_SystemClk_p = clk_100_0000MHzMMCM0                                                      ##{LVDS port :: lvds_gpio_2_in_use}
 PORT ov32_InfoRegister_p = mestor_lvds_ov32_lvds2_coreid_s                                     ##{LVDS port :: lvds_gpio_2_in_use}
 PORT iv32_CtrlRegister_p = mestor_lvds_iv32_lvds2_ctrl_s                                       ##{LVDS port :: lvds_gpio_2_in_use}
 PORT iv32_ValueRegister_p = mestor_lvds_iv32_lvds2_value_s                                     ##{LVDS port :: lvds_gpio_2_in_use}
 PORT ov32_ValueRegister_p = mestor_lvds_ov32_lvds2_value_s                                     ##{LVDS port :: lvds_gpio_2_in_use}
 PORT iv32_OERegister_p = mestor_lvds_iv32_lvds2_oe_s                                           ##{LVDS port :: lvds_gpio_2_in_use}
 PORT iv_Data_p = mestor_lvds2_iv_Data_s                                                        ##{LVDS port :: lvds_gpio_2_write_in_use}
 PORT ov_Data_p = mestor_lvds2_ov_Data_s                                                        ##{LVDS port :: lvds_gpio_2_read_in_use}
 PORT iv_OutputEnable_p = mestor_lvds2_iv_OutputEnable_s                                        ##{LVDS port :: lvds_gpio_2_write_in_use}
 PORT iovdp_lvds_p = mestor_data2_padIOp_p                                                      ##{LVDS port :: lvds_gpio_2_in_use}
 PORT iovdn_lvds_p = mestor_data2_padIOn_p                                                      ##{LVDS port :: lvds_gpio_2_in_use}
END                                                                                             ##{LVDS port :: lvds_gpio_2_in_use}

BEGIN lyt_lvds_gpio                                                                             ##{LVDS port :: lvds_gpio_3_in_use}
 PARAMETER INSTANCE = mestor_lvds3                                                              ##{LVDS port :: lvds_gpio_3_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{LVDS port :: lvds_gpio_3_in_use}
 PARAMETER DATA_WIDTH = %{mestor_lvds3_data_width}                                              ##{LVDS port :: lvds_gpio_3_in_use}
 PARAMETER DATA_INPUT_DELAY = %{mestor_lvds3_data_input_delay}                                  ##{LVDS port :: lvds_gpio_3_in_use}
 PARAMETER DATA_OUTPUT_DELAY = %{mestor_lvds3_data_output_delay}                                ##{LVDS port :: lvds_gpio_3_in_use}
 PORT i_SystemClk_p = clk_100_0000MHzMMCM0                                                      ##{LVDS port :: lvds_gpio_3_in_use}
 PORT ov32_InfoRegister_p = mestor_lvds_ov32_lvds3_coreid_s                                     ##{LVDS port :: lvds_gpio_3_in_use}
 PORT iv32_CtrlRegister_p = mestor_lvds_iv32_lvds3_ctrl_s                                       ##{LVDS port :: lvds_gpio_3_in_use}
 PORT iv32_ValueRegister_p = mestor_lvds_iv32_lvds3_value_s                                     ##{LVDS port :: lvds_gpio_3_in_use}
 PORT ov32_ValueRegister_p = mestor_lvds_ov32_lvds3_value_s                                     ##{LVDS port :: lvds_gpio_3_in_use}
 PORT iv32_OERegister_p = mestor_lvds_iv32_lvds3_oe_s                                           ##{LVDS port :: lvds_gpio_3_in_use}
 PORT iv_Data_p = mestor_lvds3_iv_Data_s                                                        ##{LVDS port :: lvds_gpio_3_write_in_use}
 PORT ov_Data_p = mestor_lvds3_ov_Data_s                                                        ##{LVDS port :: lvds_gpio_3_read_in_use}
 PORT iv_OutputEnable_p = mestor_lvds3_iv_OutputEnable_s                                        ##{LVDS port :: lvds_gpio_3_write_in_use}
 PORT iovdp_lvds_p = mestor_data3_padIOp_p                                                      ##{LVDS port :: lvds_gpio_3_in_use}
 PORT iovdn_lvds_p = mestor_data3_padIOn_p                                                      ##{LVDS port :: lvds_gpio_3_in_use}
END                                                                                             ##{LVDS port :: lvds_gpio_3_in_use}

BEGIN lyt_lvds_sync                                                                             ##{LVDS port :: lvds_sync_0_in_use}
 PARAMETER INSTANCE = mestor_lvds0                                                              ##{LVDS port :: lvds_sync_0_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{LVDS port :: lvds_sync_0_in_use}
 PARAMETER DATA_WIDTH = %{mestor_lvds0_data_width}                                              ##{LVDS port :: lvds_sync_0_in_use}
 PARAMETER DATA_INPUT_DELAY = %{mestor_lvds0_data_input_delay}                                  ##{LVDS port :: lvds_sync_0_in_use}
 PARAMETER DATA_OUTPUT_DELAY = %{mestor_lvds0_data_output_delay}                                ##{LVDS port :: lvds_sync_0_in_use}
 PARAMETER CLOCK_INPUT_DELAY = %{mestor_lvds0_clock_input_delay}                                ##{LVDS port :: lvds_sync_0_in_use}
 PARAMETER CLOCK_OUTPUT_DELAY = %{mestor_lvds0_clock_output_delay}                              ##{LVDS port :: lvds_sync_0_in_use}
 PARAMETER FALLING_EDGE_INPUT = %{mestor_lvds0_falling_edge_input}                              ##{LVDS port :: lvds_sync_0_in_use}
 PARAMETER FALLING_EDGE_OUTPUT = %{mestor_lvds0_falling_edge_output}                            ##{LVDS port :: lvds_sync_0_in_use}
 PARAMETER RX_CLK_USE_BUFG = %{mestor_lvds0_rx_clk_use_bufg}                                    ##{LVDS port :: lvds_sync_0_in_use}
 PORT i_SystemClk_p = clk_100_0000MHzMMCM0                                                      ##{LVDS port :: lvds_sync_0_in_use}
 PORT ov32_InfoRegister_p = mestor_lvds_ov32_lvds0_coreid_s                                     ##{LVDS port :: lvds_sync_0_in_use}
 PORT iv32_CtrlRegister_p = mestor_lvds_iv32_lvds0_ctrl_s                                       ##{LVDS port :: lvds_sync_0_in_use}
 PORT iv32_OERegister_p = mestor_lvds_iv32_lvds0_oe_s                                           ##{LVDS port :: lvds_sync_0_in_use}
 PORT i_UserClk_p = DesignClk_s                                                                 ##{LVDS port :: lvds_sync_0_in_use}
 PORT i_OutputEnable_p = mestor_lvds0_i_OutputEnable_s                                          ##{LVDS port :: lvds_sync_0_write_in_use}
 PORT o_RxClk_p = mestor_lvds0_o_RxClk_p                                                        ##{LVDS port :: lvds_sync_0_read_in_use}
 PORT o_RxReady_p = mestor_lvds0_o_RxReady_s                                                    ##{LVDS port :: lvds_sync_0_read_in_use}
 PORT i_RxRe_p = mestor_lvds0_i_RxRe_s                                                          ##{LVDS port :: lvds_sync_0_read_in_use}
 PORT ov_RxData_p = mestor_lvds0_ov_RxData_s                                                    ##{LVDS port :: lvds_sync_0_read_in_use}
 PORT o_RxDataValid_p = mestor_lvds0_o_RxDataValid_s                                            ##{LVDS port :: lvds_sync_0_read_in_use}
 PORT i_TxClk_p = %{mestor_lvds0_TxClk}                                                         ##{LVDS port :: lvds_sync_0_write_in_use}
 PORT o_TxReady_p = mestor_lvds0_o_TxReady_s                                                    ##{LVDS port :: lvds_sync_0_write_in_use}
 PORT iv_TxData_p = mestor_lvds0_iv_TxData_s                                                    ##{LVDS port :: lvds_sync_0_write_in_use}
 PORT i_TxWe_p = mestor_lvds0_i_TxWe_s                                                          ##{LVDS port :: lvds_sync_0_write_in_use}
 PORT iodp_lvds_clk_p = mestor_clk0_padIOp_p                                                    ##{LVDS port :: lvds_sync_0_in_use}
 PORT iodn_lvds_clk_p = mestor_clk0_padIOn_p                                                    ##{LVDS port :: lvds_sync_0_in_use}
 PORT iodp_lvds_valid_p = mestor_valid0_padIOp_p                                                ##{LVDS port :: lvds_sync_0_in_use}
 PORT iodn_lvds_valid_p = mestor_valid0_padIOn_p                                                ##{LVDS port :: lvds_sync_0_in_use}
 PORT iovdp_lvds_data_p = mestor_data0_padIOp_p                                                 ##{LVDS port :: lvds_sync_0_in_use}
 PORT iovdn_lvds_data_p = mestor_data0_padIOn_p                                                 ##{LVDS port :: lvds_sync_0_in_use}
END                                                                                             ##{LVDS port :: lvds_sync_0_in_use}

BEGIN lyt_lvds_sync                                                                             ##{LVDS port :: lvds_sync_1_in_use}
 PARAMETER INSTANCE = mestor_lvds1                                                              ##{LVDS port :: lvds_sync_1_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{LVDS port :: lvds_sync_1_in_use}
 PARAMETER DATA_WIDTH = %{mestor_lvds1_data_width}                                              ##{LVDS port :: lvds_sync_1_in_use}
 PARAMETER DATA_INPUT_DELAY = %{mestor_lvds1_data_input_delay}                                  ##{LVDS port :: lvds_sync_1_in_use}
 PARAMETER DATA_OUTPUT_DELAY = %{mestor_lvds1_data_output_delay}                                ##{LVDS port :: lvds_sync_1_in_use}
 PARAMETER CLOCK_INPUT_DELAY = %{mestor_lvds1_clock_input_delay}                                ##{LVDS port :: lvds_sync_1_in_use}
 PARAMETER CLOCK_OUTPUT_DELAY = %{mestor_lvds1_clock_output_delay}                              ##{LVDS port :: lvds_sync_1_in_use}
 PARAMETER FALLING_EDGE_INPUT = %{mestor_lvds1_falling_edge_input}                              ##{LVDS port :: lvds_sync_1_in_use}
 PARAMETER FALLING_EDGE_OUTPUT = %{mestor_lvds1_falling_edge_output}                            ##{LVDS port :: lvds_sync_1_in_use}
 PARAMETER RX_CLK_USE_BUFG = %{mestor_lvds1_rx_clk_use_bufg}                                    ##{LVDS port :: lvds_sync_1_in_use}
 PORT i_SystemClk_p = clk_100_0000MHzMMCM0                                                      ##{LVDS port :: lvds_sync_1_in_use}
 PORT ov32_InfoRegister_p = mestor_lvds_ov32_lvds1_coreid_s                                     ##{LVDS port :: lvds_sync_1_in_use}
 PORT iv32_CtrlRegister_p = mestor_lvds_iv32_lvds1_ctrl_s                                       ##{LVDS port :: lvds_sync_1_in_use}
 PORT iv32_OERegister_p = mestor_lvds_iv32_lvds1_oe_s                                           ##{LVDS port :: lvds_sync_1_in_use}
 PORT i_UserClk_p = DesignClk_s                                                                 ##{LVDS port :: lvds_sync_1_in_use}
 PORT i_OutputEnable_p = mestor_lvds1_i_OutputEnable_s                                          ##{LVDS port :: lvds_sync_1_write_in_use}
 PORT o_RxClk_p = mestor_lvds1_o_RxClk_p                                                        ##{LVDS port :: lvds_sync_1_read_in_use}
 PORT o_RxReady_p = mestor_lvds1_o_RxReady_s                                                    ##{LVDS port :: lvds_sync_1_read_in_use}
 PORT i_RxRe_p = mestor_lvds1_i_RxRe_s                                                          ##{LVDS port :: lvds_sync_1_read_in_use}
 PORT ov_RxData_p = mestor_lvds1_ov_RxData_s                                                    ##{LVDS port :: lvds_sync_1_read_in_use}
 PORT o_RxDataValid_p = mestor_lvds1_o_RxDataValid_s                                            ##{LVDS port :: lvds_sync_1_read_in_use}
 PORT i_TxClk_p = %{mestor_lvds1_TxClk}                                                         ##{LVDS port :: lvds_sync_1_write_in_use}
 PORT o_TxReady_p = mestor_lvds1_o_TxReady_s                                                    ##{LVDS port :: lvds_sync_1_write_in_use}
 PORT iv_TxData_p = mestor_lvds1_iv_TxData_s                                                    ##{LVDS port :: lvds_sync_1_write_in_use}
 PORT i_TxWe_p = mestor_lvds1_i_TxWe_s                                                          ##{LVDS port :: lvds_sync_1_write_in_use}
 PORT iodp_lvds_clk_p = mestor_clk1_padIOp_p                                                    ##{LVDS port :: lvds_sync_1_in_use}
 PORT iodn_lvds_clk_p = mestor_clk1_padIOn_p                                                    ##{LVDS port :: lvds_sync_1_in_use}
 PORT iodp_lvds_valid_p = mestor_valid1_padIOp_p                                                ##{LVDS port :: lvds_sync_1_in_use}
 PORT iodn_lvds_valid_p = mestor_valid1_padIOn_p                                                ##{LVDS port :: lvds_sync_1_in_use}
 PORT iovdp_lvds_data_p = mestor_data1_padIOp_p                                                 ##{LVDS port :: lvds_sync_1_in_use}
 PORT iovdn_lvds_data_p = mestor_data1_padIOn_p                                                 ##{LVDS port :: lvds_sync_1_in_use}
END                                                                                             ##{LVDS port :: lvds_sync_1_in_use}

BEGIN lyt_lvds_sync                                                                             ##{LVDS port :: lvds_sync_2_in_use}
 PARAMETER INSTANCE = mestor_lvds2                                                              ##{LVDS port :: lvds_sync_2_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{LVDS port :: lvds_sync_2_in_use}
 PARAMETER DATA_WIDTH = %{mestor_lvds2_data_width}                                              ##{LVDS port :: lvds_sync_2_in_use}
 PARAMETER DATA_INPUT_DELAY = %{mestor_lvds2_data_input_delay}                                  ##{LVDS port :: lvds_sync_2_in_use}
 PARAMETER DATA_OUTPUT_DELAY = %{mestor_lvds2_data_output_delay}                                ##{LVDS port :: lvds_sync_2_in_use}
 PARAMETER CLOCK_INPUT_DELAY = %{mestor_lvds2_clock_input_delay}                                ##{LVDS port :: lvds_sync_2_in_use}
 PARAMETER CLOCK_OUTPUT_DELAY = %{mestor_lvds2_clock_output_delay}                              ##{LVDS port :: lvds_sync_2_in_use}
 PARAMETER FALLING_EDGE_INPUT = %{mestor_lvds2_falling_edge_input}                              ##{LVDS port :: lvds_sync_2_in_use}
 PARAMETER FALLING_EDGE_OUTPUT = %{mestor_lvds2_falling_edge_output}                            ##{LVDS port :: lvds_sync_2_in_use}
 PARAMETER RX_CLK_USE_BUFG = %{mestor_lvds2_rx_clk_use_bufg}                                    ##{LVDS port :: lvds_sync_2_in_use}
 PORT i_SystemClk_p = clk_100_0000MHzMMCM0                                                      ##{LVDS port :: lvds_sync_2_in_use}
 PORT ov32_InfoRegister_p = mestor_lvds_ov32_lvds2_coreid_s                                     ##{LVDS port :: lvds_sync_2_in_use}
 PORT iv32_CtrlRegister_p = mestor_lvds_iv32_lvds2_ctrl_s                                       ##{LVDS port :: lvds_sync_2_in_use}
 PORT iv32_OERegister_p = mestor_lvds_iv32_lvds2_oe_s                                           ##{LVDS port :: lvds_sync_2_in_use}
 PORT i_UserClk_p = DesignClk_s                                                                 ##{LVDS port :: lvds_sync_2_in_use}
 PORT i_OutputEnable_p = mestor_lvds2_i_OutputEnable_s                                          ##{LVDS port :: lvds_sync_2_write_in_use}
 PORT o_RxClk_p = mestor_lvds2_o_RxClk_p                                                        ##{LVDS port :: lvds_sync_2_read_in_use}
 PORT o_RxReady_p = mestor_lvds2_o_RxReady_s                                                    ##{LVDS port :: lvds_sync_2_read_in_use}
 PORT i_RxRe_p = mestor_lvds2_i_RxRe_s                                                          ##{LVDS port :: lvds_sync_2_read_in_use}
 PORT ov_RxData_p = mestor_lvds2_ov_RxData_s                                                    ##{LVDS port :: lvds_sync_2_read_in_use}
 PORT o_RxDataValid_p = mestor_lvds2_o_RxDataValid_s                                            ##{LVDS port :: lvds_sync_2_read_in_use}
 PORT i_TxClk_p = %{mestor_lvds2_TxClk}                                                         ##{LVDS port :: lvds_sync_2_write_in_use}
 PORT o_TxReady_p = mestor_lvds2_o_TxReady_s                                                    ##{LVDS port :: lvds_sync_2_write_in_use}
 PORT iv_TxData_p = mestor_lvds2_iv_TxData_s                                                    ##{LVDS port :: lvds_sync_2_write_in_use}
 PORT i_TxWe_p = mestor_lvds2_i_TxWe_s                                                          ##{LVDS port :: lvds_sync_2_write_in_use}
 PORT iodp_lvds_clk_p = mestor_clk2_padIOp_p                                                    ##{LVDS port :: lvds_sync_2_in_use}
 PORT iodn_lvds_clk_p = mestor_clk2_padIOn_p                                                    ##{LVDS port :: lvds_sync_2_in_use}
 PORT iodp_lvds_valid_p = mestor_valid2_padIOp_p                                                ##{LVDS port :: lvds_sync_2_in_use}
 PORT iodn_lvds_valid_p = mestor_valid2_padIOn_p                                                ##{LVDS port :: lvds_sync_2_in_use}
 PORT iovdp_lvds_data_p = mestor_data2_padIOp_p                                                 ##{LVDS port :: lvds_sync_2_in_use}
 PORT iovdn_lvds_data_p = mestor_data2_padIOn_p                                                 ##{LVDS port :: lvds_sync_2_in_use}
END                                                                                             ##{LVDS port :: lvds_sync_2_in_use}

BEGIN lyt_lvds_sync                                                                             ##{LVDS port :: lvds_sync_3_in_use}
 PARAMETER INSTANCE = mestor_lvds3                                                              ##{LVDS port :: lvds_sync_3_in_use}
 PARAMETER HW_VER = 1.00.a                                                                      ##{LVDS port :: lvds_sync_3_in_use}
 PARAMETER DATA_WIDTH = %{mestor_lvds3_data_width}                                              ##{LVDS port :: lvds_sync_3_in_use}
 PARAMETER DATA_INPUT_DELAY = %{mestor_lvds3_data_input_delay}                                  ##{LVDS port :: lvds_sync_3_in_use}
 PARAMETER DATA_OUTPUT_DELAY = %{mestor_lvds3_data_output_delay}                                ##{LVDS port :: lvds_sync_3_in_use}
 PARAMETER CLOCK_INPUT_DELAY = %{mestor_lvds3_clock_input_delay}                                ##{LVDS port :: lvds_sync_3_in_use}
 PARAMETER CLOCK_OUTPUT_DELAY = %{mestor_lvds3_clock_output_delay}                              ##{LVDS port :: lvds_sync_3_in_use}
 PARAMETER FALLING_EDGE_INPUT = %{mestor_lvds3_falling_edge_input}                              ##{LVDS port :: lvds_sync_3_in_use}
 PARAMETER FALLING_EDGE_OUTPUT = %{mestor_lvds3_falling_edge_output}                            ##{LVDS port :: lvds_sync_3_in_use}
 PARAMETER RX_CLK_USE_BUFG = %{mestor_lvds3_rx_clk_use_bufg}                                    ##{LVDS port :: lvds_sync_3_in_use}
 PORT i_SystemClk_p = clk_100_0000MHzMMCM0                                                      ##{LVDS port :: lvds_sync_3_in_use}
 PORT ov32_InfoRegister_p = mestor_lvds_ov32_lvds3_coreid_s                                     ##{LVDS port :: lvds_sync_3_in_use}
 PORT iv32_CtrlRegister_p = mestor_lvds_iv32_lvds3_ctrl_s                                       ##{LVDS port :: lvds_sync_3_in_use}
 PORT iv32_OERegister_p = mestor_lvds_iv32_lvds3_oe_s                                           ##{LVDS port :: lvds_sync_3_in_use}
 PORT i_UserClk_p = DesignClk_s                                                                 ##{LVDS port :: lvds_sync_3_in_use}
 PORT i_OutputEnable_p = mestor_lvds3_i_OutputEnable_s                                          ##{LVDS port :: lvds_sync_3_write_in_use}
 PORT o_RxClk_p = mestor_lvds3_o_RxClk_p                                                        ##{LVDS port :: lvds_sync_3_read_in_use}
 PORT o_RxReady_p = mestor_lvds3_o_RxReady_s                                                    ##{LVDS port :: lvds_sync_3_read_in_use}
 PORT i_RxRe_p = mestor_lvds3_i_RxRe_s                                                          ##{LVDS port :: lvds_sync_3_read_in_use}
 PORT ov_RxData_p = mestor_lvds3_ov_RxData_s                                                    ##{LVDS port :: lvds_sync_3_read_in_use}
 PORT o_RxDataValid_p = mestor_lvds3_o_RxDataValid_s                                            ##{LVDS port :: lvds_sync_3_read_in_use}
 PORT i_TxClk_p = %{mestor_lvds3_TxClk}                                                         ##{LVDS port :: lvds_sync_3_write_in_use}
 PORT o_TxReady_p = mestor_lvds3_o_TxReady_s                                                    ##{LVDS port :: lvds_sync_3_write_in_use}
 PORT iv_TxData_p = mestor_lvds3_iv_TxData_s                                                    ##{LVDS port :: lvds_sync_3_write_in_use}
 PORT i_TxWe_p = mestor_lvds3_i_TxWe_s                                                          ##{LVDS port :: lvds_sync_3_write_in_use}
 PORT iodp_lvds_clk_p = mestor_clk3_padIOp_p                                                    ##{LVDS port :: lvds_sync_3_in_use}
 PORT iodn_lvds_clk_p = mestor_clk3_padIOn_p                                                    ##{LVDS port :: lvds_sync_3_in_use}
 PORT iodp_lvds_valid_p = mestor_valid3_padIOp_p                                                ##{LVDS port :: lvds_sync_3_in_use}
 PORT iodn_lvds_valid_p = mestor_valid3_padIOn_p                                                ##{LVDS port :: lvds_sync_3_in_use}
 PORT iovdp_lvds_data_p = mestor_data3_padIOp_p                                                 ##{LVDS port :: lvds_sync_3_in_use}
 PORT iovdn_lvds_data_p = mestor_data3_padIOn_p                                                 ##{LVDS port :: lvds_sync_3_in_use}
END                                                                                             ##{LVDS port :: lvds_sync_3_in_use}
